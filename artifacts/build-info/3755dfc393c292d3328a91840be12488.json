{
	"id": "3755dfc393c292d3328a91840be12488",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"spoilsToken.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract SpoilsToken is Context, IERC20, IERC20Metadata,Ownable {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    mapping (address =>bool) onlyapprovedcontractaddress;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_ ,uint amount) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _mint(msg.sender,amount);\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function setapprovedcontractaddress(address add)external onlyOwner {\r\n       \r\n        onlyapprovedcontractaddress[add] =true;\r\n       \r\n    }\r\n\r\n    function mint(address add, uint amount)external{\r\n        require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\");\r\n        _mint(add,amount);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    function burn(address add,uint256 amount)public{\r\n        require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to burn\");\r\n        _burn(add,amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"spoilsToken.sol": {
				"SpoilsToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "setapprovedcontractaddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"spoilsToken.sol\":1471:12861  contract SpoilsToken is Context, IERC20, IERC20Metadata,Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"spoilsToken.sol\":2138:2304  constructor(string memory name_, string memory symbol_ ,uint amount) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"spoilsToken.sol\":2218:2223  _name */\n  0x04\n    /* \"spoilsToken.sol\":2218:2231  _name = name_ */\n  tag_12\n    /* \"spoilsToken.sol\":2226:2231  name_ */\n  dup5\n    /* \"spoilsToken.sol\":2218:2223  _name */\n  dup3\n    /* \"spoilsToken.sol\":2218:2231  _name = name_ */\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"spoilsToken.sol\":2242:2249  _symbol */\n  0x05\n    /* \"spoilsToken.sol\":2242:2259  _symbol = symbol_ */\n  tag_14\n    /* \"spoilsToken.sol\":2252:2259  symbol_ */\n  dup4\n    /* \"spoilsToken.sol\":2242:2249  _symbol */\n  dup3\n    /* \"spoilsToken.sol\":2242:2259  _symbol = symbol_ */\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"spoilsToken.sol\":2270:2294  _mint(msg.sender,amount) */\n  tag_15\n    /* \"spoilsToken.sol\":2276:2286  msg.sender */\n  caller\n    /* \"spoilsToken.sol\":2287:2293  amount */\n  dup3\n    /* \"spoilsToken.sol\":2270:2275  _mint */\n  tag_16\n    /* \"spoilsToken.sol\":2270:2294  _mint(msg.sender,amount) */\n  jump\t// in\ntag_15:\n    /* \"spoilsToken.sol\":2138:2304  constructor(string memory name_, string memory symbol_ ,uint amount) {... */\n  pop\n  pop\n  pop\n    /* \"spoilsToken.sol\":1471:12861  contract SpoilsToken is Context, IERC20, IERC20Metadata,Ownable {... */\n  jump(tag_41)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"spoilsToken.sol\":9074:9473  function _mint(address account, uint256 amount) internal virtual {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"spoilsToken.sol\":9158:9179  account != address(0) */\n  dup3\n  and\n    /* \"spoilsToken.sol\":9150:9215  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4410:4412   */\n  0x20\n    /* \"spoilsToken.sol\":9150:9215  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4392:4413   */\n  mstore\n    /* \"#utility.yul\":4449:4451   */\n  0x1f\n    /* \"#utility.yul\":4429:4447   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4422:4452   */\n  mstore\n    /* \"#utility.yul\":4488:4521   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4468:4486   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4461:4522   */\n  mstore\n    /* \"#utility.yul\":4539:4557   */\n  0x64\n  add\n    /* \"spoilsToken.sol\":9150:9215  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"spoilsToken.sol\":9306:9312  amount */\n  dup1\n    /* \"spoilsToken.sol\":9290:9302  _totalSupply */\n  0x03\n  0x00\n    /* \"spoilsToken.sol\":9290:9312  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"spoilsToken.sol\":9323:9341  _balances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"spoilsToken.sol\":9323:9332  _balances */\n  0x01\n    /* \"spoilsToken.sol\":9323:9341  _balances[account] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"spoilsToken.sol\":9323:9351  _balances[account] += amount */\n  dup1\n  sload\n    /* \"spoilsToken.sol\":9345:9351  amount */\n  dup4\n  swap3\n    /* \"spoilsToken.sol\":9323:9341  _balances[account] */\n  swap1\n    /* \"spoilsToken.sol\":9323:9351  _balances[account] += amount */\n  tag_28\n  swap1\n    /* \"spoilsToken.sol\":9345:9351  amount */\n  dup5\n  swap1\n    /* \"spoilsToken.sol\":9323:9351  _balances[account] += amount */\n  tag_27\n  jump\t// in\ntag_28:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":4941:4966   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"spoilsToken.sol\":9384:9385  0 */\n  0x00\n  swap1\n    /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":4929:4931   */\n  0x20\n    /* \"#utility.yul\":4914:4932   */\n  add\n    /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"spoilsToken.sol\":9074:9473  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"spoilsToken.sol\":12005:12130  function _beforeTokenTransfer(... */\ntag_25:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_35:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_36:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_44:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_46\n  tag_35\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_48\n  tag_35\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_49:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_50:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1614   */\ntag_3:\n    /* \"#utility.yul\":1099:1105   */\n  0x00\n    /* \"#utility.yul\":1107:1113   */\n  dup1\n    /* \"#utility.yul\":1115:1121   */\n  0x00\n    /* \"#utility.yul\":1168:1170   */\n  0x60\n    /* \"#utility.yul\":1156:1165   */\n  dup5\n    /* \"#utility.yul\":1147:1154   */\n  dup7\n    /* \"#utility.yul\":1143:1166   */\n  sub\n    /* \"#utility.yul\":1139:1171   */\n  slt\n    /* \"#utility.yul\":1136:1188   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1184:1185   */\n  0x00\n    /* \"#utility.yul\":1181:1182   */\n  dup1\n    /* \"#utility.yul\":1174:1186   */\n  revert\n    /* \"#utility.yul\":1136:1188   */\ntag_54:\n    /* \"#utility.yul\":1211:1227   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1276:1290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1273:1307   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1303:1304   */\n  0x00\n    /* \"#utility.yul\":1300:1301   */\n  dup1\n    /* \"#utility.yul\":1293:1305   */\n  revert\n    /* \"#utility.yul\":1273:1307   */\ntag_55:\n    /* \"#utility.yul\":1326:1387   */\n  tag_56\n    /* \"#utility.yul\":1379:1386   */\n  dup8\n    /* \"#utility.yul\":1370:1376   */\n  dup4\n    /* \"#utility.yul\":1359:1368   */\n  dup9\n    /* \"#utility.yul\":1355:1377   */\n  add\n    /* \"#utility.yul\":1326:1387   */\n  tag_36\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1316:1387   */\n  swap5\n  pop\n    /* \"#utility.yul\":1433:1435   */\n  0x20\n    /* \"#utility.yul\":1422:1431   */\n  dup7\n    /* \"#utility.yul\":1418:1436   */\n  add\n    /* \"#utility.yul\":1412:1437   */\n  mload\n    /* \"#utility.yul\":1396:1437   */\n  swap2\n  pop\n    /* \"#utility.yul\":1462:1464   */\n  dup1\n    /* \"#utility.yul\":1452:1460   */\n  dup3\n    /* \"#utility.yul\":1449:1465   */\n  gt\n    /* \"#utility.yul\":1446:1482   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1478:1479   */\n  0x00\n    /* \"#utility.yul\":1475:1476   */\n  dup1\n    /* \"#utility.yul\":1468:1480   */\n  revert\n    /* \"#utility.yul\":1446:1482   */\ntag_57:\n  pop\n    /* \"#utility.yul\":1501:1564   */\n  tag_58\n    /* \"#utility.yul\":1556:1563   */\n  dup7\n    /* \"#utility.yul\":1545:1553   */\n  dup3\n    /* \"#utility.yul\":1534:1543   */\n  dup8\n    /* \"#utility.yul\":1530:1554   */\n  add\n    /* \"#utility.yul\":1501:1564   */\n  tag_36\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1491:1564   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1604:1606   */\n  0x40\n    /* \"#utility.yul\":1593:1602   */\n  dup5\n    /* \"#utility.yul\":1589:1607   */\n  add\n    /* \"#utility.yul\":1583:1608   */\n  mload\n    /* \"#utility.yul\":1573:1608   */\n  swap1\n  pop\n    /* \"#utility.yul\":991:1614   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1619:1999   */\ntag_37:\n    /* \"#utility.yul\":1698:1699   */\n  0x01\n    /* \"#utility.yul\":1694:1706   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1741:1753   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1762:1823   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1816:1820   */\n  0x7f\n    /* \"#utility.yul\":1808:1814   */\n  dup3\n    /* \"#utility.yul\":1804:1821   */\n  and\n    /* \"#utility.yul\":1794:1821   */\n  swap2\n  pop\n    /* \"#utility.yul\":1762:1823   */\ntag_60:\n    /* \"#utility.yul\":1869:1871   */\n  0x20\n    /* \"#utility.yul\":1861:1867   */\n  dup3\n    /* \"#utility.yul\":1858:1872   */\n  lt\n    /* \"#utility.yul\":1838:1856   */\n  dup2\n    /* \"#utility.yul\":1835:1873   */\n  sub\n    /* \"#utility.yul\":1832:1993   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1915:1925   */\n  0x4e487b71\n    /* \"#utility.yul\":1910:1913   */\n  0xe0\n    /* \"#utility.yul\":1906:1926   */\n  shl\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1927   */\n  mstore\n    /* \"#utility.yul\":1950:1954   */\n  0x22\n    /* \"#utility.yul\":1947:1948   */\n  0x04\n    /* \"#utility.yul\":1940:1955   */\n  mstore\n    /* \"#utility.yul\":1978:1982   */\n  0x24\n    /* \"#utility.yul\":1975:1976   */\n  0x00\n    /* \"#utility.yul\":1968:1983   */\n  revert\n    /* \"#utility.yul\":1832:1993   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1619:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2130:2675   */\ntag_39:\n    /* \"#utility.yul\":2232:2234   */\n  0x1f\n    /* \"#utility.yul\":2227:2230   */\n  dup3\n    /* \"#utility.yul\":2224:2235   */\n  gt\n    /* \"#utility.yul\":2221:2669   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":2268:2269   */\n  0x00\n    /* \"#utility.yul\":2293:2298   */\n  dup2\n    /* \"#utility.yul\":2289:2291   */\n  dup2\n    /* \"#utility.yul\":2282:2299   */\n  mstore\n    /* \"#utility.yul\":2338:2342   */\n  0x20\n    /* \"#utility.yul\":2334:2336   */\n  dup2\n    /* \"#utility.yul\":2324:2343   */\n  keccak256\n    /* \"#utility.yul\":2408:2410   */\n  0x1f\n    /* \"#utility.yul\":2396:2406   */\n  dup6\n    /* \"#utility.yul\":2392:2411   */\n  add\n    /* \"#utility.yul\":2389:2390   */\n  0x05\n    /* \"#utility.yul\":2385:2412   */\n  shr\n    /* \"#utility.yul\":2379:2383   */\n  dup2\n    /* \"#utility.yul\":2375:2413   */\n  add\n    /* \"#utility.yul\":2444:2448   */\n  0x20\n    /* \"#utility.yul\":2432:2442   */\n  dup7\n    /* \"#utility.yul\":2429:2449   */\n  lt\n    /* \"#utility.yul\":2426:2473   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":2467:2471   */\n  dup1\n    /* \"#utility.yul\":2426:2473   */\ntag_65:\n    /* \"#utility.yul\":2522:2524   */\n  0x1f\n    /* \"#utility.yul\":2517:2520   */\n  dup6\n    /* \"#utility.yul\":2513:2525   */\n  add\n    /* \"#utility.yul\":2510:2511   */\n  0x05\n    /* \"#utility.yul\":2506:2526   */\n  shr\n    /* \"#utility.yul\":2500:2504   */\n  dup3\n    /* \"#utility.yul\":2496:2527   */\n  add\n    /* \"#utility.yul\":2486:2527   */\n  swap2\n  pop\n    /* \"#utility.yul\":2577:2659   */\ntag_66:\n    /* \"#utility.yul\":2595:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2593   */\n  dup2\n    /* \"#utility.yul\":2585:2598   */\n  lt\n    /* \"#utility.yul\":2577:2659   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2640:2657   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2621:2622   */\n  0x01\n    /* \"#utility.yul\":2610:2623   */\n  add\n    /* \"#utility.yul\":2577:2659   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":2581:2584   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2130:2675   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2851:4203   */\ntag_13:\n    /* \"#utility.yul\":2971:2981   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2993:3023   */\n  dup2\n  gt\n    /* \"#utility.yul\":2990:3046   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3026:3044   */\n  tag_72\n  tag_35\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3055:3152   */\n  tag_73\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3105:3143   */\n  tag_74\n    /* \"#utility.yul\":3137:3141   */\n  dup5\n    /* \"#utility.yul\":3131:3142   */\n  sload\n    /* \"#utility.yul\":3105:3143   */\n  tag_37\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3099:3103   */\n  dup5\n    /* \"#utility.yul\":3055:3152   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3207:3211   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3271:3273   */\n  0x1f\n    /* \"#utility.yul\":3260:3274   */\n  dup4\n  gt\n    /* \"#utility.yul\":3288:3289   */\n  0x01\n    /* \"#utility.yul\":3283:3946   */\n  dup2\n  eq\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3990:3991   */\n  0x00\n    /* \"#utility.yul\":4007:4013   */\n  dup5\n    /* \"#utility.yul\":4004:4093   */\n  iszero\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":4059:4078   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4053:4079   */\n  mload\n    /* \"#utility.yul\":4004:4093   */\ntag_77:\n  not(0x00)\n    /* \"#utility.yul\":2808:2809   */\n  0x03\n    /* \"#utility.yul\":2804:2815   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2800:2824   */\n  shr\n    /* \"#utility.yul\":2796:2825   */\n  not\n    /* \"#utility.yul\":2786:2826   */\n  and\n    /* \"#utility.yul\":2832:2833   */\n  0x01\n    /* \"#utility.yul\":2828:2839   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2783:2840   */\n  or\n    /* \"#utility.yul\":4106:4187   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3253:4197   */\n  jump(tag_68)\n    /* \"#utility.yul\":3283:3946   */\ntag_76:\n    /* \"#utility.yul\":2077:2078   */\n  0x00\n    /* \"#utility.yul\":2070:2084   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2114:2118   */\n  0x20\n    /* \"#utility.yul\":2101:2119   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3319:3339   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3437:3673   */\ntag_80:\n    /* \"#utility.yul\":3451:3458   */\n  dup3\n    /* \"#utility.yul\":3448:3449   */\n  dup2\n    /* \"#utility.yul\":3445:3459   */\n  lt\n    /* \"#utility.yul\":3437:3673   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3540:3559   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3534:3560   */\n  mload\n    /* \"#utility.yul\":3519:3561   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3632:3659   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3600:3601   */\n  0x01\n    /* \"#utility.yul\":3588:3602   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3467:3486   */\n  dup5\n  add\n    /* \"#utility.yul\":3437:3673   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":3441:3444   */\n  pop\n    /* \"#utility.yul\":3701:3707   */\n  dup6\n    /* \"#utility.yul\":3692:3699   */\n  dup3\n    /* \"#utility.yul\":3689:3708   */\n  lt\n    /* \"#utility.yul\":3686:3887   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3762:3781   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3756:3782   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3845:3846   */\n  0x03\n    /* \"#utility.yul\":3841:3855   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3857:3860   */\n  0xf8\n    /* \"#utility.yul\":3837:3861   */\n  and\n    /* \"#utility.yul\":3833:3870   */\n  shr\n    /* \"#utility.yul\":3829:3871   */\n  not\n    /* \"#utility.yul\":3814:3872   */\n  and\n    /* \"#utility.yul\":3799:3873   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3686:3887   */\ntag_83:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3933:3934   */\n  0x01\n    /* \"#utility.yul\":3917:3931   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3913:3935   */\n  add\n    /* \"#utility.yul\":3900:3936   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2851:4203   */\n  jump\t// out\n    /* \"#utility.yul\":4568:4790   */\ntag_27:\n    /* \"#utility.yul\":4633:4642   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4654:4664   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4651:4784   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4706:4716   */\n  0x4e487b71\n    /* \"#utility.yul\":4701:4704   */\n  0xe0\n    /* \"#utility.yul\":4697:4717   */\n  shl\n    /* \"#utility.yul\":4694:4695   */\n  0x00\n    /* \"#utility.yul\":4687:4718   */\n  mstore\n    /* \"#utility.yul\":4741:4745   */\n  0x11\n    /* \"#utility.yul\":4738:4739   */\n  0x04\n    /* \"#utility.yul\":4731:4746   */\n  mstore\n    /* \"#utility.yul\":4769:4773   */\n  0x24\n    /* \"#utility.yul\":4766:4767   */\n  0x00\n    /* \"#utility.yul\":4759:4774   */\n  revert\n    /* \"#utility.yul\":4651:4784   */\ntag_86:\n    /* \"#utility.yul\":4568:4790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4795:4972   */\ntag_41:\n    /* \"spoilsToken.sol\":1471:12861  contract SpoilsToken is Context, IERC20, IERC20Metadata,Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"spoilsToken.sol\":1471:12861  contract SpoilsToken is Context, IERC20, IERC20Metadata,Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb6b285d9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"spoilsToken.sol\":2374:2474  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"spoilsToken.sol\":4881:5050  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"spoilsToken.sol\":4881:5050  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_25\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"spoilsToken.sol\":3494:3602  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"spoilsToken.sol\":3582:3594  _totalSupply */\n      sload(0x03)\n        /* \"spoilsToken.sol\":3494:3602  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"spoilsToken.sol\":3494:3602  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"spoilsToken.sol\":5532:6024  function transferFrom(... */\n    tag_6:\n      tag_27\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"spoilsToken.sol\":3336:3429  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"spoilsToken.sol\":3419:3421  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"spoilsToken.sol\":3336:3429  function decimals() public view virtual override returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"spoilsToken.sol\":6433:6648  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_27\n      tag_47\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"spoilsToken.sol\":4338:4520  function mint(address add, uint amount)external{... */\n    tag_9:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"spoilsToken.sol\":3665:3792  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_33\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":3766:3784  _balances[account] */\n      and\n        /* \"spoilsToken.sol\":3739:3746  uint256 */\n      0x00\n        /* \"spoilsToken.sol\":3766:3784  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":3766:3775  _balances */\n      0x01\n        /* \"spoilsToken.sol\":3766:3784  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"spoilsToken.sol\":3665:3792  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_50\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"spoilsToken.sol\":2593:2697  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_23\n      tag_65\n      jump\t// in\n        /* \"spoilsToken.sol\":10405:10587  function burn(address add,uint256 amount)public{... */\n    tag_14:\n      tag_50\n      tag_68\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"spoilsToken.sol\":7151:7564  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      tag_27\n      tag_71\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"spoilsToken.sol\":4005:4180  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_16:\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"spoilsToken.sol\":4188:4330  function setapprovedcontractaddress(address add)external onlyOwner {... */\n    tag_17:\n      tag_50\n      tag_79\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"spoilsToken.sol\":4583:4734  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_33\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":4699:4717  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"spoilsToken.sol\":4672:4679  uint256 */\n      0x00\n        /* \"spoilsToken.sol\":4699:4717  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":4699:4710  _allowances */\n      0x02\n        /* \"spoilsToken.sol\":4699:4717  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"spoilsToken.sol\":4699:4726  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"spoilsToken.sol\":4583:4734  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_50\n      tag_87\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"spoilsToken.sol\":2374:2474  function name() public view virtual override returns (string memory) {... */\n    tag_24:\n        /* \"spoilsToken.sol\":2428:2441  string memory */\n      0x60\n        /* \"spoilsToken.sol\":2461:2466  _name */\n      0x04\n        /* \"spoilsToken.sol\":2454:2466  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"spoilsToken.sol\":2374:2474  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"spoilsToken.sol\":4881:5050  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"spoilsToken.sol\":4964:4968  bool */\n      0x00\n        /* \"spoilsToken.sol\":4981:5020  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":5004:5011  spender */\n      dup5\n        /* \"spoilsToken.sol\":5013:5019  amount */\n      dup5\n        /* \"spoilsToken.sol\":4981:4989  _approve */\n      tag_100\n        /* \"spoilsToken.sol\":4981:5020  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"spoilsToken.sol\":5038:5042  true */\n      0x01\n        /* \"spoilsToken.sol\":4881:5050  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_96:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"spoilsToken.sol\":5532:6024  function transferFrom(... */\n    tag_40:\n        /* \"spoilsToken.sol\":5672:5676  bool */\n      0x00\n        /* \"spoilsToken.sol\":5689:5725  _transfer(sender, recipient, amount) */\n      tag_103\n        /* \"spoilsToken.sol\":5699:5705  sender */\n      dup5\n        /* \"spoilsToken.sol\":5707:5716  recipient */\n      dup5\n        /* \"spoilsToken.sol\":5718:5724  amount */\n      dup5\n        /* \"spoilsToken.sol\":5689:5698  _transfer */\n      tag_104\n        /* \"spoilsToken.sol\":5689:5725  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":5765:5784  _allowances[sender] */\n      dup5\n      and\n        /* \"spoilsToken.sol\":5738:5762  uint256 currentAllowance */\n      0x00\n        /* \"spoilsToken.sol\":5765:5784  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":5765:5776  _allowances */\n      0x02\n        /* \"spoilsToken.sol\":5765:5784  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":5765:5798  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"spoilsToken.sol\":5817:5843  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"spoilsToken.sol\":5809:5888  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3151:3153   */\n      0x20\n        /* \"spoilsToken.sol\":5809:5888  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3133:3154   */\n      mstore\n        /* \"#utility.yul\":3190:3192   */\n      0x28\n        /* \"#utility.yul\":3170:3188   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3163:3193   */\n      mstore\n        /* \"#utility.yul\":3229:3263   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3209:3227   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3202:3264   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3280:3298   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3273:3311   */\n      mstore\n        /* \"#utility.yul\":3328:3347   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":5809:5888  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"spoilsToken.sol\":5924:5981  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_109\n        /* \"spoilsToken.sol\":5933:5939  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":5974:5980  amount */\n      dup6\n        /* \"spoilsToken.sol\":5955:5971  currentAllowance */\n      dup5\n        /* \"spoilsToken.sol\":5955:5980  currentAllowance - amount */\n      sub\n        /* \"spoilsToken.sol\":5924:5932  _approve */\n      tag_100\n        /* \"spoilsToken.sol\":5924:5981  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_109:\n      pop\n        /* \"spoilsToken.sol\":6012:6016  true */\n      0x01\n      swap5\n        /* \"spoilsToken.sol\":5532:6024  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"spoilsToken.sol\":6433:6648  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":6521:6525  bool */\n      0x00\n        /* \"spoilsToken.sol\":6570:6595  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":6570:6581  _allowances */\n      0x02\n        /* \"spoilsToken.sol\":6570:6595  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":6570:6604  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"spoilsToken.sol\":6521:6525  bool */\n      swap1\n      swap2\n        /* \"spoilsToken.sol\":6538:6618  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_97\n      swap2\n        /* \"spoilsToken.sol\":6561:6568  spender */\n      dup6\n      swap1\n        /* \"spoilsToken.sol\":6570:6617  _allowances[_msgSender()][spender] + addedValue */\n      tag_116\n      swap1\n        /* \"spoilsToken.sol\":6607:6617  addedValue */\n      dup7\n      swap1\n        /* \"spoilsToken.sol\":6570:6617  _allowances[_msgSender()][spender] + addedValue */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"spoilsToken.sol\":6538:6546  _approve */\n      tag_100\n        /* \"spoilsToken.sol\":6538:6618  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"spoilsToken.sol\":4338:4520  function mint(address add, uint amount)external{... */\n    tag_52:\n        /* \"spoilsToken.sol\":4432:4442  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":4404:4443  onlyapprovedcontractaddress[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":4404:4431  onlyapprovedcontractaddress */\n      0x06\n        /* \"spoilsToken.sol\":4404:4443  onlyapprovedcontractaddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"spoilsToken.sol\":4404:4450  onlyapprovedcontractaddress[msg.sender] ==true */\n      iszero\n      iszero\n        /* \"spoilsToken.sol\":4404:4443  onlyapprovedcontractaddress[msg.sender] */\n      0x01\n        /* \"spoilsToken.sol\":4404:4450  onlyapprovedcontractaddress[msg.sender] ==true */\n      eq\n        /* \"spoilsToken.sol\":4396:4484  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3822:3824   */\n      0x20\n        /* \"spoilsToken.sol\":4396:4484  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3804:3825   */\n      mstore\n        /* \"#utility.yul\":3861:3863   */\n      0x1d\n        /* \"#utility.yul\":3841:3859   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3834:3864   */\n      mstore\n        /* \"#utility.yul\":3900:3931   */\n      0x796f7520617265206e6f7420617070726f7665642020746f206d696e74000000\n        /* \"#utility.yul\":3880:3898   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3873:3932   */\n      mstore\n        /* \"#utility.yul\":3949:3967   */\n      0x64\n      add\n        /* \"spoilsToken.sol\":4396:4484  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n      tag_107\n        /* \"#utility.yul\":3620:3973   */\n      jump\n        /* \"spoilsToken.sol\":4396:4484  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n    tag_119:\n        /* \"spoilsToken.sol\":4495:4512  _mint(add,amount) */\n      tag_122\n        /* \"spoilsToken.sol\":4501:4504  add */\n      dup3\n        /* \"spoilsToken.sol\":4505:4511  amount */\n      dup3\n        /* \"spoilsToken.sol\":4495:4500  _mint */\n      tag_123\n        /* \"spoilsToken.sol\":4495:4512  _mint(add,amount) */\n      jump\t// in\n    tag_122:\n        /* \"spoilsToken.sol\":4338:4520  function mint(address add, uint amount)external{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"spoilsToken.sol\":2593:2697  function symbol() public view virtual override returns (string memory) {... */\n    tag_65:\n        /* \"spoilsToken.sol\":2649:2662  string memory */\n      0x60\n        /* \"spoilsToken.sol\":2682:2689  _symbol */\n      0x05\n        /* \"spoilsToken.sol\":2675:2689  return _symbol */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n        /* \"spoilsToken.sol\":10405:10587  function burn(address add,uint256 amount)public{... */\n    tag_69:\n        /* \"spoilsToken.sol\":10499:10509  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":10471:10510  onlyapprovedcontractaddress[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":10471:10498  onlyapprovedcontractaddress */\n      0x06\n        /* \"spoilsToken.sol\":10471:10510  onlyapprovedcontractaddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"spoilsToken.sol\":10471:10517  onlyapprovedcontractaddress[msg.sender] ==true */\n      iszero\n      iszero\n        /* \"spoilsToken.sol\":10471:10510  onlyapprovedcontractaddress[msg.sender] */\n      0x01\n        /* \"spoilsToken.sol\":10471:10517  onlyapprovedcontractaddress[msg.sender] ==true */\n      eq\n        /* \"spoilsToken.sol\":10463:10551  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to burn\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4180:4182   */\n      0x20\n        /* \"spoilsToken.sol\":10463:10551  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to burn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4162:4183   */\n      mstore\n        /* \"#utility.yul\":4219:4221   */\n      0x1d\n        /* \"#utility.yul\":4199:4217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4192:4222   */\n      mstore\n        /* \"#utility.yul\":4258:4289   */\n      0x796f7520617265206e6f7420617070726f7665642020746f206275726e000000\n        /* \"#utility.yul\":4238:4256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4231:4290   */\n      mstore\n        /* \"#utility.yul\":4307:4325   */\n      0x64\n      add\n        /* \"spoilsToken.sol\":10463:10551  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to burn\") */\n      tag_107\n        /* \"#utility.yul\":3978:4331   */\n      jump\n        /* \"spoilsToken.sol\":10463:10551  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to burn\") */\n    tag_139:\n        /* \"spoilsToken.sol\":10562:10579  _burn(add,amount) */\n      tag_122\n        /* \"spoilsToken.sol\":10568:10571  add */\n      dup3\n        /* \"spoilsToken.sol\":10572:10578  amount */\n      dup3\n        /* \"spoilsToken.sol\":10562:10567  _burn */\n      tag_143\n        /* \"spoilsToken.sol\":10562:10579  _burn(add,amount) */\n      jump\t// in\n        /* \"spoilsToken.sol\":7151:7564  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":7244:7248  bool */\n      0x00\n        /* \"spoilsToken.sol\":7288:7313  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":7288:7299  _allowances */\n      0x02\n        /* \"spoilsToken.sol\":7288:7313  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":7288:7322  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"spoilsToken.sol\":7341:7376  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"spoilsToken.sol\":7333:7418  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4538:4540   */\n      0x20\n        /* \"spoilsToken.sol\":7333:7418  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4520:4541   */\n      mstore\n        /* \"#utility.yul\":4577:4579   */\n      0x25\n        /* \"#utility.yul\":4557:4575   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4550:4580   */\n      mstore\n        /* \"#utility.yul\":4616:4650   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4596:4614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4589:4651   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4667:4685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4660:4695   */\n      mstore\n        /* \"#utility.yul\":4712:4731   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":7333:7418  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_107\n        /* \"#utility.yul\":4336:4737   */\n      jump\n        /* \"spoilsToken.sol\":7333:7418  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_146:\n        /* \"spoilsToken.sol\":7454:7521  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":7477:7484  spender */\n      dup6\n        /* \"spoilsToken.sol\":7505:7520  subtractedValue */\n      dup6\n        /* \"spoilsToken.sol\":7486:7502  currentAllowance */\n      dup5\n        /* \"spoilsToken.sol\":7486:7520  currentAllowance - subtractedValue */\n      sub\n        /* \"spoilsToken.sol\":7454:7462  _approve */\n      tag_100\n        /* \"spoilsToken.sol\":7454:7521  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_149:\n      pop\n        /* \"spoilsToken.sol\":7552:7556  true */\n      0x01\n      swap4\n        /* \"spoilsToken.sol\":7151:7564  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"spoilsToken.sol\":4005:4180  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_76:\n        /* \"spoilsToken.sol\":4091:4095  bool */\n      0x00\n        /* \"spoilsToken.sol\":4108:4150  _transfer(_msgSender(), recipient, amount) */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"spoilsToken.sol\":4132:4141  recipient */\n      dup5\n        /* \"spoilsToken.sol\":4143:4149  amount */\n      dup5\n        /* \"spoilsToken.sol\":4108:4117  _transfer */\n      tag_104\n        /* \"spoilsToken.sol\":4108:4150  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"spoilsToken.sol\":4188:4330  function setapprovedcontractaddress(address add)external onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":4275:4307  onlyapprovedcontractaddress[add] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":4275:4302  onlyapprovedcontractaddress */\n      0x06\n        /* \"spoilsToken.sol\":4275:4307  onlyapprovedcontractaddress[add] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"spoilsToken.sol\":4275:4313  onlyapprovedcontractaddress[add] =true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"spoilsToken.sol\":4309:4313  true */\n      0x01\n        /* \"spoilsToken.sol\":4275:4313  onlyapprovedcontractaddress[add] =true */\n      or\n      swap1\n      sstore\n        /* \"spoilsToken.sol\":4188:4330  function setapprovedcontractaddress(address add)external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4944:4946   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4926:4947   */\n      mstore\n        /* \"#utility.yul\":4983:4985   */\n      0x26\n        /* \"#utility.yul\":4963:4981   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4956:4986   */\n      mstore\n        /* \"#utility.yul\":5022:5056   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5002:5020   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4995:5057   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5073:5091   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5066:5102   */\n      mstore\n        /* \"#utility.yul\":5119:5138   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_107\n        /* \"#utility.yul\":4742:5144   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"spoilsToken.sol\":11025:11405  function _approve(... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":11161:11180  owner != address(0) */\n      dup4\n      and\n        /* \"spoilsToken.sol\":11153:11221  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5351:5353   */\n      0x20\n        /* \"spoilsToken.sol\":11153:11221  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5333:5354   */\n      mstore\n        /* \"#utility.yul\":5390:5392   */\n      0x24\n        /* \"#utility.yul\":5370:5388   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5363:5393   */\n      mstore\n        /* \"#utility.yul\":5429:5463   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5409:5427   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5402:5464   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5480:5498   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5473:5507   */\n      mstore\n        /* \"#utility.yul\":5524:5543   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":11153:11221  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_107\n        /* \"#utility.yul\":5149:5549   */\n      jump\n        /* \"spoilsToken.sol\":11153:11221  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":11240:11261  spender != address(0) */\n      dup3\n      and\n        /* \"spoilsToken.sol\":11232:11300  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5756:5758   */\n      0x20\n        /* \"spoilsToken.sol\":11232:11300  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5738:5759   */\n      mstore\n        /* \"#utility.yul\":5795:5797   */\n      0x22\n        /* \"#utility.yul\":5775:5793   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5768:5798   */\n      mstore\n        /* \"#utility.yul\":5834:5868   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5814:5832   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5807:5869   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5885:5903   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5878:5910   */\n      mstore\n        /* \"#utility.yul\":5927:5946   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":11232:11300  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_107\n        /* \"#utility.yul\":5554:5952   */\n      jump\n        /* \"spoilsToken.sol\":11232:11300  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":11313:11331  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":11313:11324  _allowances */\n      0x02\n        /* \"spoilsToken.sol\":11313:11331  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"spoilsToken.sol\":11313:11340  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"spoilsToken.sol\":11313:11349  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"spoilsToken.sol\":11365:11397  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":11365:11397  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"spoilsToken.sol\":11365:11397  Approval(owner, spender, amount) */\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"spoilsToken.sol\":11025:11405  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"spoilsToken.sol\":8054:8787  function _transfer(... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":8194:8214  sender != address(0) */\n      dup4\n      and\n        /* \"spoilsToken.sol\":8186:8256  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6159:6161   */\n      0x20\n        /* \"spoilsToken.sol\":8186:8256  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6141:6162   */\n      mstore\n        /* \"#utility.yul\":6198:6200   */\n      0x25\n        /* \"#utility.yul\":6178:6196   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6171:6201   */\n      mstore\n        /* \"#utility.yul\":6237:6271   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6217:6235   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6210:6272   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6288:6306   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6281:6316   */\n      mstore\n        /* \"#utility.yul\":6333:6352   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":8186:8256  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_107\n        /* \"#utility.yul\":5957:6358   */\n      jump\n        /* \"spoilsToken.sol\":8186:8256  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":8275:8298  recipient != address(0) */\n      dup3\n      and\n        /* \"spoilsToken.sol\":8267:8338  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6565:6567   */\n      0x20\n        /* \"spoilsToken.sol\":8267:8338  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6547:6568   */\n      mstore\n        /* \"#utility.yul\":6604:6606   */\n      0x23\n        /* \"#utility.yul\":6584:6602   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6577:6607   */\n      mstore\n        /* \"#utility.yul\":6643:6677   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6623:6641   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6616:6678   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6694:6712   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6687:6720   */\n      mstore\n        /* \"#utility.yul\":6737:6756   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":8267:8338  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_107\n        /* \"#utility.yul\":6363:6762   */\n      jump\n        /* \"spoilsToken.sol\":8267:8338  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":8435:8452  _balances[sender] */\n      dup4\n      and\n        /* \"spoilsToken.sol\":8411:8432  uint256 senderBalance */\n      0x00\n        /* \"spoilsToken.sol\":8435:8452  _balances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":8435:8444  _balances */\n      0x01\n        /* \"spoilsToken.sol\":8435:8452  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"spoilsToken.sol\":8471:8494  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"spoilsToken.sol\":8463:8537  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6969:6971   */\n      0x20\n        /* \"spoilsToken.sol\":8463:8537  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6951:6972   */\n      mstore\n        /* \"#utility.yul\":7008:7010   */\n      0x26\n        /* \"#utility.yul\":6988:7006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6981:7011   */\n      mstore\n        /* \"#utility.yul\":7047:7081   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7027:7045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7020:7082   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7098:7116   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7091:7127   */\n      mstore\n        /* \"#utility.yul\":7144:7163   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":8463:8537  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_107\n        /* \"#utility.yul\":6767:7169   */\n      jump\n        /* \"spoilsToken.sol\":8463:8537  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":8573:8590  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":8573:8582  _balances */\n      0x01\n        /* \"spoilsToken.sol\":8573:8590  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"spoilsToken.sol\":8593:8615  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"spoilsToken.sol\":8573:8615  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"spoilsToken.sol\":8637:8657  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"spoilsToken.sol\":8637:8667  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"spoilsToken.sol\":8609:8615  amount */\n      dup5\n      swap3\n        /* \"spoilsToken.sol\":8573:8590  _balances[sender] */\n      swap1\n        /* \"spoilsToken.sol\":8637:8667  _balances[recipient] += amount */\n      tag_186\n      swap1\n        /* \"spoilsToken.sol\":8609:8615  amount */\n      dup5\n      swap1\n        /* \"spoilsToken.sol\":8637:8667  _balances[recipient] += amount */\n      tag_117\n      jump\t// in\n    tag_186:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"spoilsToken.sol\":8702:8711  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":8685:8720  Transfer(sender, recipient, amount) */\n      and\n        /* \"spoilsToken.sol\":8694:8700  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":8685:8720  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"spoilsToken.sol\":8713:8719  amount */\n      dup5\n        /* \"spoilsToken.sol\":8685:8720  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_187\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"spoilsToken.sol\":8685:8720  Transfer(sender, recipient, amount) */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"spoilsToken.sol\":8175:8787  {... */\n      pop\n        /* \"spoilsToken.sol\":8054:8787  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"spoilsToken.sol\":9074:9473  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":9158:9179  account != address(0) */\n      dup3\n      and\n        /* \"spoilsToken.sol\":9150:9215  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7376:7378   */\n      0x20\n        /* \"spoilsToken.sol\":9150:9215  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7358:7379   */\n      mstore\n        /* \"#utility.yul\":7415:7417   */\n      0x1f\n        /* \"#utility.yul\":7395:7413   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7388:7418   */\n      mstore\n        /* \"#utility.yul\":7454:7487   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7434:7452   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7427:7488   */\n      mstore\n        /* \"#utility.yul\":7505:7523   */\n      0x64\n      add\n        /* \"spoilsToken.sol\":9150:9215  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_107\n        /* \"#utility.yul\":7174:7529   */\n      jump\n        /* \"spoilsToken.sol\":9150:9215  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_191:\n        /* \"spoilsToken.sol\":9306:9312  amount */\n      dup1\n        /* \"spoilsToken.sol\":9290:9302  _totalSupply */\n      0x03\n      0x00\n        /* \"spoilsToken.sol\":9290:9312  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_195:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":9323:9341  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":9323:9332  _balances */\n      0x01\n        /* \"spoilsToken.sol\":9323:9341  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"spoilsToken.sol\":9323:9351  _balances[account] += amount */\n      dup1\n      sload\n        /* \"spoilsToken.sol\":9345:9351  amount */\n      dup4\n      swap3\n        /* \"spoilsToken.sol\":9323:9341  _balances[account] */\n      swap1\n        /* \"spoilsToken.sol\":9323:9351  _balances[account] += amount */\n      tag_196\n      swap1\n        /* \"spoilsToken.sol\":9345:9351  amount */\n      dup5\n      swap1\n        /* \"spoilsToken.sol\":9323:9351  _balances[account] += amount */\n      tag_117\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"spoilsToken.sol\":9384:9385  0 */\n      0x00\n      swap1\n        /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"spoilsToken.sol\":9367:9404  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"spoilsToken.sol\":4338:4520  function mint(address add, uint amount)external{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7736:7738   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7718:7739   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7755:7773   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7748:7778   */\n      mstore\n        /* \"#utility.yul\":7814:7848   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7794:7812   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7787:7849   */\n      mstore\n        /* \"#utility.yul\":7866:7884   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_107\n        /* \"#utility.yul\":7534:7890   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"spoilsToken.sol\":9806:10397  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":9890:9911  account != address(0) */\n      dup3\n      and\n        /* \"spoilsToken.sol\":9882:9949  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8097:8099   */\n      0x20\n        /* \"spoilsToken.sol\":9882:9949  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8079:8100   */\n      mstore\n        /* \"#utility.yul\":8136:8138   */\n      0x21\n        /* \"#utility.yul\":8116:8134   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8109:8139   */\n      mstore\n        /* \"#utility.yul\":8175:8209   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":8155:8173   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8148:8210   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8226:8244   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8219:8250   */\n      mstore\n        /* \"#utility.yul\":8267:8286   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":9882:9949  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_107\n        /* \"#utility.yul\":7895:8292   */\n      jump\n        /* \"spoilsToken.sol\":9882:9949  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":10049:10067  _balances[account] */\n      dup3\n      and\n        /* \"spoilsToken.sol\":10024:10046  uint256 accountBalance */\n      0x00\n        /* \"spoilsToken.sol\":10049:10067  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":10049:10058  _balances */\n      0x01\n        /* \"spoilsToken.sol\":10049:10067  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"spoilsToken.sol\":10086:10110  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"spoilsToken.sol\":10078:10149  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8499:8501   */\n      0x20\n        /* \"spoilsToken.sol\":10078:10149  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8481:8502   */\n      mstore\n        /* \"#utility.yul\":8538:8540   */\n      0x22\n        /* \"#utility.yul\":8518:8536   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8511:8541   */\n      mstore\n        /* \"#utility.yul\":8577:8611   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":8557:8575   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8550:8612   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8628:8646   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8621:8653   */\n      mstore\n        /* \"#utility.yul\":8670:8689   */\n      0x84\n      add\n        /* \"spoilsToken.sol\":10078:10149  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_107\n        /* \"#utility.yul\":8297:8695   */\n      jump\n        /* \"spoilsToken.sol\":10078:10149  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":10185:10203  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":10185:10194  _balances */\n      0x01\n        /* \"spoilsToken.sol\":10185:10203  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"spoilsToken.sol\":10206:10229  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"spoilsToken.sol\":10185:10229  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"spoilsToken.sol\":10251:10263  _totalSupply */\n      0x03\n        /* \"spoilsToken.sol\":10251:10273  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"spoilsToken.sol\":10223:10229  amount */\n      dup5\n      swap3\n        /* \"spoilsToken.sol\":10185:10203  _balances[account] */\n      swap1\n        /* \"spoilsToken.sol\":10251:10273  _totalSupply -= amount */\n      tag_214\n      swap1\n        /* \"spoilsToken.sol\":10223:10229  amount */\n      dup5\n      swap1\n        /* \"spoilsToken.sol\":10251:10273  _totalSupply -= amount */\n      tag_215\n      jump\t// in\n    tag_214:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"spoilsToken.sol\":10291:10328  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup3\n      dup2\n      mstore\n        /* \"spoilsToken.sol\":10317:10318  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"spoilsToken.sol\":10291:10328  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"spoilsToken.sol\":10291:10328  Transfer(account, address(0), amount) */\n      tag_173\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_26:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_224:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_224)\n    tag_226:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_220:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_228:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_29:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_230:\n        /* \"#utility.yul\":913:942   */\n      tag_231\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_220\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_39:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_235:\n        /* \"#utility.yul\":1563:1592   */\n      tag_236\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_220\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_237\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_220\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_55:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_240:\n        /* \"#utility.yul\":2051:2080   */\n      tag_241\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_220\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2559   */\n    tag_83:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_244:\n        /* \"#utility.yul\":2467:2496   */\n      tag_245\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_220\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_246\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_220\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2944   */\n    tag_91:\n        /* \"#utility.yul\":2643:2644   */\n      0x01\n        /* \"#utility.yul\":2639:2651   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2686:2698   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2707:2768   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2761:2765   */\n      0x7f\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2766   */\n      and\n        /* \"#utility.yul\":2739:2766   */\n      swap2\n      pop\n        /* \"#utility.yul\":2707:2768   */\n    tag_248:\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      lt\n        /* \"#utility.yul\":2783:2801   */\n      dup2\n        /* \"#utility.yul\":2780:2818   */\n      sub\n        /* \"#utility.yul\":2777:2938   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2860:2870   */\n      0x4e487b71\n        /* \"#utility.yul\":2855:2858   */\n      0xe0\n        /* \"#utility.yul\":2851:2871   */\n      shl\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2872   */\n      mstore\n        /* \"#utility.yul\":2895:2899   */\n      0x22\n        /* \"#utility.yul\":2892:2893   */\n      0x04\n        /* \"#utility.yul\":2885:2900   */\n      mstore\n        /* \"#utility.yul\":2923:2927   */\n      0x24\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2913:2928   */\n      revert\n        /* \"#utility.yul\":2777:2938   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":2564:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3485   */\n    tag_221:\n        /* \"#utility.yul\":3419:3429   */\n      0x4e487b71\n        /* \"#utility.yul\":3414:3417   */\n      0xe0\n        /* \"#utility.yul\":3410:3430   */\n      shl\n        /* \"#utility.yul\":3407:3408   */\n      0x00\n        /* \"#utility.yul\":3400:3431   */\n      mstore\n        /* \"#utility.yul\":3450:3454   */\n      0x11\n        /* \"#utility.yul\":3447:3448   */\n      0x04\n        /* \"#utility.yul\":3440:3455   */\n      mstore\n        /* \"#utility.yul\":3474:3478   */\n      0x24\n        /* \"#utility.yul\":3471:3472   */\n      0x00\n        /* \"#utility.yul\":3464:3479   */\n      revert\n        /* \"#utility.yul\":3490:3615   */\n    tag_117:\n        /* \"#utility.yul\":3555:3564   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3576:3586   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3573:3609   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3589:3607   */\n      tag_96\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":8700:8828   */\n    tag_215:\n        /* \"#utility.yul\":8767:8776   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8788:8799   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8785:8822   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":8802:8820   */\n      tag_96\n      tag_221\n      jump\t// in\n\n    auxdata: 0xa26469706673582212204dc077ce334aefc2d8de1775e76b326bee5938e575cc1d3c968ce5e44936de5e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_297": {
									"entryPoint": null,
									"id": 297,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_846": {
									"entryPoint": 421,
									"id": 846,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_695": {
									"entryPoint": 192,
									"id": 695,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_227": {
									"entryPoint": null,
									"id": 227,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 113,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4974:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:5"
															},
															"nodeType": "YulIf",
															"src": "698:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:5",
																"statements": []
															},
															"src": "779:133:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:840:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1126:488:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1172:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1181:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1174:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1147:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1156:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1143:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1143:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1139:32:5"
															},
															"nodeType": "YulIf",
															"src": "1136:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1197:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1217:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1211:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1201:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1236:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1254:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1258:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1240:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1291:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1300:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1293:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1293:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1293:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1279:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1287:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1276:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:14:5"
															},
															"nodeType": "YulIf",
															"src": "1273:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1316:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1359:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1370:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1379:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1326:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1396:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1412:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1400:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1466:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1475:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1468:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1468:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1468:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1452:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1462:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1449:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1449:16:5"
															},
															"nodeType": "YulIf",
															"src": "1446:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1491:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1534:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1545:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1530:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1530:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1556:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1501:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1501:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1573:35:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1593:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1604:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1589:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1583:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:25:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1076:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1087:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1099:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1107:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1115:6:5",
														"type": ""
													}
												],
												"src": "991:623:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1674:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1684:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1698:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1701:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1694:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1745:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1751:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1719:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1792:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1794:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1808:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1816:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1804:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1804:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1794:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1772:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1765:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1765:26:5"
															},
															"nodeType": "YulIf",
															"src": "1762:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1882:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1910:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1915:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1906:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1906:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1896:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1947:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1975:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1978:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1968:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1968:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1968:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1838:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1861:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1869:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1858:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1835:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:38:5"
															},
															"nodeType": "YulIf",
															"src": "1832:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1654:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1663:6:5",
														"type": ""
													}
												],
												"src": "1619:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2060:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2077:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2080:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2070:14:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2093:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2111:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2101:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2093:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2043:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2051:4:5",
														"type": ""
													}
												],
												"src": "2004:121:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2211:464:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2244:425:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:11:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2268:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2262:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2289:2:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2293:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2282:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2282:17:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2282:17:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2312:31:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2334:2:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2338:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2324:9:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2324:19:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2316:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2356:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2379:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2389:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2396:10:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2408:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2392:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2392:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2385:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2385:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2360:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2450:23:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2452:19:5",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2467:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2452:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2432:10:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2429:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2429:20:5"
																		},
																		"nodeType": "YulIf",
																		"src": "2426:47:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2486:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2500:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2510:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2517:3:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2522:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2513:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2513:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2506:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2506:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2496:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2496:31:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2490:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2540:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2553:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2544:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2638:21:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2647:5:5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2654:2:5"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2640:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2640:17:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2640:17:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2588:5:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2595:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2585:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:13:5"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2599:26:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2601:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2614:5:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2621:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2610:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2610:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2601:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2581:3:5",
																			"statements": []
																		},
																		"src": "2577:82:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2227:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2232:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2224:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:11:5"
															},
															"nodeType": "YulIf",
															"src": "2221:448:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2183:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2190:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2195:10:5",
														"type": ""
													}
												],
												"src": "2130:545:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2765:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2775:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2790:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2808:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2811:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2804:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2804:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2821:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2817:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2817:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2800:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2800:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2796:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2786:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2832:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2835:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2828:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2828:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2783:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2775:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2742:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2748:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2756:4:5",
														"type": ""
													}
												],
												"src": "2680:166:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:1256:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2977:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2971:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2961:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3024:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3026:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3012:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3016:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3008:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3020:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2993:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2993:30:5"
															},
															"nodeType": "YulIf",
															"src": "2990:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3099:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3137:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3131:5:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3131:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3105:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3105:38:5"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3055:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:97:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:97:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3161:18:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3178:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3165:9:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3188:23:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3207:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3192:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3220:24:5",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3233:11:5"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3220:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3290:656:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3304:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3323:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3335:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3331:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3331:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3319:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3319:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3308:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3352:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3396:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3366:29:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3366:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3356:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3414:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3423:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3418:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3501:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3526:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3544:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3549:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3540:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3540:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3534:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3534:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3519:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3519:42:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3519:42:5"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3578:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3592:6:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3600:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3588:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3588:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3578:6:5"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3619:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3636:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3647:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3632:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3632:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3619:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3448:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3451:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3445:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3445:14:5"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3460:28:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3462:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3471:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3474:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3467:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3467:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3462:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3441:3:5",
																					"statements": []
																				},
																				"src": "3437:236:5"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3721:166:5",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3739:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3766:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3771:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3762:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3762:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3756:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3756:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3743:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3806:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3818:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3845:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3848:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3841:3:5"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3841:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3857:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3837:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3837:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3867:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3863:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3863:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3833:3:5"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3833:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3829:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3829:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3814:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3814:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3799:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3799:74:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3799:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3692:7:5"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3701:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3689:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3689:19:5"
																				},
																				"nodeType": "YulIf",
																				"src": "3686:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3907:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3921:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3924:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3917:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3917:14:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3933:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3913:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3913:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3900:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3900:36:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3900:36:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3283:663:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3288:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3963:234:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3977:14:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3990:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3981:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4026:67:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4044:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4063:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4068:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4059:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4059:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4053:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4053:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4044:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4007:6:5"
																				},
																				"nodeType": "YulIf",
																				"src": "4004:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4113:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4172:5:5"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4179:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4119:52:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4119:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4106:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4106:81:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4106:81:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3955:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3271:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3260:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:14:5"
															},
															"nodeType": "YulSwitch",
															"src": "3253:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2932:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2938:3:5",
														"type": ""
													}
												],
												"src": "2851:1352:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4382:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4399:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4410:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4392:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4392:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4433:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4444:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4429:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4429:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4449:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4422:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4422:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4472:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4483:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4468:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4468:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4488:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4543:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4531:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4359:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4373:4:5",
														"type": ""
													}
												],
												"src": "4208:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4616:174:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4626:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4637:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4640:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4633:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4633:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4626:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4673:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4694:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4701:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4706:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4697:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4697:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4687:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4687:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4687:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4738:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4741:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4731:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4731:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4731:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4766:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4769:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4759:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4759:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4759:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4657:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4660:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4654:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:10:5"
															},
															"nodeType": "YulIf",
															"src": "4651:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4599:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4602:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4608:3:5",
														"type": ""
													}
												],
												"src": "4568:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4896:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4906:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4918:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4929:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4914:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4914:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4906:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4948:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4959:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4941:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4941:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4941:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4865:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4876:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4887:4:5",
														"type": ""
													}
												],
												"src": "4795:177:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200123b3803806200123b833981016040819052620000339162000268565b6200003e3362000071565b60046200004c848262000361565b5060056200005b838262000361565b50620000683382620000c0565b5050506200044f565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166200011b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060035f8282546200012e919062000429565b90915550506001600160a01b0382165f90815260016020526040812080548392906200015c90849062000429565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112620001ce575f80fd5b81516001600160401b0380821115620001eb57620001eb620001aa565b604051601f8301601f19908116603f01168101908282118183101715620002165762000216620001aa565b8160405283815260209250868385880101111562000232575f80fd5b5f91505b8382101562000255578582018301518183018401529082019062000236565b5f93810190920192909252949350505050565b5f805f606084860312156200027b575f80fd5b83516001600160401b038082111562000292575f80fd5b620002a087838801620001be565b94506020860151915080821115620002b6575f80fd5b50620002c586828701620001be565b925050604084015190509250925092565b600181811c90821680620002eb57607f821691505b6020821081036200030a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001a5575f81815260208120601f850160051c81016020861015620003385750805b601f850160051c820191505b81811015620003595782815560010162000344565b505050505050565b81516001600160401b038111156200037d576200037d620001aa565b62000395816200038e8454620002d6565b8462000310565b602080601f831160018114620003cb575f8415620003b35750858301515b5f19600386901b1c1916600185901b17855562000359565b5f85815260208120601f198616915b82811015620003fb57888601518255948401946001909101908401620003da565b50858210156200041957878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200044957634e487b7160e01b5f52601160045260245ffd5b92915050565b610dde806200045d5f395ff3fe608060405234801561000f575f80fd5b5060043610610106575f3560e01c8063715018a61161009e578063a457c2d71161006e578063a457c2d71461020c578063a9059cbb1461021f578063b6b285d914610232578063dd62ed3e14610245578063f2fde38b1461027d575f80fd5b8063715018a6146101cf5780638da5cb5b146101d757806395d89b41146101f15780639dc29fac146101f9575f80fd5b8063313ce567116100d9578063313ce56714610170578063395093511461017f57806340c10f191461019257806370a08231146101a7575f80fd5b806306fdde031461010a578063095ea7b31461012857806318160ddd1461014b57806323b872dd1461015d575b5f80fd5b610112610290565b60405161011f9190610c1e565b60405180910390f35b61013b610136366004610c84565b610320565b604051901515815260200161011f565b6003545b60405190815260200161011f565b61013b61016b366004610cac565b610336565b6040516012815260200161011f565b61013b61018d366004610c84565b6103e3565b6101a56101a0366004610c84565b61041e565b005b61014f6101b5366004610ce5565b6001600160a01b03165f9081526001602052604090205490565b6101a561048f565b5f546040516001600160a01b03909116815260200161011f565b6101126104a2565b6101a5610207366004610c84565b6104b1565b61013b61021a366004610c84565b61051e565b61013b61022d366004610c84565b6105b6565b6101a5610240366004610ce5565b6105c2565b61014f610253366004610d05565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b6101a561028b366004610ce5565b6105ed565b60606004805461029f90610d36565b80601f01602080910402602001604051908101604052809291908181526020018280546102cb90610d36565b80156103165780601f106102ed57610100808354040283529160200191610316565b820191905f5260205f20905b8154815290600101906020018083116102f957829003601f168201915b5050505050905090565b5f61032c338484610666565b5060015b92915050565b5f61034284848461078a565b6001600160a01b0384165f908152600260209081526040808320338452909152902054828110156103cb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103d88533858403610666565b506001949350505050565b335f8181526002602090815260408083206001600160a01b0387168452909152812054909161032c918590610419908690610d82565b610666565b335f9081526006602052604090205460ff1615156001146104815760405162461bcd60e51b815260206004820152601d60248201527f796f7520617265206e6f7420617070726f7665642020746f206d696e7400000060448201526064016103c2565b61048b8282610957565b5050565b610497610a33565b6104a05f610a8c565b565b60606005805461029f90610d36565b335f9081526006602052604090205460ff1615156001146105145760405162461bcd60e51b815260206004820152601d60248201527f796f7520617265206e6f7420617070726f7665642020746f206275726e00000060448201526064016103c2565b61048b8282610adb565b335f9081526002602090815260408083206001600160a01b03861684529091528120548281101561059f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c2565b6105ac3385858403610666565b5060019392505050565b5f61032c33848461078a565b6105ca610a33565b6001600160a01b03165f908152600660205260409020805460ff19166001179055565b6105f5610a33565b6001600160a01b03811661065a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c2565b61066381610a8c565b50565b6001600160a01b0383166106c85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c2565b6001600160a01b0382166107295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c2565b6001600160a01b038381165f8181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107ee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c2565b6001600160a01b0382166108505760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c2565b6001600160a01b0383165f90815260016020526040902054818110156108c75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c2565b6001600160a01b038085165f908152600160205260408082208585039055918516815290812080548492906108fd908490610d82565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161094991815260200190565b60405180910390a350505050565b6001600160a01b0382166109ad5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c2565b8060035f8282546109be9190610d82565b90915550506001600160a01b0382165f90815260016020526040812080548392906109ea908490610d82565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f546001600160a01b031633146104a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c2565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610b3b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c2565b6001600160a01b0382165f9081526001602052604090205481811015610bae5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c2565b6001600160a01b0383165f908152600160205260408120838303905560038054849290610bdc908490610d95565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161077d565b5f6020808352835180828501525f5b81811015610c4957858101830151858201604001528201610c2d565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c7f575f80fd5b919050565b5f8060408385031215610c95575f80fd5b610c9e83610c69565b946020939093013593505050565b5f805f60608486031215610cbe575f80fd5b610cc784610c69565b9250610cd560208501610c69565b9150604084013590509250925092565b5f60208284031215610cf5575f80fd5b610cfe82610c69565b9392505050565b5f8060408385031215610d16575f80fd5b610d1f83610c69565b9150610d2d60208401610c69565b90509250929050565b600181811c90821680610d4a57607f821691505b602082108103610d6857634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561033057610330610d6e565b8181038181111561033057610330610d6e56fea26469706673582212204dc077ce334aefc2d8de1775e76b326bee5938e575cc1d3c968ce5e44936de5e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x123B CODESIZE SUB DUP1 PUSH3 0x123B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x268 JUMP JUMPDEST PUSH3 0x3E CALLER PUSH3 0x71 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x4C DUP5 DUP3 PUSH3 0x361 JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0x5B DUP4 DUP3 PUSH3 0x361 JUMP JUMPDEST POP PUSH3 0x68 CALLER DUP3 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH3 0x44F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x11B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x12E SWAP2 SWAP1 PUSH3 0x429 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x15C SWAP1 DUP5 SWAP1 PUSH3 0x429 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI PUSH3 0x1EB PUSH3 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x216 JUMPI PUSH3 0x216 PUSH3 0x1AA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x255 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x236 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x27B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x2A0 DUP8 DUP4 DUP9 ADD PUSH3 0x1BE JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x2C5 DUP7 DUP3 DUP8 ADD PUSH3 0x1BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x30A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1A5 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x338 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x359 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x344 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x37D JUMPI PUSH3 0x37D PUSH3 0x1AA JUMP JUMPDEST PUSH3 0x395 DUP2 PUSH3 0x38E DUP5 SLOAD PUSH3 0x2D6 JUMP JUMPDEST DUP5 PUSH3 0x310 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3CB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3B3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x359 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3FB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3DA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x419 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x449 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDE DUP1 PUSH3 0x45D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xB6B285D9 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x48F JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x13B PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x29F SWAP1 PUSH2 0xD36 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0xD36 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x316 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x316 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x32C CALLER DUP5 DUP5 PUSH2 0x666 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x342 DUP5 DUP5 DUP5 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D8 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x666 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x32C SWAP2 DUP6 SWAP1 PUSH2 0x419 SWAP1 DUP7 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206D696E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x48B DUP3 DUP3 PUSH2 0x957 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x4A0 PUSH0 PUSH2 0xA8C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x29F SWAP1 PUSH2 0xD36 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206275726E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x48B DUP3 DUP3 PUSH2 0xADB JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x5AC CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x666 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x32C CALLER DUP5 DUP5 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x5CA PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8FD SWAP1 DUP5 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x949 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9EA SWAP1 DUP5 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBDC SWAP1 DUP5 SWAP1 PUSH2 0xD95 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x77D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC2D JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC7F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC9E DUP4 PUSH2 0xC69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCBE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCC7 DUP5 PUSH2 0xC69 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD5 PUSH1 0x20 DUP6 ADD PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCFE DUP3 PUSH2 0xC69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP4 PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2D PUSH1 0x20 DUP5 ADD PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD4A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD68 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x330 JUMPI PUSH2 0x330 PUSH2 0xD6E JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x330 JUMPI PUSH2 0x330 PUSH2 0xD6E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xC0 PUSH24 0xCE334AEFC2D8DE1775E76B326BEE5938E575CC1D3C968CE5 0xE4 0x49 CALLDATASIZE 0xDE 0x5E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1471:11390:4:-:0;;;2138:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:3;936:18:0;:32::i;:::-;2218:5:4;:13;2226:5;2218;:13;:::i;:::-;-1:-1:-1;2242:7:4;:17;2252:7;2242;:17;:::i;:::-;-1:-1:-1;2270:24:4;2276:10;2287:6;2270:5;:24::i;:::-;2138:166;;;1471:11390;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;9074:399:4:-;-1:-1:-1;;;;;9158:21:4;;9150:65;;;;-1:-1:-1;;;9150:65:4;;4410:2:5;9150:65:4;;;4392:21:5;4449:2;4429:18;;;4422:30;4488:33;4468:18;;;4461:61;4539:18;;9150:65:4;;;;;;;;9306:6;9290:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9323:18:4;;;;;;:9;:18;;;;;:28;;9345:6;;9323:18;:28;;9345:6;;9323:28;:::i;:::-;;;;-1:-1:-1;;9367:37:4;;4941:25:5;;;-1:-1:-1;;;;;9367:37:4;;;9384:1;;9367:37;;4929:2:5;4914:18;9367:37:4;;;;;;;9074:399;;:::o;12005:125::-;;;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:5:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:5;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:5;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:5;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:5;;;4053:26;4004:89;-1:-1:-1;;2808:1:5;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:5;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:5;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:5;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:5:o;4568:222::-;4633:9;;;4654:10;;;4651:133;;;4706:10;4701:3;4697:20;4694:1;4687:31;4741:4;4738:1;4731:15;4769:4;4766:1;4759:15;4651:133;4568:222;;;;:::o;4795:177::-;1471:11390:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_835": {
									"entryPoint": 1638,
									"id": 835,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_846": {
									"entryPoint": null,
									"id": 846,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_767": {
									"entryPoint": 2779,
									"id": 767,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2611,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_695": {
									"entryPoint": 2391,
									"id": 695,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_227": {
									"entryPoint": null,
									"id": 227,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2700,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_639": {
									"entryPoint": 1930,
									"id": 639,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_427": {
									"entryPoint": null,
									"id": 427,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_448": {
									"entryPoint": 800,
									"id": 448,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_351": {
									"entryPoint": null,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_790": {
									"entryPoint": 1201,
									"id": 790,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_562": {
									"entryPoint": 1310,
									"id": 562,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_523": {
									"entryPoint": 995,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_409": {
									"entryPoint": 1054,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_307": {
									"entryPoint": 656,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1167,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setapprovedcontractaddress_386": {
									"entryPoint": 1474,
									"id": 386,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_317": {
									"entryPoint": 1186,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_496": {
									"entryPoint": 822,
									"id": 496,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1517,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_372": {
									"entryPoint": 1462,
									"id": 372,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0fab782acd57331702f761e8cd4698ac887f55e8c87f2d063c56e130ed04fb1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8830:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:548:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:5"
															},
															"nodeType": "YulIf",
															"src": "664:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:5",
														"type": ""
													}
												],
												"src": "567:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "745:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:5",
														"type": ""
													}
												],
												"src": "1004:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:5",
														"type": ""
													}
												],
												"src": "1196:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:5"
															},
															"nodeType": "YulIf",
															"src": "1492:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1378:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:5",
														"type": ""
													}
												],
												"src": "1711:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:5"
															},
															"nodeType": "YulIf",
															"src": "1980:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:5",
														"type": ""
													}
												],
												"src": "1900:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2192:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2202:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2161:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2172:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2183:4:5",
														"type": ""
													}
												],
												"src": "2091:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2432:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:32:5"
															},
															"nodeType": "YulIf",
															"src": "2396:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2505:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2344:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2355:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2367:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2375:6:5",
														"type": ""
													}
												],
												"src": "2299:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2619:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2629:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2646:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2690:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2664:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2737:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2739:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2749:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2749:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2717:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:26:5"
															},
															"nodeType": "YulIf",
															"src": "2707:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2827:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2855:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2860:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2851:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2851:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2841:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2885:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2885:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2920:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2923:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2913:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2783:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2803:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:38:5"
															},
															"nodeType": "YulIf",
															"src": "2777:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2599:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2608:6:5",
														"type": ""
													}
												],
												"src": "2564:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:230:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3140:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3133:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3174:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3185:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3170:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3170:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3190:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3163:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3163:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3213:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3224:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3209:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3229:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3202:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:5"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:10:5",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:38:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3320:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3332:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3343:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3328:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3320:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3100:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3114:4:5",
														"type": ""
													}
												],
												"src": "2949:404:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3390:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3407:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3414:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3400:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3440:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3471:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3474:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3464:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3464:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3358:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3538:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3548:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3559:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3562:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3587:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3589:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3589:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3589:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3579:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3582:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3576:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:10:5"
															},
															"nodeType": "YulIf",
															"src": "3573:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3521:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3524:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3530:3:5",
														"type": ""
													}
												],
												"src": "3490:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3794:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3811:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3822:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3804:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3804:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3804:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3841:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3841:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3861:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3834:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3834:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3834:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3895:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3880:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3880:18:5"
																	},
																	{
																		"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3900:31:5",
																		"type": "",
																		"value": "you are not approved  to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3873:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3941:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3953:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3964:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3949:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3941:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3771:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3785:4:5",
														"type": ""
													}
												],
												"src": "3620:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4152:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4169:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4162:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4214:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4199:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4242:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4253:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4238:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4238:18:5"
																	},
																	{
																		"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206275726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4258:31:5",
																		"type": "",
																		"value": "you are not approved  to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4231:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4231:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4299:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4311:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4322:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4299:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0fab782acd57331702f761e8cd4698ac887f55e8c87f2d063c56e130ed04fb1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4129:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4143:4:5",
														"type": ""
													}
												],
												"src": "3978:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4510:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4527:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4538:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4561:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4572:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4557:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4557:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4577:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4550:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4600:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4611:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4616:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4589:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4589:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4589:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4671:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4682:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4667:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4687:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4660:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4660:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4704:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4716:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4727:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4704:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4487:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4501:4:5",
														"type": ""
													}
												],
												"src": "4336:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4916:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4933:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4926:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4926:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4926:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4967:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4978:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4963:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4956:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5006:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5017:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5002:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5002:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5022:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4995:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5077:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5088:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5073:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5073:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5093:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5066:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5111:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5123:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5134:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5119:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5111:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4907:4:5",
														"type": ""
													}
												],
												"src": "4742:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5323:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5340:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5351:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5333:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5333:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5333:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5385:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5370:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5413:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5424:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5409:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5409:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5429:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5402:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5402:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5484:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5495:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5480:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5480:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5500:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5473:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5473:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5516:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5528:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5539:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5524:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5516:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5300:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5314:4:5",
														"type": ""
													}
												],
												"src": "5149:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5728:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5745:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5756:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5738:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5738:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5779:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5775:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5775:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5795:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5768:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5768:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5818:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5829:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5814:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5814:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5834:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5807:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5807:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5807:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5889:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5900:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5885:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5885:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5905:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5878:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5919:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5931:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5942:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5927:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5919:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5705:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5719:4:5",
														"type": ""
													}
												],
												"src": "5554:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6131:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6148:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6159:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6141:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6141:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6182:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6193:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6198:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6221:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6232:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6217:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6217:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6237:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6210:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6292:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6303:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6288:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6288:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6308:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6281:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6281:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6281:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6325:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6337:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6348:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6333:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6325:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6108:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6122:4:5",
														"type": ""
													}
												],
												"src": "5957:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6537:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6554:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6565:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6547:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6547:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6588:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6599:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6584:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6584:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6604:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6577:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6577:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6577:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6627:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6638:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6623:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6623:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6643:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6616:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6698:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6709:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6694:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6714:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6687:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6687:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6687:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6729:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6741:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6752:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6737:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6737:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6729:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6514:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6528:4:5",
														"type": ""
													}
												],
												"src": "6363:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6941:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6958:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6969:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6951:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6951:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6992:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7003:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6981:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7031:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7042:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7027:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7027:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7047:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7020:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7102:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7113:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7098:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7098:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7118:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7091:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7091:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7148:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7159:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7144:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6918:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6932:4:5",
														"type": ""
													}
												],
												"src": "6767:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7348:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7365:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7358:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7358:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7358:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7399:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7410:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7395:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7395:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7388:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7388:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7388:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7449:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7454:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7427:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7427:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7427:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7497:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7509:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7520:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7505:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7497:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7325:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7339:4:5",
														"type": ""
													}
												],
												"src": "7174:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7708:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7725:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7736:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7718:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7718:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7759:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7770:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7755:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7755:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7775:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7748:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7748:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7814:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7787:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7787:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7787:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7858:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7870:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7881:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7858:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7685:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7699:4:5",
														"type": ""
													}
												],
												"src": "7534:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8069:223:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8086:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8097:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8079:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8079:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8120:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8131:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8116:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8116:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8136:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8109:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8159:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8170:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:18:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8175:34:5",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8148:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8230:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8241:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8226:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8226:18:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8246:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8219:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8219:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8219:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8259:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8271:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8282:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8267:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8267:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8259:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8046:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8060:4:5",
														"type": ""
													}
												],
												"src": "7895:397:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8471:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8488:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8499:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8481:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8481:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8481:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8522:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8533:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8538:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8511:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8511:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8511:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8561:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8572:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8557:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8557:18:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8577:34:5",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8550:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8550:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8550:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8632:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8643:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8628:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8628:18:5"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8648:4:5",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8621:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8621:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8621:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8662:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8674:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8685:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8670:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8670:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8662:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8448:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8462:4:5",
														"type": ""
													}
												],
												"src": "8297:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8749:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8759:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8771:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8774:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8767:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8759:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8800:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8802:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8802:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8802:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8791:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8797:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8788:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8788:11:5"
															},
															"nodeType": "YulIf",
															"src": "8785:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8731:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8734:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8740:4:5",
														"type": ""
													}
												],
												"src": "8700:128:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"you are not approved  to mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0fab782acd57331702f761e8cd4698ac887f55e8c87f2d063c56e130ed04fb1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"you are not approved  to burn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610106575f3560e01c8063715018a61161009e578063a457c2d71161006e578063a457c2d71461020c578063a9059cbb1461021f578063b6b285d914610232578063dd62ed3e14610245578063f2fde38b1461027d575f80fd5b8063715018a6146101cf5780638da5cb5b146101d757806395d89b41146101f15780639dc29fac146101f9575f80fd5b8063313ce567116100d9578063313ce56714610170578063395093511461017f57806340c10f191461019257806370a08231146101a7575f80fd5b806306fdde031461010a578063095ea7b31461012857806318160ddd1461014b57806323b872dd1461015d575b5f80fd5b610112610290565b60405161011f9190610c1e565b60405180910390f35b61013b610136366004610c84565b610320565b604051901515815260200161011f565b6003545b60405190815260200161011f565b61013b61016b366004610cac565b610336565b6040516012815260200161011f565b61013b61018d366004610c84565b6103e3565b6101a56101a0366004610c84565b61041e565b005b61014f6101b5366004610ce5565b6001600160a01b03165f9081526001602052604090205490565b6101a561048f565b5f546040516001600160a01b03909116815260200161011f565b6101126104a2565b6101a5610207366004610c84565b6104b1565b61013b61021a366004610c84565b61051e565b61013b61022d366004610c84565b6105b6565b6101a5610240366004610ce5565b6105c2565b61014f610253366004610d05565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b6101a561028b366004610ce5565b6105ed565b60606004805461029f90610d36565b80601f01602080910402602001604051908101604052809291908181526020018280546102cb90610d36565b80156103165780601f106102ed57610100808354040283529160200191610316565b820191905f5260205f20905b8154815290600101906020018083116102f957829003601f168201915b5050505050905090565b5f61032c338484610666565b5060015b92915050565b5f61034284848461078a565b6001600160a01b0384165f908152600260209081526040808320338452909152902054828110156103cb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103d88533858403610666565b506001949350505050565b335f8181526002602090815260408083206001600160a01b0387168452909152812054909161032c918590610419908690610d82565b610666565b335f9081526006602052604090205460ff1615156001146104815760405162461bcd60e51b815260206004820152601d60248201527f796f7520617265206e6f7420617070726f7665642020746f206d696e7400000060448201526064016103c2565b61048b8282610957565b5050565b610497610a33565b6104a05f610a8c565b565b60606005805461029f90610d36565b335f9081526006602052604090205460ff1615156001146105145760405162461bcd60e51b815260206004820152601d60248201527f796f7520617265206e6f7420617070726f7665642020746f206275726e00000060448201526064016103c2565b61048b8282610adb565b335f9081526002602090815260408083206001600160a01b03861684529091528120548281101561059f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c2565b6105ac3385858403610666565b5060019392505050565b5f61032c33848461078a565b6105ca610a33565b6001600160a01b03165f908152600660205260409020805460ff19166001179055565b6105f5610a33565b6001600160a01b03811661065a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c2565b61066381610a8c565b50565b6001600160a01b0383166106c85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c2565b6001600160a01b0382166107295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c2565b6001600160a01b038381165f8181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107ee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c2565b6001600160a01b0382166108505760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c2565b6001600160a01b0383165f90815260016020526040902054818110156108c75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c2565b6001600160a01b038085165f908152600160205260408082208585039055918516815290812080548492906108fd908490610d82565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161094991815260200190565b60405180910390a350505050565b6001600160a01b0382166109ad5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c2565b8060035f8282546109be9190610d82565b90915550506001600160a01b0382165f90815260016020526040812080548392906109ea908490610d82565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f546001600160a01b031633146104a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c2565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610b3b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c2565b6001600160a01b0382165f9081526001602052604090205481811015610bae5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c2565b6001600160a01b0383165f908152600160205260408120838303905560038054849290610bdc908490610d95565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161077d565b5f6020808352835180828501525f5b81811015610c4957858101830151858201604001528201610c2d565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c7f575f80fd5b919050565b5f8060408385031215610c95575f80fd5b610c9e83610c69565b946020939093013593505050565b5f805f60608486031215610cbe575f80fd5b610cc784610c69565b9250610cd560208501610c69565b9150604084013590509250925092565b5f60208284031215610cf5575f80fd5b610cfe82610c69565b9392505050565b5f8060408385031215610d16575f80fd5b610d1f83610c69565b9150610d2d60208401610c69565b90509250929050565b600181811c90821680610d4a57607f821691505b602082108103610d6857634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561033057610330610d6e565b8181038181111561033057610330610d6e56fea26469706673582212204dc077ce334aefc2d8de1775e76b326bee5938e575cc1d3c968ce5e44936de5e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xB6B285D9 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x13B PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x48F JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x13B PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x29F SWAP1 PUSH2 0xD36 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0xD36 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x316 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x316 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x32C CALLER DUP5 DUP5 PUSH2 0x666 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x342 DUP5 DUP5 DUP5 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D8 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x666 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x32C SWAP2 DUP6 SWAP1 PUSH2 0x419 SWAP1 DUP7 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206D696E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x48B DUP3 DUP3 PUSH2 0x957 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x4A0 PUSH0 PUSH2 0xA8C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x29F SWAP1 PUSH2 0xD36 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206275726E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x48B DUP3 DUP3 PUSH2 0xADB JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x5AC CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x666 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x32C CALLER DUP5 DUP5 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x5CA PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5F5 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0xA8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8FD SWAP1 DUP5 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x949 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9EA SWAP1 DUP5 SWAP1 PUSH2 0xD82 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBDC SWAP1 DUP5 SWAP1 PUSH2 0xD95 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x77D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC2D JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC7F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC9E DUP4 PUSH2 0xC69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCBE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCC7 DUP5 PUSH2 0xC69 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD5 PUSH1 0x20 DUP6 ADD PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCFE DUP3 PUSH2 0xC69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP4 PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2D PUSH1 0x20 DUP5 ADD PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD4A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD68 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x330 JUMPI PUSH2 0x330 PUSH2 0xD6E JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x330 JUMPI PUSH2 0x330 PUSH2 0xD6E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xC0 PUSH24 0xCE334AEFC2D8DE1775E76B326BEE5938E575CC1D3C968CE5 0xE4 0x49 CALLDATASIZE 0xDE 0x5E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1471:11390:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4881:169;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;4881:169:4;1004:187:5;3494:108:4;3582:12;;3494:108;;;1342:25:5;;;1330:2;1315:18;3494:108:4;1196:177:5;5532:492:4;;;;;;:::i;:::-;;:::i;3336:93::-;;;3419:2;1853:36:5;;1841:2;1826:18;3336:93:4;1711:184:5;6433:215:4;;;;;;:::i;:::-;;:::i;4338:182::-;;;;;;:::i;:::-;;:::i;:::-;;3665:127;;;;;;:::i;:::-;-1:-1:-1;;;;;3766:18:4;3739:7;3766:18;;;:9;:18;;;;;;;3665:127;1824:101:0;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;2237:51:5;;2225:2;2210:18;1201:85:0;2091:203:5;2593:104:4;;;:::i;10405:182::-;;;;;;:::i;:::-;;:::i;7151:413::-;;;;;;:::i;:::-;;:::i;4005:175::-;;;;;;:::i;:::-;;:::i;4188:142::-;;;;;;:::i;:::-;;:::i;4583:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4699:18:4;;;4672:7;4699:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4583:151;2074:198:0;;;;;;:::i;:::-;;:::i;2374:100:4:-;2428:13;2461:5;2454:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:100;:::o;4881:169::-;4964:4;4981:39;719:10:3;5004:7:4;5013:6;4981:8;:39::i;:::-;-1:-1:-1;5038:4:4;4881:169;;;;;:::o;5532:492::-;5672:4;5689:36;5699:6;5707:9;5718:6;5689:9;:36::i;:::-;-1:-1:-1;;;;;5765:19:4;;5738:24;5765:19;;;:11;:19;;;;;;;;719:10:3;5765:33:4;;;;;;;;5817:26;;;;5809:79;;;;-1:-1:-1;;;5809:79:4;;3151:2:5;5809:79:4;;;3133:21:5;3190:2;3170:18;;;3163:30;3229:34;3209:18;;;3202:62;-1:-1:-1;;;3280:18:5;;;3273:38;3328:19;;5809:79:4;;;;;;;;;5924:57;5933:6;719:10:3;5974:6:4;5955:16;:25;5924:8;:57::i;:::-;-1:-1:-1;6012:4:4;;5532:492;-1:-1:-1;;;;5532:492:4:o;6433:215::-;719:10:3;6521:4:4;6570:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6570:34:4;;;;;;;;;;6521:4;;6538:80;;6561:7;;6570:47;;6607:10;;6570:47;:::i;:::-;6538:8;:80::i;4338:182::-;4432:10;4404:39;;;;:27;:39;;;;;;;;:46;;:39;:46;4396:88;;;;-1:-1:-1;;;4396:88:4;;3822:2:5;4396:88:4;;;3804:21:5;3861:2;3841:18;;;3834:30;3900:31;3880:18;;;3873:59;3949:18;;4396:88:4;3620:353:5;4396:88:4;4495:17;4501:3;4505:6;4495:5;:17::i;:::-;4338:182;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2593:104:4:-;2649:13;2682:7;2675:14;;;;;:::i;10405:182::-;10499:10;10471:39;;;;:27;:39;;;;;;;;:46;;:39;:46;10463:88;;;;-1:-1:-1;;;10463:88:4;;4180:2:5;10463:88:4;;;4162:21:5;4219:2;4199:18;;;4192:30;4258:31;4238:18;;;4231:59;4307:18;;10463:88:4;3978:353:5;10463:88:4;10562:17;10568:3;10572:6;10562:5;:17::i;7151:413::-;719:10:3;7244:4:4;7288:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;7288:34:4;;;;;;;;;;7341:35;;;;7333:85;;;;-1:-1:-1;;;7333:85:4;;4538:2:5;7333:85:4;;;4520:21:5;4577:2;4557:18;;;4550:30;4616:34;4596:18;;;4589:62;-1:-1:-1;;;4667:18:5;;;4660:35;4712:19;;7333:85:4;4336:401:5;7333:85:4;7454:67;719:10:3;7477:7:4;7505:15;7486:16;:34;7454:8;:67::i;:::-;-1:-1:-1;7552:4:4;;7151:413;-1:-1:-1;;;7151:413:4:o;4005:175::-;4091:4;4108:42;719:10:3;4132:9:4;4143:6;4108:9;:42::i;4188:142::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4275:32:4::1;;::::0;;;:27:::1;:32;::::0;;;;:38;;-1:-1:-1;;4275:38:4::1;4309:4;4275:38;::::0;;4188:142::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;4944:2:5;2154:73:0::1;::::0;::::1;4926:21:5::0;4983:2;4963:18;;;4956:30;5022:34;5002:18;;;4995:62;-1:-1:-1;;;5073:18:5;;;5066:36;5119:19;;2154:73:0::1;4742:402:5::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;11025:380:4:-;-1:-1:-1;;;;;11161:19:4;;11153:68;;;;-1:-1:-1;;;11153:68:4;;5351:2:5;11153:68:4;;;5333:21:5;5390:2;5370:18;;;5363:30;5429:34;5409:18;;;5402:62;-1:-1:-1;;;5480:18:5;;;5473:34;5524:19;;11153:68:4;5149:400:5;11153:68:4;-1:-1:-1;;;;;11240:21:4;;11232:68;;;;-1:-1:-1;;;11232:68:4;;5756:2:5;11232:68:4;;;5738:21:5;5795:2;5775:18;;;5768:30;5834:34;5814:18;;;5807:62;-1:-1:-1;;;5885:18:5;;;5878:32;5927:19;;11232:68:4;5554:398:5;11232:68:4;-1:-1:-1;;;;;11313:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11365:32;;1342:25:5;;;11365:32:4;;1315:18:5;11365:32:4;;;;;;;;11025:380;;;:::o;8054:733::-;-1:-1:-1;;;;;8194:20:4;;8186:70;;;;-1:-1:-1;;;8186:70:4;;6159:2:5;8186:70:4;;;6141:21:5;6198:2;6178:18;;;6171:30;6237:34;6217:18;;;6210:62;-1:-1:-1;;;6288:18:5;;;6281:35;6333:19;;8186:70:4;5957:401:5;8186:70:4;-1:-1:-1;;;;;8275:23:4;;8267:71;;;;-1:-1:-1;;;8267:71:4;;6565:2:5;8267:71:4;;;6547:21:5;6604:2;6584:18;;;6577:30;6643:34;6623:18;;;6616:62;-1:-1:-1;;;6694:18:5;;;6687:33;6737:19;;8267:71:4;6363:399:5;8267:71:4;-1:-1:-1;;;;;8435:17:4;;8411:21;8435:17;;;:9;:17;;;;;;8471:23;;;;8463:74;;;;-1:-1:-1;;;8463:74:4;;6969:2:5;8463:74:4;;;6951:21:5;7008:2;6988:18;;;6981:30;7047:34;7027:18;;;7020:62;-1:-1:-1;;;7098:18:5;;;7091:36;7144:19;;8463:74:4;6767:402:5;8463:74:4;-1:-1:-1;;;;;8573:17:4;;;;;;;:9;:17;;;;;;8593:22;;;8573:42;;8637:20;;;;;;;;:30;;8609:6;;8573:17;8637:30;;8609:6;;8637:30;:::i;:::-;;;;;;;;8702:9;-1:-1:-1;;;;;8685:35:4;8694:6;-1:-1:-1;;;;;8685:35:4;;8713:6;8685:35;;;;1342:25:5;;1330:2;1315:18;;1196:177;8685:35:4;;;;;;;;8175:612;8054:733;;;:::o;9074:399::-;-1:-1:-1;;;;;9158:21:4;;9150:65;;;;-1:-1:-1;;;9150:65:4;;7376:2:5;9150:65:4;;;7358:21:5;7415:2;7395:18;;;7388:30;7454:33;7434:18;;;7427:61;7505:18;;9150:65:4;7174:355:5;9150:65:4;9306:6;9290:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9323:18:4;;;;;;:9;:18;;;;;:28;;9345:6;;9323:18;:28;;9345:6;;9323:28;:::i;:::-;;;;-1:-1:-1;;9367:37:4;;1342:25:5;;;-1:-1:-1;;;;;9367:37:4;;;9384:1;;9367:37;;1330:2:5;1315:18;9367:37:4;;;;;;;4338:182;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;7736:2:5;1414:68:0;;;7718:21:5;;;7755:18;;;7748:30;7814:34;7794:18;;;7787:62;7866:18;;1414:68:0;7534:356:5;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;9806:591:4:-;-1:-1:-1;;;;;9890:21:4;;9882:67;;;;-1:-1:-1;;;9882:67:4;;8097:2:5;9882:67:4;;;8079:21:5;8136:2;8116:18;;;8109:30;8175:34;8155:18;;;8148:62;-1:-1:-1;;;8226:18:5;;;8219:31;8267:19;;9882:67:4;7895:397:5;9882:67:4;-1:-1:-1;;;;;10049:18:4;;10024:22;10049:18;;;:9;:18;;;;;;10086:24;;;;10078:71;;;;-1:-1:-1;;;10078:71:4;;8499:2:5;10078:71:4;;;8481:21:5;8538:2;8518:18;;;8511:30;8577:34;8557:18;;;8550:62;-1:-1:-1;;;8628:18:5;;;8621:32;8670:19;;10078:71:4;8297:398:5;10078:71:4;-1:-1:-1;;;;;10185:18:4;;;;;;:9;:18;;;;;10206:23;;;10185:44;;10251:12;:22;;10223:6;;10185:18;10251:22;;10223:6;;10251:22;:::i;:::-;;;;-1:-1:-1;;10291:37:4;;1342:25:5;;;10317:1:4;;-1:-1:-1;;;;;10291:37:4;;;;;1330:2:5;1315:18;10291:37:4;1196:177:5;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:5:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;3358:127::-;3419:10;3414:3;3410:20;3407:1;3400:31;3450:4;3447:1;3440:15;3474:4;3471:1;3464:15;3490:125;3555:9;;;3576:10;;;3573:36;;;3589:18;;:::i;8700:128::-;8767:9;;;8788:11;;;8785:37;;;8802:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "710000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24640",
								"balanceOf(address)": "2623",
								"burn(address,uint256)": "53254",
								"decimals()": "199",
								"decreaseAllowance(address,uint256)": "26907",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2344",
								"renounceOwnership()": "infinite",
								"setapprovedcontractaddress(address)": "26836",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28439"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1471,
									"end": 12861,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2138,
									"end": 2304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2218,
									"end": 2223,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2218,
									"end": 2231,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2226,
									"end": 2231,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2218,
									"end": 2223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2218,
									"end": 2231,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2218,
									"end": 2231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2218,
									"end": 2231,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2218,
									"end": 2231,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2242,
									"end": 2249,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2242,
									"end": 2259,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2252,
									"end": 2259,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2242,
									"end": 2249,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2242,
									"end": 2259,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2242,
									"end": 2259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2242,
									"end": 2259,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2242,
									"end": 2259,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2270,
									"end": 2294,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2276,
									"end": 2286,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2287,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2270,
									"end": 2294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2294,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2270,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2304,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9074,
									"end": 9473,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 9074,
									"end": 9473,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9158,
									"end": 9179,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9158,
									"end": 9179,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4410,
									"end": 4412,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4392,
									"end": 4413,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4449,
									"end": 4451,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4429,
									"end": 4447,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4429,
									"end": 4447,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4429,
									"end": 4447,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4422,
									"end": 4452,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4488,
									"end": 4521,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4468,
									"end": 4486,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 4468,
									"end": 4486,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4468,
									"end": 4486,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4461,
									"end": 4522,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4539,
									"end": 4557,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4539,
									"end": 4557,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 9150,
									"end": 9215,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 9306,
									"end": 9312,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9302,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 9290,
									"end": 9302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 9290,
									"end": 9312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9332,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 9345,
									"end": 9351,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 9345,
									"end": 9351,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9341,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9345,
									"end": 9351,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 9345,
									"end": 9351,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 9323,
									"end": 9351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9323,
									"end": 9351,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4941,
									"end": 4966,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4941,
									"end": 4966,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4941,
									"end": 4966,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9384,
									"end": 9385,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 9384,
									"end": 9385,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4929,
									"end": 4931,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4914,
									"end": 4932,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9367,
									"end": 9404,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 9074,
									"end": 9473,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 9074,
									"end": 9473,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 9074,
									"end": 9473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 12005,
									"end": 12130,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 12005,
									"end": 12130,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 12005,
									"end": 12130,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 12005,
									"end": 12130,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 12005,
									"end": 12130,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 12005,
									"end": 12130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1614,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1105,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1121,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1170,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1154,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1139,
									"end": 1171,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1182,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1186,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1227,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1227,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1276,
									"end": 1290,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1290,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1290,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1305,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1379,
									"end": 1386,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1359,
									"end": 1368,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1377,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1326,
									"end": 1387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1316,
									"end": 1387,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1316,
									"end": 1387,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1435,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1422,
									"end": 1431,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1418,
									"end": 1436,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1412,
									"end": 1437,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1437,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1437,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1462,
									"end": 1464,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1452,
									"end": 1460,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1449,
									"end": 1465,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1479,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1475,
									"end": 1476,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 1480,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1556,
									"end": 1563,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1545,
									"end": 1553,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1530,
									"end": 1554,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1501,
									"end": 1564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1564,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1564,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1564,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1604,
									"end": 1606,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1593,
									"end": 1602,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1589,
									"end": 1607,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1583,
									"end": 1608,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1573,
									"end": 1608,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1573,
									"end": 1608,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1614,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1614,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1614,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1999,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1619,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1698,
									"end": 1699,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1694,
									"end": 1706,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1694,
									"end": 1706,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1694,
									"end": 1706,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1694,
									"end": 1706,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1741,
									"end": 1753,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1762,
									"end": 1823,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1762,
									"end": 1823,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1820,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1808,
									"end": 1814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1804,
									"end": 1821,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1794,
									"end": 1821,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1794,
									"end": 1821,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1762,
									"end": 1823,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1762,
									"end": 1823,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1861,
									"end": 1867,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1858,
									"end": 1872,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1838,
									"end": 1856,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1873,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1832,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1832,
									"end": 1993,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1915,
									"end": 1925,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1910,
									"end": 1913,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1906,
									"end": 1926,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1927,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 1954,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1947,
									"end": 1948,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1940,
									"end": 1955,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1978,
									"end": 1982,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1968,
									"end": 1983,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1832,
									"end": 1993,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1832,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1832,
									"end": 1993,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1999,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1999,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1999,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2130,
									"end": 2675,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2130,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2234,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2227,
									"end": 2230,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2224,
									"end": 2235,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2669,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2669,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2221,
									"end": 2669,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2268,
									"end": 2269,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2293,
									"end": 2298,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2291,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2282,
									"end": 2299,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2338,
									"end": 2342,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2336,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2324,
									"end": 2343,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2408,
									"end": 2410,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2396,
									"end": 2406,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2389,
									"end": 2390,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2385,
									"end": 2412,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2379,
									"end": 2383,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2375,
									"end": 2413,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2444,
									"end": 2448,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2432,
									"end": 2442,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2429,
									"end": 2449,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2473,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2426,
									"end": 2473,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2467,
									"end": 2471,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2473,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2426,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2522,
									"end": 2524,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2517,
									"end": 2520,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2513,
									"end": 2525,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2510,
									"end": 2511,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2506,
									"end": 2526,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2500,
									"end": 2504,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2496,
									"end": 2527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2486,
									"end": 2527,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2486,
									"end": 2527,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2595,
									"end": 2597,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2588,
									"end": 2593,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2585,
									"end": 2598,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2640,
									"end": 2657,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2640,
									"end": 2657,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2640,
									"end": 2657,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2621,
									"end": 2622,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2610,
									"end": 2623,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2577,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2581,
									"end": 2584,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2581,
									"end": 2584,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2581,
									"end": 2584,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2130,
									"end": 2675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2130,
									"end": 2675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2130,
									"end": 2675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2130,
									"end": 2675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2851,
									"end": 4203,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2851,
									"end": 4203,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 2981,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 2981,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2993,
									"end": 3023,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2993,
									"end": 3023,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2990,
									"end": 3046,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2990,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 2990,
									"end": 3046,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3026,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3026,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 3026,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3026,
									"end": 3044,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3026,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3055,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3105,
									"end": 3143,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3137,
									"end": 3141,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3131,
									"end": 3142,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3105,
									"end": 3143,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 3105,
									"end": 3143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3105,
									"end": 3143,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3105,
									"end": 3143,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3099,
									"end": 3103,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3055,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 3055,
									"end": 3152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3055,
									"end": 3152,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3055,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3211,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3207,
									"end": 3211,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3271,
									"end": 3273,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3260,
									"end": 3274,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3260,
									"end": 3274,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3288,
									"end": 3289,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3283,
									"end": 3946,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3283,
									"end": 3946,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3283,
									"end": 3946,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3283,
									"end": 3946,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3990,
									"end": 3991,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4013,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4093,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4093,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 4004,
									"end": 4093,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4059,
									"end": 4078,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4059,
									"end": 4078,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4059,
									"end": 4078,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4053,
									"end": 4079,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4004,
									"end": 4093,
									"name": "tag",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 4004,
									"end": 4093,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2808,
									"end": 2809,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2804,
									"end": 2815,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2804,
									"end": 2815,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2804,
									"end": 2815,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2800,
									"end": 2824,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2796,
									"end": 2825,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2786,
									"end": 2826,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2832,
									"end": 2833,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2828,
									"end": 2839,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2828,
									"end": 2839,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2828,
									"end": 2839,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2783,
									"end": 2840,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4106,
									"end": 4187,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4106,
									"end": 4187,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3253,
									"end": 4197,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3253,
									"end": 4197,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3283,
									"end": 3946,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3283,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2077,
									"end": 2078,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2070,
									"end": 2084,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2084,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2084,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2114,
									"end": 2118,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2101,
									"end": 2119,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2101,
									"end": 2119,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3319,
									"end": 3339,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3319,
									"end": 3339,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3319,
									"end": 3339,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3451,
									"end": 3458,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3448,
									"end": 3449,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3445,
									"end": 3459,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3540,
									"end": 3559,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3540,
									"end": 3559,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3540,
									"end": 3559,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3560,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3519,
									"end": 3561,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3519,
									"end": 3561,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3659,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3659,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3659,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3659,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3600,
									"end": 3601,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3588,
									"end": 3602,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3588,
									"end": 3602,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3588,
									"end": 3602,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3588,
									"end": 3602,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3467,
									"end": 3486,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3467,
									"end": 3486,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 3437,
									"end": 3673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3441,
									"end": 3444,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3707,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3692,
									"end": 3699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3708,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3686,
									"end": 3887,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3686,
									"end": 3887,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3686,
									"end": 3887,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3762,
									"end": 3781,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3762,
									"end": 3781,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3762,
									"end": 3781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3756,
									"end": 3782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3845,
									"end": 3846,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3841,
									"end": 3855,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3841,
									"end": 3855,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3841,
									"end": 3855,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3857,
									"end": 3860,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3837,
									"end": 3861,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 3870,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3829,
									"end": 3871,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3814,
									"end": 3872,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3799,
									"end": 3873,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3799,
									"end": 3873,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3686,
									"end": 3887,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3686,
									"end": 3887,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3933,
									"end": 3934,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3917,
									"end": 3931,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3917,
									"end": 3931,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3917,
									"end": 3931,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 3935,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3900,
									"end": 3936,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3900,
									"end": 3936,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2851,
									"end": 4203,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4568,
									"end": 4790,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4568,
									"end": 4790,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4642,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4642,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4633,
									"end": 4642,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4654,
									"end": 4664,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4654,
									"end": 4664,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4654,
									"end": 4664,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4651,
									"end": 4784,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4651,
									"end": 4784,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 4651,
									"end": 4784,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4706,
									"end": 4716,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 4701,
									"end": 4704,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 4697,
									"end": 4717,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4694,
									"end": 4695,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4741,
									"end": 4745,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 4738,
									"end": 4739,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4731,
									"end": 4746,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4769,
									"end": 4773,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4766,
									"end": 4767,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4759,
									"end": 4774,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4651,
									"end": 4784,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 4651,
									"end": 4784,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4568,
									"end": 4790,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4568,
									"end": 4790,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4568,
									"end": 4790,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4568,
									"end": 4790,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4568,
									"end": 4790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4795,
									"end": 4972,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 4795,
									"end": 4972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 12861,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204dc077ce334aefc2d8de1775e76b326bee5938e575cc1d3c968ce5e44936de5e64736f6c63430008140033",
									".code": [
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "B6B285D9"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "9DC29FAC"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 12861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2374,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2374,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4881,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4881,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3602,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3494,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3594,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3582,
											"end": 3594,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3602,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3494,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3602,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3602,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5532,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3336,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3429,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 6433,
											"end": 6648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 6433,
											"end": 6648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4338,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4338,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3665,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3775,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3792,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2697,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2593,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2593,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2593,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2593,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 10405,
											"end": 10587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 10405,
											"end": 10587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 7151,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 7151,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4005,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4005,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4188,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4188,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4583,
											"end": 4734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4672,
											"end": 4679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4710,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4699,
											"end": 4726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4734,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2441,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2454,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2454,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5004,
											"end": 5011,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4981,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4981,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5042,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5716,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5689,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5689,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5689,
											"end": 5725,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5689,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5776,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5817,
											"end": 5843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5817,
											"end": 5843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5817,
											"end": 5843,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5817,
											"end": 5843,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3263,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3347,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3328,
											"end": 3347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5809,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5933,
											"end": 5939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5971,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5955,
											"end": 5980,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5924,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5981,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5924,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6012,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6012,
											"end": 6016,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 6024,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5532,
											"end": 6024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 6433,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6521,
											"end": 6525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6595,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6538,
											"end": 6618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 6617,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 6617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 6570,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6570,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6538,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4432,
											"end": 4442,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4431,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4450,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4450,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4443,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4404,
											"end": 4450,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3864,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3931,
											"name": "PUSH",
											"source": 5,
											"value": "796F7520617265206E6F7420617070726F7665642020746F206D696E74000000"
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3620,
											"end": 3973,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4396,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4501,
											"end": 4504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4495,
											"end": 4512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4512,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4495,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2697,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2593,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2662,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2682,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2675,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 10405,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10499,
											"end": 10509,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10498,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10471,
											"end": 10510,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10471,
											"end": 10517,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4180,
											"end": 4182,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4221,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4289,
											"name": "PUSH",
											"source": 5,
											"value": "796F7520617265206E6F7420617070726F7665642020746F206275726E000000"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3978,
											"end": 4331,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10463,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10562,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 10568,
											"end": 10571,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10572,
											"end": 10578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10562,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 10562,
											"end": 10579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7244,
											"end": 7248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7299,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7313,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7376,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4579,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4580,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4650,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4596,
											"end": 4614,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4596,
											"end": 4614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4596,
											"end": 4614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4667,
											"end": 4685,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4667,
											"end": 4685,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4695,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4712,
											"end": 4731,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4712,
											"end": 4731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4336,
											"end": 4737,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7333,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7454,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7477,
											"end": 7484,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7520,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7502,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7454,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7454,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7454,
											"end": 7521,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7454,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7564,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7151,
											"end": 7564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4005,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4149,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4108,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4188,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4275,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4307,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4313,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4275,
											"end": 4313,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4313,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4926,
											"end": 4947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4983,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5056,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5119,
											"end": 5138,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5119,
											"end": 5138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4742,
											"end": 5144,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11025,
											"end": 11405,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11025,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11161,
											"end": 11180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5353,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5393,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5429,
											"end": 5463,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5402,
											"end": 5464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5507,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5149,
											"end": 5549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 11153,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11240,
											"end": 11261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5797,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5768,
											"end": 5798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5834,
											"end": 5868,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 5869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5946,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5927,
											"end": 5946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5554,
											"end": 5952,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 11232,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11324,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11340,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11349,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11313,
											"end": 11349,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11397,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11025,
											"end": 11405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11025,
											"end": 11405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11025,
											"end": 11405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11025,
											"end": 11405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8787,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8054,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6200,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6171,
											"end": 6201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6306,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6288,
											"end": 6306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6281,
											"end": 6316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6333,
											"end": 6352,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6333,
											"end": 6352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5957,
											"end": 6358,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 8186,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8275,
											"end": 8298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8298,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6606,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6577,
											"end": 6607,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 6677,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6616,
											"end": 6678,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6737,
											"end": 6756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6363,
											"end": 6762,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8267,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8444,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8471,
											"end": 8494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 6971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6951,
											"end": 6972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7008,
											"end": 7010,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 7011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7081,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7020,
											"end": 7082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7163,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 7144,
											"end": 7163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6767,
											"end": 7169,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8463,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8582,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8615,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8615,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8615,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8615,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 8637,
											"end": 8667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8637,
											"end": 8667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 8700,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8720,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8175,
											"end": 8787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9074,
											"end": 9473,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 9074,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9158,
											"end": 9179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7415,
											"end": 7417,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7427,
											"end": 7488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 7174,
											"end": 7529,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9150,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9306,
											"end": 9312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9302,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9290,
											"end": 9302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9290,
											"end": 9312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9332,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9345,
											"end": 9351,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9345,
											"end": 9351,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9345,
											"end": 9351,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9345,
											"end": 9351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9323,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9351,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9384,
											"end": 9385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9367,
											"end": 9404,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 7738,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7773,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7755,
											"end": 7773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7748,
											"end": 7778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7848,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 7849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7866,
											"end": 7884,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7866,
											"end": 7884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7534,
											"end": 7890,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9806,
											"end": 10397,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 9806,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9890,
											"end": 9911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9890,
											"end": 9911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8097,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8136,
											"end": 8138,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8109,
											"end": 8139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8209,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8226,
											"end": 8244,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8226,
											"end": 8244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8219,
											"end": 8250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8267,
											"end": 8286,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 8267,
											"end": 8286,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 7895,
											"end": 8292,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9882,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10024,
											"end": 10046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10110,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10110,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8499,
											"end": 8501,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 8518,
											"end": 8536,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8518,
											"end": 8536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8518,
											"end": 8536,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8511,
											"end": 8541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8611,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8550,
											"end": 8612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8621,
											"end": 8653,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8689,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 8670,
											"end": 8689,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8297,
											"end": 8695,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10078,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10206,
											"end": 10229,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10206,
											"end": 10229,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10206,
											"end": 10229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10229,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10263,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 10251,
											"end": 10273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10291,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2818,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2872,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3358,
											"end": 3485,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3358,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3429,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3414,
											"end": 3417,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3440,
											"end": 3455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3478,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3471,
											"end": 3472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3479,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3490,
											"end": 3615,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3490,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3586,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3586,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3609,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3573,
											"end": 3609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3589,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3589,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8828,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8700,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8788,
											"end": 8799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8788,
											"end": 8799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8788,
											"end": 8799,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8802,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8802,
											"end": 8820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8802,
											"end": 8820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"spoilsToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setapprovedcontractaddress(address)": "b6b285d9",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"setapprovedcontractaddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"spoilsToken.sol\":\"SpoilsToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"spoilsToken.sol\":{\"keccak256\":\"0x063725f40c6cd36a5f45f729d8b5edee4cbe7e5666230381dc93c060e9b38d82\",\"urls\":[\"bzz-raw://50932168985a4a86bd22d60ff15d502c380824d98e8b096d4746d9096424572e\",\"dweb:/ipfs/QmYP34bLhc3a5WDfctbTncS2W2tvNoDdcVdFgbeMbUccsj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "spoilsToken.sol:SpoilsToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 256,
								"contract": "spoilsToken.sol:SpoilsToken",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 262,
								"contract": "spoilsToken.sol:SpoilsToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 264,
								"contract": "spoilsToken.sol:SpoilsToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "spoilsToken.sol:SpoilsToken",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 268,
								"contract": "spoilsToken.sol:SpoilsToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 272,
								"contract": "spoilsToken.sol:SpoilsToken",
								"label": "onlyapprovedcontractaddress",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> spoilsToken.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "spoilsToken.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							237
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 238,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								237
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 190,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2534:1",
							"usedErrors": [],
							"usedEvents": [
								124,
								133
							]
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 191,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 195,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "305:6:2"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 215,
							"linearizedBaseContracts": [
								215,
								190
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 215,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 215,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 211,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 215,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "277:405:2",
							"usedErrors": [],
							"usedEvents": [
								124,
								133
							]
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							237
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 223,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 222,
												"id": 225,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 237,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 232,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 231,
												"id": 234,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 237,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 238,
							"src": "608:235:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"spoilsToken.sol": {
				"ast": {
					"absolutePath": "spoilsToken.sol",
					"exportedSymbols": {
						"Context": [
							237
						],
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						],
						"Ownable": [
							112
						],
						"SpoilsToken": [
							858
						]
					},
					"id": 859,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 859,
							"sourceUnit": 191,
							"src": "27:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 859,
							"sourceUnit": 216,
							"src": "85:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 859,
							"sourceUnit": 238,
							"src": "162:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 859,
							"sourceUnit": 113,
							"src": "215:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 245,
										"name": "Context",
										"nameLocations": [
											"1495:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "1495:7:4"
									},
									"id": 246,
									"nodeType": "InheritanceSpecifier",
									"src": "1495:7:4"
								},
								{
									"baseName": {
										"id": 247,
										"name": "IERC20",
										"nameLocations": [
											"1504:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "1504:6:4"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "1504:6:4"
								},
								{
									"baseName": {
										"id": 249,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1512:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 215,
										"src": "1512:14:4"
									},
									"id": 250,
									"nodeType": "InheritanceSpecifier",
									"src": "1512:14:4"
								},
								{
									"baseName": {
										"id": 251,
										"name": "Ownable",
										"nameLocations": [
											"1527:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "1527:7:4"
									},
									"id": 252,
									"nodeType": "InheritanceSpecifier",
									"src": "1527:7:4"
								}
							],
							"canonicalName": "SpoilsToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "273:1196:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 858,
							"linearizedBaseContracts": [
								858,
								112,
								215,
								190,
								237
							],
							"name": "SpoilsToken",
							"nameLocation": "1480:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 256,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1578:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "1542:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 255,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 253,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1550:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1542:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 254,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1561:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 262,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1652:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "1596:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 261,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 257,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1604:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1596:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 260,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 258,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1623:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1615:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 259,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1634:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 264,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1688:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "1672:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1672:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1724:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "1709:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 265,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1709:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 268,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1751:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "1736:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 267,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1736:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 272,
									"mutability": "mutable",
									"name": "onlyapprovedcontractaddress",
									"nameLocation": "1790:27:4",
									"nodeType": "VariableDeclaration",
									"scope": 858,
									"src": "1765:52:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 271,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 269,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1774:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1765:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 270,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1784:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "2207:97:4",
										"statements": [
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 282,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2218:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 283,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "2226:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2218:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2218:13:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 286,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2242:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 287,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2252:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2242:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "2242:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2276:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2280:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2276:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "2287:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2270:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2270:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "2270:24:4"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "1826:306:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 297,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2164:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2150:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2150:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2185:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2171:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2171:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2199:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2194:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2194:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:57:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2207:0:4"
									},
									"scope": 858,
									"src": "2138:166:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										202
									],
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "2443:31:4",
										"statements": [
											{
												"expression": {
													"id": 304,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "2461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 303,
												"id": 305,
												"nodeType": "Return",
												"src": "2454:12:4"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2312:56:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2383:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 300,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2410:8:4"
									},
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:2:4"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2428:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2428:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:15:4"
									},
									"scope": 858,
									"src": "2374:100:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										208
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2664:33:4",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "2682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "2675:14:4"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "2482:105:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2602:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2631:8:4"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2608:2:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2649:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2649:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:15:4"
									},
									"scope": 858,
									"src": "2593:104:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										214
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "3401:28:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3419:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "3412:9:4"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "2705:625:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3345:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 320,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3376:8:4"
									},
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3353:2:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3394:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 321,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3394:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3393:7:4"
									},
									"scope": 858,
									"src": "3336:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "3564:38:4",
										"statements": [
											{
												"expression": {
													"id": 334,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "3582:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 333,
												"id": 335,
												"nodeType": "Return",
												"src": "3575:19:4"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3437:51:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3503:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3537:8:4"
									},
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3514:2:4"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3555:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:9:4"
									},
									"scope": 858,
									"src": "3494:108:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "3748:44:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 346,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3766:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"id": 347,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "3776:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3766:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 349,
												"nodeType": "Return",
												"src": "3759:25:4"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "3610:49:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3674:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 342,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3721:8:4"
									},
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3692:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "3684:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:17:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "3739:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:4"
									},
									"scope": 858,
									"src": "3665:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										157
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "4097:83:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 363,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "4118:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4118:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4132:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "4143:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4108:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "4108:42:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4168:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 361,
												"id": 370,
												"nodeType": "Return",
												"src": "4161:11:4"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "3800:199:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4014:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 358,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4073:8:4"
									},
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4031:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "4023:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "4042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:35:4"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "4091:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4091:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4090:6:4"
									},
									"scope": 858,
									"src": "4005:175:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "4255:75:4",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 379,
															"name": "onlyapprovedcontractaddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4275:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 381,
														"indexExpression": {
															"id": 380,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4303:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4275:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4309:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4275:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "4275:38:4"
											}
										]
									},
									"functionSelector": "b6b285d9",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 376,
												"name": "onlyOwner",
												"nameLocations": [
													"4245:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4245:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4245:9:4"
										}
									],
									"name": "setapprovedcontractaddress",
									"nameLocation": "4197:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "4232:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "4224:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4223:13:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4255:0:4"
									},
									"scope": 858,
									"src": "4188:142:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "4385:135:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 394,
																	"name": "onlyapprovedcontractaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "4404:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 397,
																"indexExpression": {
																	"expression": {
																		"id": 395,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4432:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4436:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4432:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4404:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4446:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "4404:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206d696e74",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4452:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
																"typeString": "literal_string \"you are not approved  to mint\""
															},
															"value": "you are not approved  to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
																"typeString": "literal_string \"you are not approved  to mint\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4396:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4396:88:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "4396:88:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "4501:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "4505:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 403,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "4495:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4495:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "4495:17:4"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "4347:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "4360:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4352:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4370:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4365:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4365:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:26:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4385:0:4"
									},
									"scope": 858,
									"src": "4338:182:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										167
									],
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "4681:53:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 420,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "4699:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 422,
														"indexExpression": {
															"id": 421,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4711:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4699:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 424,
													"indexExpression": {
														"id": 423,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "4718:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4699:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 419,
												"id": 425,
												"nodeType": "Return",
												"src": "4692:34:4"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "4528:49:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4592:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 416,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4654:8:4"
									},
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4610:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4602:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4625:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4617:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4617:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4601:32:4"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4672:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4671:9:4"
									},
									"scope": 858,
									"src": "4583:151:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										177
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "4970:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 439,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "4990:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4990:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5004:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "5013:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "4981:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4981:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "4981:39:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5038:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 437,
												"id": 446,
												"nodeType": "Return",
												"src": "5031:11:4"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "4742:133:4",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4890:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 434,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4946:8:4"
									},
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4906:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4898:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4923:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4915:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4897:33:4"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4964:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4964:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:6:4"
									},
									"scope": 858,
									"src": "4881:169:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										189
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "5678:346:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5699:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5707:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5718:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "5689:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5689:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "5689:36:4"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5746:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "5738:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5738:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 469,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "5765:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 471,
														"indexExpression": {
															"id": 470,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5777:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5765:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 474,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 472,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "5785:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5785:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5765:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5738:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "5817:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "5837:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5817:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5845:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "5809:79:4"
											},
											{
												"id": 492,
												"nodeType": "UncheckedBlock",
												"src": "5899:94:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5933:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 485,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "5941:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5941:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 487,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "5955:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 488,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "5974:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5955:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 483,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "5924:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5924:57:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 491,
														"nodeType": "ExpressionStatement",
														"src": "5924:57:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6012:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 460,
												"id": 494,
												"nodeType": "Return",
												"src": "6005:11:4"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "5058:468:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5541:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 457,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5654:8:4"
									},
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5572:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5564:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5597:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5589:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5625:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5617:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5553:85:4"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5672:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5672:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5671:6:4"
									},
									"scope": 858,
									"src": "5532:492:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6527:121:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 507,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "6547:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6547:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "6561:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 510,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6570:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 511,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 227,
																			"src": "6582:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6570:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 515,
																"indexExpression": {
																	"id": 514,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "6596:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 516,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "6607:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6570:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "6538:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6538:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "6538:80:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6636:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 505,
												"id": 521,
												"nodeType": "Return",
												"src": "6629:11:4"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "6032:395:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6442:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6468:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6460:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6485:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6477:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6459:37:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6521:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6521:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6520:6:4"
									},
									"scope": 858,
									"src": "6433:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "7250:314:4",
										"statements": [
											{
												"assignments": [
													534
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7269:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "7261:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7261:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 535,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "7288:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 538,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 536,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "7300:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7300:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7288:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 540,
													"indexExpression": {
														"id": 539,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "7314:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7288:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7261:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 543,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "7341:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 544,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "7361:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7341:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7333:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7333:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "7333:85:4"
											},
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "7429:104:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 550,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "7463:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7463:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 552,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7477:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 553,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "7486:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 554,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "7505:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7486:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 549,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "7454:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7454:67:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 557,
														"nodeType": "ExpressionStatement",
														"src": "7454:67:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7552:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 560,
												"nodeType": "Return",
												"src": "7545:11:4"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6656:489:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7160:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7186:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "7178:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7203:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "7195:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7177:42:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "7244:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7244:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7243:6:4"
									},
									"scope": 858,
									"src": "7151:413:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "8175:612:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 573,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "8194:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8212:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8204:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 574,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8204:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8204:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8194:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8216:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8186:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8186:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "8186:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "8275:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8296:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8288:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 584,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8288:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8288:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8275:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8300:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8267:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8267:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "8267:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 593,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8372:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "8380:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "8391:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 592,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "8351:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8351:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "8351:47:4"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "8419:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "8411:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8411:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"baseExpression": {
														"id": 600,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "8435:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 602,
													"indexExpression": {
														"id": 601,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "8445:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8435:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8411:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 605,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "8471:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 606,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "8488:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8471:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8496:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8463:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8463:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "8463:74:4"
											},
											{
												"id": 619,
												"nodeType": "UncheckedBlock",
												"src": "8548:79:4",
												"statements": [
													{
														"expression": {
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 611,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "8573:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 613,
																"indexExpression": {
																	"id": 612,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "8583:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8573:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8593:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 615,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "8609:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8593:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8573:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 618,
														"nodeType": "ExpressionStatement",
														"src": "8573:42:4"
													}
												]
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 620,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "8637:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"id": 621,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "8647:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8637:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "8661:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8637:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "8637:30:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8694:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "8702:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "8713:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "8685:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8685:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "8680:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8753:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "8761:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "8772:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "8733:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8733:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "8733:46:4"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "7572:476:4",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8063:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8091:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "8083:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8116:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "8108:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "8136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8072:85:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8175:0:4"
									},
									"scope": 858,
									"src": "8054:733:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9139:334:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "9158:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9177:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9169:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 649,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9169:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9169:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9158:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9181:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9150:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "9150:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9257:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9249:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 658,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9249:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9249:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "9261:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "9270:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "9228:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9228:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "9228:49:4"
											},
											{
												"expression": {
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 666,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "9290:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 667,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "9306:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9290:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "9290:22:4"
											},
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 670,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "9323:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 672,
														"indexExpression": {
															"id": 671,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "9333:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9323:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 673,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "9345:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9323:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "9323:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9384:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9376:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 677,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9376:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9376:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "9388:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "9397:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "9367:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9367:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "EmitStatement",
												"src": "9362:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9445:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9437:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9437:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9437:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "9449:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "9458:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 685,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "9417:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9417:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "9417:48:4"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "8795:273:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9083:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9097:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9089:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9089:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9114:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9106:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9088:33:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9139:0:4"
									},
									"scope": 858,
									"src": "9074:399:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9871:526:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 704,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "9890:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9909:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9901:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 705,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9901:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9890:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9913:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9882:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9882:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "9882:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "9983:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10000:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9992:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 715,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9992:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9992:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "10004:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 713,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "9962:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9962:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "9962:49:4"
											},
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10032:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "10024:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10024:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"baseExpression": {
														"id": 724,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "10049:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 726,
													"indexExpression": {
														"id": 725,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "10059:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10049:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10024:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 729,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "10086:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 730,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "10104:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10086:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10112:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10078:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10078:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "10078:71:4"
											},
											{
												"id": 743,
												"nodeType": "UncheckedBlock",
												"src": "10160:81:4",
												"statements": [
													{
														"expression": {
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 735,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "10185:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 737,
																"indexExpression": {
																	"id": 736,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "10195:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10185:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "10206:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 739,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "10223:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10206:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10185:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 742,
														"nodeType": "ExpressionStatement",
														"src": "10185:44:4"
													}
												]
											},
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 744,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "10251:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 745,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "10267:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10251:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "10251:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 749,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "10300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10317:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10309:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10309:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10309:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "10321:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "10291:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10291:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "EmitStatement",
												"src": "10286:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "10361:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10378:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10370:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 759,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10370:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 763,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "10382:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "10341:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10341:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10341:48:4"
											}
										]
									},
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "9481:319:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9815:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9829:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9821:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9821:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9846:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9838:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9820:33:4"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9871:0:4"
									},
									"scope": 858,
									"src": "9806:591:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "10452:135:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 775,
																	"name": "onlyapprovedcontractaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "10471:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 778,
																"indexExpression": {
																	"expression": {
																		"id": 776,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10499:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10503:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10499:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10471:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10513:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "10471:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206275726e",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10519:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0fab782acd57331702f761e8cd4698ac887f55e8c87f2d063c56e130ed04fb1e",
																"typeString": "literal_string \"you are not approved  to burn\""
															},
															"value": "you are not approved  to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0fab782acd57331702f761e8cd4698ac887f55e8c87f2d063c56e130ed04fb1e",
																"typeString": "literal_string \"you are not approved  to burn\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10463:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10463:88:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "10463:88:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "10568:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "10572:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10562:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10562:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "10562:17:4"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "10414:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "10427:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "10419:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10419:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10439:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "10431:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10418:28:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10452:0:4"
									},
									"scope": 858,
									"src": "10405:182:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "11142:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "11161:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11178:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11170:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11170:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11170:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11161:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11182:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11153:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11153:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "11153:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 811,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "11240:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11259:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11251:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 812,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11251:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11251:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11240:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11263:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11232:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11232:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "11232:68:4"
											},
											{
												"expression": {
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 820,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "11313:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 823,
															"indexExpression": {
																"id": 821,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "11325:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11313:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 824,
														"indexExpression": {
															"id": 822,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11313:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 825,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "11343:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11313:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "11313:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 829,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "11374:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11381:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "11390:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 828,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "11365:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11365:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "EmitStatement",
												"src": "11360:37:4"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "10595:424:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11034:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11061:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "11053:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11085:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "11077:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11077:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11111:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "11103:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11042:82:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11142:0:4"
									},
									"scope": 858,
									"src": "11025:380:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "12128:2:4",
										"statements": []
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "11413:586:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12014:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12053:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "12045:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12076:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "12068:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12068:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12097:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "12089:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12034:76:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12128:0:4"
									},
									"scope": 858,
									"src": "12005:125:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "12856:2:4",
										"statements": []
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "12138:590:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12743:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12781:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "12773:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12804:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "12796:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12796:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12825:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "12817:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12817:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12762:76:4"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12856:0:4"
									},
									"scope": 858,
									"src": "12734:124:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 859,
							"src": "1471:11390:4",
							"usedErrors": [],
							"usedEvents": [
								13,
								124,
								133
							]
						}
					],
					"src": "0:12861:4"
				},
				"id": 4
			}
		}
	}
}