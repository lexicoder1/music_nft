{
	"id": "74cba7c0620629d6e05ba80d7370d7a7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"chestNft.sol": {
				"content": "\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n// 0xB0acB30A5B5dc21306514E3A938fbdEED90325c1\r\n// 0xF95a44423e3D4aE9C3C3aB395A34004b427B8F4B\r\ncontract KleptoGnomeLootChest is IERC721A,Ownable {\r\n    \r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n   \r\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant _BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n   \r\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n  \r\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\r\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\r\n\r\n \r\n    // The next token ID to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    string public baseURI_;\r\n    string public uriSuffix = \"\";\r\n    mapping (address=>uint[]) nftsredeemed;\r\n    uint counter;\r\n    mapping (address =>bool) onlyapprovedcontractaddress;\r\n    mapping(address => mapping(uint => bool)) private _checkredemmedphysicalitem;\r\n    \r\n\r\n    \r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n   \r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n  \r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n   \r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 1;\r\n    }\r\n\r\n    \r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n  \r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        \r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    \r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n   \r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n   \r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    \r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    \r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\r\n    }\r\n\r\n    \r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    \r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        \r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n   \r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    \r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    \r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '';\r\n    }\r\n\r\n \r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n   \r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return baseURI_;\r\n    }\r\n\r\n     \r\n     function setBaseURI(string memory _newBaseURI) public onlyOwner {\r\n        baseURI_ = _newBaseURI;\r\n    }\r\n    \r\n     function setUriSuffix(string memory _uriSuffix) external onlyOwner {\r\n        uriSuffix = _uriSuffix;\r\n    }\r\n\r\n    function setapprovedcontractaddress(address add)external onlyOwner{\r\n       \r\n        onlyapprovedcontractaddress[add] =true;\r\n       \r\n    }\r\n     \r\n    function mint(\r\n        address _to,\r\n        uint256 amount\r\n        \r\n    ) public {\r\n         \r\n     require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\");\r\n     _safeMint(_to, amount);\r\n      \r\n    }\r\n\r\n    \r\n    function redeemPhysicalItem(uint  nftId)public {\r\n        require(ownerOf(nftId)==msg.sender);\r\n        _checkredemmedphysicalitem[msg.sender][nftId]=true; \r\n         nftsredeemed[msg.sender].push(nftId);\r\n   \r\n\r\n        _burn(nftId);  \r\n    }\r\n\r\n    function  checkredemmedphysicalitem(uint nftId ,address add)public view returns(bool){\r\n         return _checkredemmedphysicalitem[add][nftId];\r\n    }\r\n\r\n     \r\n\r\n\r\n     function checkredeemednftid(address add)public view returns(uint[] memory ){\r\n      return nftsredeemed[add];\r\n    }\r\n   \r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    \r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    \r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    \r\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\r\n        return _packedOwnerships[index] != 0;\r\n    }\r\n\r\n    \r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    \r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\r\n        if (_startTokenId() <= tokenId) {\r\n            packed = _packedOwnerships[tokenId];\r\n            // If the data at the starting slot does not exist, start the scan.\r\n            if (packed == 0) {\r\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\r\n                \r\n                for (;;) {\r\n                    unchecked {\r\n                        packed = _packedOwnerships[--tokenId];\r\n                    }\r\n                    if (packed == 0) continue;\r\n                    if (packed & _BITMASK_BURNED == 0) return packed;\r\n                    // Otherwise, the token is burned, and we must revert.\r\n                    // This handles the case of batch burned tokens, where only the burned bit\r\n                    // of the starting slot is set, and remaining slots are left uninitialized.\r\n                    _revert(OwnerQueryForNonexistentToken.selector);\r\n                }\r\n            }\r\n           \r\n            if (packed & _BITMASK_BURNED == 0) return packed;\r\n        }\r\n        _revert(OwnerQueryForNonexistentToken.selector);\r\n    }\r\n\r\n    \r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & _BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    \r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n   \r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    \r\n    function approve(address to, uint256 tokenId) public payable virtual override {\r\n        _approve(to, tokenId, true);\r\n    }\r\n\r\n    \r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n   \r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n   \r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n   \r\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\r\n        if (_startTokenId() <= tokenId) {\r\n            if (tokenId < _currentIndex) {\r\n                uint256 packed;\r\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\r\n                result = packed & _BITMASK_BURNED == 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    function _isSenderApprovedOrOwner(\r\n        address approvedAddress,\r\n        address owner,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\r\n            // `msgSender == owner || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n   \r\n    function _getApprovedSlotAndAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n   \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n      \r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n           \r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\r\n        assembly {\r\n            // Emit the `Transfer` event.\r\n            log4(\r\n                0, // Start of data (0, since no data).\r\n                0, // End of data (0, since no data).\r\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                from, // `from`.\r\n                toMasked, // `to`.\r\n                tokenId // `tokenId`.\r\n            )\r\n        }\r\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\r\n\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public payable virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\r\n            }\r\n    }\r\n\r\n    \r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n   \r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n   \r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\r\n            }\r\n            assembly {\r\n                revert(add(32, reason), mload(reason))\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\r\n\r\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\r\n\r\n            uint256 end = startTokenId + quantity;\r\n            uint256 tokenId = startTokenId;\r\n\r\n            do {\r\n                assembly {\r\n                    // Emit the `Transfer` event.\r\n                    log4(\r\n                        0, // Start of data (0, since no data).\r\n                        0, // End of data (0, since no data).\r\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                        0, // `address(0)`.\r\n                        toMasked, // `to`.\r\n                        tokenId // `tokenId`.\r\n                    )\r\n                }\r\n                // The `!=` check ensures that large values of `quantity`\r\n                // that overflows uint256 will make the loop run out of gas.\r\n            } while (++tokenId != end);\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n  \r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\r\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\r\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n           \r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n   \r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) _revert(bytes4(0));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n  \r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _approve(to, tokenId, false);\r\n    }\r\n\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        bool approvalCheck\r\n    ) internal virtual {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (approvalCheck && _msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n   \r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n   \r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n       \r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n   \r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    \r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    \r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    \r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a uint256 to its ASCII string decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\r\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\r\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\r\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\r\n            let m := add(mload(0x40), 0xa0)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, m)\r\n            // Assign the `str` to the end.\r\n            str := sub(m, 0x20)\r\n            // Zeroize the slot after the string.\r\n            mstore(str, 0)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := str\r\n\r\n            // We write the string from rightmost digit to leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // prettier-ignore\r\n            for { let temp := value } 1 {} {\r\n                str := sub(str, 1)\r\n                // Write the character to the pointer.\r\n                // The ASCII index of the '0' character is 48.\r\n                mstore8(str, add(48, mod(temp, 10)))\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n                // prettier-ignore\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, str)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            str := sub(str, 0x20)\r\n            // Store the length.\r\n            mstore(str, length)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev For more efficient reverts.\r\n     */\r\n    function _revert(bytes4 errorSelector) internal pure {\r\n        assembly {\r\n            mstore(0x00, errorSelector)\r\n            revert(0x00, 0x04)\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"IERC721A.sol": {
				"content": "\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\ninterface IERC721A {\r\n   \r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    \r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n   \r\n    error BalanceQueryForZeroAddress();\r\n\r\n   \r\n    error MintToZeroAddress();\r\n\r\n    \r\n    error MintZeroQuantity();\r\n\r\n   \r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    \r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    \r\n    error TransferFromIncorrectOwner();\r\n\r\n    \r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n  \r\n    error TransferToZeroAddress();\r\n\r\n   \r\n    error URIQueryForNonexistentToken();\r\n\r\n   \r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    \r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n \r\n\r\n    struct TokenOwnership {\r\n        \r\n        address addr;\r\n        \r\n        uint64 startTimestamp;\r\n       \r\n        bool burned;\r\n        \r\n        uint24 extraData;\r\n    }\r\n\r\n   \r\n    function totalSupply() external view returns (uint256);\r\n\r\n  \r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n   \r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n   \r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n \r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n   \r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n  \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external payable;\r\n\r\n    \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n   \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n   \r\n    function approve(address to, uint256 tokenId) external payable;\r\n\r\n  \r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n   \r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n   \r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n   \r\n    function name() external view returns (string memory);\r\n\r\n    \r\n    function symbol() external view returns (string memory);\r\n\r\n   \r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n   \r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0x93ac89d27a12c97f51960001724c5adb638424ac67ffc02264ab7f7d16865ad8\",\"urls\":[\"bzz-raw://a914beb3cdcede29abf7714738a6c50e2c0e2108b07b79b954cb6a48d13c7ced\",\"dweb:/ipfs/QmSUer9R6GbPgzWQsNhE5Hq2xZBaX63dh2D1YDbTfkRrwK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"chestNft.sol": {
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"chestNft.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC721A.sol\":{\"keccak256\":\"0x93ac89d27a12c97f51960001724c5adb638424ac67ffc02264ab7f7d16865ad8\",\"urls\":[\"bzz-raw://a914beb3cdcede29abf7714738a6c50e2c0e2108b07b79b954cb6a48d13c7ced\",\"dweb:/ipfs/QmSUer9R6GbPgzWQsNhE5Hq2xZBaX63dh2D1YDbTfkRrwK\"]},\"chestNft.sol\":{\"keccak256\":\"0x16345490efd30b26099de2f5bee59c83adea5d40a0a7ebe976ec419f75240f69\",\"urls\":[\"bzz-raw://615ef38900c8280418c0f186db2183836fdd3cdac789270dd1b20d6bf10eea62\",\"dweb:/ipfs/QmTrD2B9WN4oW5NZUbz1ixYwBRDJjLyir1VfWx8YPVNHhe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"KleptoGnomeLootChest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseURI_",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "checkredeemednftid",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "checkredemmedphysicalitem",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "redeemPhysicalItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_uriSuffix",
									"type": "string"
								}
							],
							"name": "setUriSuffix",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "setapprovedcontractaddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uriSuffix",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"chestNft.sol\":2592:2620  string public uriSuffix = \"\" */\n  0xa0\n    /* \"chestNft.sol\":421:29849  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n  0x40\n    /* \"chestNft.sol\":2592:2620  string public uriSuffix = \"\" */\n  mstore\n  0x00\n    /* \"chestNft.sol\":421:29849  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n  0x80\n    /* \"chestNft.sol\":2592:2620  string public uriSuffix = \"\" */\n  swap1\n  dup2\n  mstore\n  0x06\n  swap1\n  tag_1\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"chestNft.sol\":3230:3388  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"chestNft.sol\":3297:3302  _name */\n  0x03\n    /* \"chestNft.sol\":3297:3310  _name = name_ */\n  tag_14\n    /* \"chestNft.sol\":3305:3310  name_ */\n  dup4\n    /* \"chestNft.sol\":3297:3302  _name */\n  dup3\n    /* \"chestNft.sol\":3297:3310  _name = name_ */\n  tag_2\n  jump\t// in\ntag_14:\n  pop\n    /* \"chestNft.sol\":3321:3328  _symbol */\n  0x04\n    /* \"chestNft.sol\":3321:3338  _symbol = symbol_ */\n  tag_15\n    /* \"chestNft.sol\":3331:3338  symbol_ */\n  dup3\n    /* \"chestNft.sol\":3321:3328  _symbol */\n  dup3\n    /* \"chestNft.sol\":3321:3338  _symbol = symbol_ */\n  tag_2\n  jump\t// in\ntag_15:\n  pop\n  pop\n    /* \"chestNft.sol\":3484:3485  1 */\n  0x01\n    /* \"chestNft.sol\":3349:3380  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"chestNft.sol\":421:29849  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_22:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_23:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_31:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_32:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_25:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_36\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_36:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_37:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_37)\ntag_39:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_35:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_2:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_43\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1582:1679   */\n  tag_44\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_45\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_23\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_25\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_48:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_39)\n    /* \"#utility.yul\":1810:2473   */\ntag_47:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_51:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_54:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:3575   */\ntag_27:\n    /* \"#utility.yul\":2789:2794   */\n  0x00\n    /* \"#utility.yul\":2842:2845   */\n  dup3\n    /* \"#utility.yul\":2835:2839   */\n  0x1f\n    /* \"#utility.yul\":2827:2833   */\n  dup4\n    /* \"#utility.yul\":2823:2840   */\n  add\n    /* \"#utility.yul\":2819:2846   */\n  slt\n    /* \"#utility.yul\":2809:2864   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2860:2861   */\n  0x00\n    /* \"#utility.yul\":2857:2858   */\n  dup1\n    /* \"#utility.yul\":2850:2862   */\n  revert\n    /* \"#utility.yul\":2809:2864   */\ntag_56:\n    /* \"#utility.yul\":2883:2896   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2945:2955   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":2942:2978   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2958:2976   */\n  tag_58\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":3033:3035   */\n  0x40\n    /* \"#utility.yul\":3027:3036   */\n  mload\n    /* \"#utility.yul\":3001:3003   */\n  0x1f\n    /* \"#utility.yul\":3087:3100   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3083:3105   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":3107:3109   */\n  0x3f\n    /* \"#utility.yul\":3079:3110   */\n  add\n    /* \"#utility.yul\":3075:3115   */\n  and\n    /* \"#utility.yul\":3063:3116   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":3131:3149   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":3151:3173   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":3128:3174   */\n  or\n    /* \"#utility.yul\":3125:3197   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3177:3195   */\n  tag_60\n  tag_22\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":3217:3227   */\n  dup2\n    /* \"#utility.yul\":3213:3215   */\n  0x40\n    /* \"#utility.yul\":3206:3228   */\n  mstore\n    /* \"#utility.yul\":3252:3254   */\n  dup4\n    /* \"#utility.yul\":3244:3250   */\n  dup2\n    /* \"#utility.yul\":3237:3255   */\n  mstore\n    /* \"#utility.yul\":3274:3278   */\n  0x20\n    /* \"#utility.yul\":3264:3278   */\n  swap3\n  pop\n    /* \"#utility.yul\":3319:3322   */\n  dup7\n    /* \"#utility.yul\":3314:3316   */\n  dup4\n    /* \"#utility.yul\":3309:3311   */\n  dup6\n    /* \"#utility.yul\":3301:3307   */\n  dup9\n    /* \"#utility.yul\":3297:3312   */\n  add\n    /* \"#utility.yul\":3293:3317   */\n  add\n    /* \"#utility.yul\":3290:3323   */\n  gt\n    /* \"#utility.yul\":3287:3340   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3336:3337   */\n  0x00\n    /* \"#utility.yul\":3333:3334   */\n  dup1\n    /* \"#utility.yul\":3326:3338   */\n  revert\n    /* \"#utility.yul\":3287:3340   */\ntag_61:\n    /* \"#utility.yul\":3358:3359   */\n  0x00\n    /* \"#utility.yul\":3349:3359   */\n  swap2\n  pop\n    /* \"#utility.yul\":3368:3501   */\ntag_62:\n    /* \"#utility.yul\":3382:3384   */\n  dup4\n    /* \"#utility.yul\":3379:3380   */\n  dup3\n    /* \"#utility.yul\":3376:3385   */\n  lt\n    /* \"#utility.yul\":3368:3501   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3470:3484   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":3466:3489   */\n  dup4\n  add\n    /* \"#utility.yul\":3460:3490   */\n  mload\n    /* \"#utility.yul\":3439:3453   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":3435:3458   */\n  dup5\n  add\n    /* \"#utility.yul\":3428:3491   */\n  mstore\n    /* \"#utility.yul\":3393:3403   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":3368:3501   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":3543:3544   */\n  0x00\n    /* \"#utility.yul\":3521:3536   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":3517:3541   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":3510:3545   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":3525:3531   */\n  swap5\n    /* \"#utility.yul\":2735:3575   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3580:4142   */\ntag_5:\n    /* \"#utility.yul\":3679:3685   */\n  0x00\n    /* \"#utility.yul\":3687:3693   */\n  dup1\n    /* \"#utility.yul\":3740:3742   */\n  0x40\n    /* \"#utility.yul\":3728:3737   */\n  dup4\n    /* \"#utility.yul\":3719:3726   */\n  dup6\n    /* \"#utility.yul\":3715:3738   */\n  sub\n    /* \"#utility.yul\":3711:3743   */\n  slt\n    /* \"#utility.yul\":3708:3760   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3756:3757   */\n  0x00\n    /* \"#utility.yul\":3753:3754   */\n  dup1\n    /* \"#utility.yul\":3746:3758   */\n  revert\n    /* \"#utility.yul\":3708:3760   */\ntag_66:\n    /* \"#utility.yul\":3783:3799   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3848:3862   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3845:3879   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":3875:3876   */\n  0x00\n    /* \"#utility.yul\":3872:3873   */\n  dup1\n    /* \"#utility.yul\":3865:3877   */\n  revert\n    /* \"#utility.yul\":3845:3879   */\ntag_67:\n    /* \"#utility.yul\":3898:3959   */\n  tag_68\n    /* \"#utility.yul\":3951:3958   */\n  dup7\n    /* \"#utility.yul\":3942:3948   */\n  dup4\n    /* \"#utility.yul\":3931:3940   */\n  dup8\n    /* \"#utility.yul\":3927:3949   */\n  add\n    /* \"#utility.yul\":3898:3959   */\n  tag_27\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3888:3959   */\n  swap4\n  pop\n    /* \"#utility.yul\":4005:4007   */\n  0x20\n    /* \"#utility.yul\":3994:4003   */\n  dup6\n    /* \"#utility.yul\":3990:4008   */\n  add\n    /* \"#utility.yul\":3984:4009   */\n  mload\n    /* \"#utility.yul\":3968:4009   */\n  swap2\n  pop\n    /* \"#utility.yul\":4034:4036   */\n  dup1\n    /* \"#utility.yul\":4024:4032   */\n  dup3\n    /* \"#utility.yul\":4021:4037   */\n  gt\n    /* \"#utility.yul\":4018:4054   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":4050:4051   */\n  0x00\n    /* \"#utility.yul\":4047:4048   */\n  dup1\n    /* \"#utility.yul\":4040:4052   */\n  revert\n    /* \"#utility.yul\":4018:4054   */\ntag_69:\n  pop\n    /* \"#utility.yul\":4073:4136   */\n  tag_70\n    /* \"#utility.yul\":4128:4135   */\n  dup6\n    /* \"#utility.yul\":4117:4125   */\n  dup3\n    /* \"#utility.yul\":4106:4115   */\n  dup7\n    /* \"#utility.yul\":4102:4126   */\n  add\n    /* \"#utility.yul\":4073:4136   */\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":4063:4136   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":3580:4142   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_28:\n    /* \"chestNft.sol\":421:29849  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"chestNft.sol\":421:29849  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdc76668d\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdc76668d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf259a29e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbf1e5e9e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8370d004\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb6b285d9\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x5503a0e8\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x5503a0e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x16ba10e0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"chestNft.sol\":5547:5909  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"chestNft.sol\":5547:5909  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":5922:6022  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"chestNft.sol\":11471:11698  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"chestNft.sol\":11471:11698  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"chestNft.sol\":11333:11457  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"chestNft.sol\":6987:7095  function setUriSuffix(string memory _uriSuffix) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_52\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"chestNft.sol\":3622:3945  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n        /* \"chestNft.sol\":3896:3908  _burnCounter */\n      sload(0x02)\n        /* \"chestNft.sol\":3484:3485  1 */\n      0x01\n        /* \"chestNft.sol\":3880:3893  _currentIndex */\n      sload\n        /* \"chestNft.sol\":3880:3908  _currentIndex - _burnCounter */\n      sub\n      not(0x00)\n        /* \"chestNft.sol\":3880:3926  _currentIndex - _burnCounter - _startTokenId() */\n      add\n        /* \"chestNft.sol\":3622:3945  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":3549:3574   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3537:3539   */\n      0x20\n        /* \"#utility.yul\":3522:3540   */\n      add\n        /* \"chestNft.sol\":3622:3945  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":3403:3580   */\n      jump\n        /* \"chestNft.sol\":13687:16745  function transferFrom(... */\n    tag_8:\n      tag_52\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"chestNft.sol\":7257:7495  function mint(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_52\n      tag_72\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"chestNft.sol\":16841:17034  function safeTransferFrom(... */\n    tag_10:\n      tag_52\n      tag_75\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"chestNft.sol\":2592:2620  string public uriSuffix = \"\" */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_41\n      tag_79\n      jump\t// in\n        /* \"chestNft.sol\":6869:6974  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_52\n      tag_83\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"chestNft.sol\":8057:8209  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_46\n      tag_87\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"chestNft.sol\":4339:4581  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_62\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_52\n      tag_98\n      jump\t// in\n        /* \"chestNft.sol\":7760:7910  function  checkredemmedphysicalitem(uint nftId ,address add)public view returns(bool){... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_34\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":7864:7895  _checkredemmedphysicalitem[add] */\n      and\n        /* \"chestNft.sol\":7840:7844  bool */\n      0x00\n        /* \"chestNft.sol\":7864:7895  _checkredemmedphysicalitem[add] */\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":7864:7890  _checkredemmedphysicalitem */\n      0x0a\n        /* \"chestNft.sol\":7864:7895  _checkredemmedphysicalitem[add] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"chestNft.sol\":7864:7902  _checkredemmedphysicalitem[add][nftId] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"chestNft.sol\":7760:7910  function  checkredemmedphysicalitem(uint nftId ,address add)public view returns(bool){... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_46)\n        /* \"chestNft.sol\":6036:6140  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_41\n      tag_111\n      jump\t// in\n        /* \"chestNft.sol\":11711:11945  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_52\n      tag_115\n      calldatasize\n      0x04\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n        /* \"chestNft.sol\":7103:7244  function setapprovedcontractaddress(address add)external onlyOwner{... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_52\n      tag_120\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"chestNft.sol\":17048:17464  function safeTransferFrom(... */\n    tag_21:\n      tag_52\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"chestNft.sol\":7930:8046  function checkredeemednftid(address add)public view returns(uint[] memory ){... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n        /* \"chestNft.sol\":6154:6491  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_41\n      tag_134\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"chestNft.sol\":7509:7752  function redeemPhysicalItem(uint  nftId)public {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_52\n      tag_139\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n        /* \"chestNft.sol\":11958:12122  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_34\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":12079:12104  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"chestNft.sol\":12055:12059  bool */\n      0x00\n        /* \"chestNft.sol\":12079:12104  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":12079:12097  _operatorApprovals */\n      0x0e\n        /* \"chestNft.sol\":12079:12104  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"chestNft.sol\":12079:12114  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"chestNft.sol\":11958:12122  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"chestNft.sol\":2563:2585  string public baseURI_ */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_41\n      tag_149\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_52\n      tag_153\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"chestNft.sol\":5547:5909  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_37:\n        /* \"chestNft.sol\":5632:5636  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"chestNft.sol\":5679:5704  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"chestNft.sol\":5679:5781  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_156\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"chestNft.sol\":5756:5781  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"chestNft.sol\":5679:5781  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_156:\n        /* \"chestNft.sol\":5679:5858  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_157\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"chestNft.sol\":5833:5858  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"chestNft.sol\":5679:5858  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_157:\n        /* \"chestNft.sol\":5659:5858  return... */\n      swap3\n        /* \"chestNft.sol\":5547:5909  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":5922:6022  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"chestNft.sol\":5976:5989  string memory */\n      0x60\n        /* \"chestNft.sol\":6009:6014  _name */\n      0x03\n        /* \"chestNft.sol\":6002:6014  return _name */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"chestNft.sol\":5922:6022  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":11471:11698  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"chestNft.sol\":11547:11554  address */\n      0x00\n        /* \"chestNft.sol\":11572:11588  _exists(tokenId) */\n      tag_166\n        /* \"chestNft.sol\":11580:11587  tokenId */\n      dup3\n        /* \"chestNft.sol\":11572:11579  _exists */\n      tag_167\n        /* \"chestNft.sol\":11572:11588  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"chestNft.sol\":11567:11640  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_169\n      jumpi\n        /* \"chestNft.sol\":11590:11640  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_169\n      shl(0xe2, 0x33d1c039)\n        /* \"chestNft.sol\":11590:11597  _revert */\n      tag_170\n        /* \"chestNft.sol\":11590:11640  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_169:\n      pop\n        /* \"chestNft.sol\":11660:11684  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":11660:11675  _tokenApprovals */\n      0x0d\n        /* \"chestNft.sol\":11660:11684  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"chestNft.sol\":11660:11690  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"chestNft.sol\":11471:11698  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"chestNft.sol\":11333:11457  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_55:\n        /* \"chestNft.sol\":11422:11449  _approve(to, tokenId, true) */\n      tag_172\n        /* \"chestNft.sol\":11431:11433  to */\n      dup3\n        /* \"chestNft.sol\":11435:11442  tokenId */\n      dup3\n        /* \"chestNft.sol\":11444:11448  true */\n      0x01\n        /* \"chestNft.sol\":11422:11430  _approve */\n      tag_173\n        /* \"chestNft.sol\":11422:11449  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_172:\n        /* \"chestNft.sol\":11333:11457  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":6987:7095  function setUriSuffix(string memory _uriSuffix) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"chestNft.sol\":7065:7074  uriSuffix */\n      0x06\n        /* \"chestNft.sol\":7065:7087  uriSuffix = _uriSuffix */\n      tag_172\n        /* \"chestNft.sol\":7077:7087  _uriSuffix */\n      dup3\n        /* \"chestNft.sol\":7065:7074  uriSuffix */\n      dup3\n        /* \"chestNft.sol\":7065:7087  uriSuffix = _uriSuffix */\n      tag_179\n      jump\t// in\n        /* \"chestNft.sol\":13687:16745  function transferFrom(... */\n    tag_69:\n        /* \"chestNft.sol\":13829:13856  uint256 prevOwnershipPacked */\n      0x00\n        /* \"chestNft.sol\":13859:13886  _packedOwnershipOf(tokenId) */\n      tag_184\n        /* \"chestNft.sol\":13878:13885  tokenId */\n      dup3\n        /* \"chestNft.sol\":13859:13877  _packedOwnershipOf */\n      tag_185\n        /* \"chestNft.sol\":13859:13886  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":14014:14036  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"chestNft.sol\":13829:13886  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"chestNft.sol\":14074:14119  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"chestNft.sol\":14070:14165  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_187\n      jumpi\n        /* \"chestNft.sol\":14121:14165  _revert(TransferFromIncorrectOwner.selector) */\n      tag_187\n      shl(0xe8, 0xa11481)\n        /* \"chestNft.sol\":14121:14128  _revert */\n      tag_170\n        /* \"chestNft.sol\":14121:14165  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_187:\n        /* \"chestNft.sol\":14179:14206  uint256 approvedAddressSlot */\n      0x00\n        /* \"chestNft.sol\":13402:13426  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"chestNft.sol\":13402:13417  _tokenApprovals */\n      0x0d\n        /* \"chestNft.sol\":13402:13426  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"chestNft.sol\":13630:13656  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"chestNft.sol\":14370:14438  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_190\n        /* \"chestNft.sol\":13630:13656  sload(approvedAddressSlot) */\n      dup2\n        /* \"chestNft.sol\":14412:14416  from */\n      dup8\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n        /* \"chestNft.sol\":14418:14437  _msgSenderERC721A() */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":12976:13008  and(msgSender, _BITMASK_ADDRESS) */\n      swap1\n      dup2\n      and\n        /* \"chestNft.sol\":12820:12848  and(owner, _BITMASK_ADDRESS) */\n      swap2\n      and\n        /* \"chestNft.sol\":13105:13125  eq(msgSender, owner) */\n      dup2\n      eq\n        /* \"chestNft.sol\":13127:13157  eq(msgSender, approvedAddress) */\n      swap2\n      eq\n        /* \"chestNft.sol\":13102:13158  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n      swap1\n        /* \"chestNft.sol\":12517:13176  function _isSenderApprovedOrOwner(... */\n      jump\n        /* \"chestNft.sol\":14370:14438  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_190:\n        /* \"chestNft.sol\":14365:14554  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_198\n      jumpi\n        /* \"chestNft.sol\":14458:14501  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_195\n        /* \"chestNft.sol\":14475:14479  from */\n      dup7\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n        /* \"chestNft.sol\":11958:12122  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_143\n      jump\t// in\n        /* \"chestNft.sol\":14458:14501  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_195:\n        /* \"chestNft.sol\":14453:14554  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_198\n      jumpi\n        /* \"chestNft.sol\":14503:14554  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_198\n      shl(0xe1, 0x2ce44b5f)\n        /* \"chestNft.sol\":14503:14510  _revert */\n      tag_170\n        /* \"chestNft.sol\":14503:14554  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_198:\n        /* \"chestNft.sol\":14703:14718  approvedAddress */\n      dup1\n        /* \"chestNft.sol\":14700:14860  if approvedAddress {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"chestNft.sol\":14843:14844  0 */\n      0x00\n        /* \"chestNft.sol\":14822:14841  approvedAddressSlot */\n      dup3\n        /* \"chestNft.sol\":14815:14845  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"chestNft.sol\":14700:14860  if approvedAddress {... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":14988:15012  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":14988:15006  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":14988:15012  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"chestNft.sol\":14986:15012  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"chestNft.sol\":15057:15079  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"chestNft.sol\":15055:15079  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"chestNft.sol\":10943:10954  timestamp() */\n      timestamp\n        /* \"chestNft.sol\":10918:10941  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"chestNft.sol\":10914:10955  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"chestNft.sol\":10901:10964  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"chestNft.sol\":15137:15163  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"chestNft.sol\":15137:15154  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":15137:15163  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"chestNft.sol\":15137:15312  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"chestNft.sol\":15432:15479  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"chestNft.sol\":15432:15484  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"chestNft.sol\":15428:16055  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_206\n      jumpi\n        /* \"chestNft.sol\":15537:15538  1 */\n      0x01\n        /* \"chestNft.sol\":15527:15538  tokenId + 1 */\n      dup5\n      add\n        /* \"chestNft.sol\":15505:15524  uint256 nextTokenId */\n      0x00\n        /* \"chestNft.sol\":15660:15690  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":15660:15677  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":15660:15690  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"chestNft.sol\":15660:15695  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"chestNft.sol\":15656:16040  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_208\n      jumpi\n        /* \"chestNft.sol\":15798:15811  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":15783:15794  nextTokenId */\n      dup2\n        /* \"chestNft.sol\":15783:15811  nextTokenId != _currentIndex */\n      eq\n        /* \"chestNft.sol\":15779:16021  if (nextTokenId != _currentIndex) {... */\n      tag_208\n      jumpi\n        /* \"chestNft.sol\":15945:15975  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":15945:15962  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":15945:15975  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"chestNft.sol\":15945:15997  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"chestNft.sol\":15779:16021  if (nextTokenId != _currentIndex) {... */\n    tag_208:\n        /* \"chestNft.sol\":15486:16055  {... */\n      pop\n        /* \"chestNft.sol\":15428:16055  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":16187:16207  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"chestNft.sol\":16567:16574  tokenId */\n      dup5\n        /* \"chestNft.sol\":16187:16207  uint256(uint160(to)) */\n      dup2\n        /* \"chestNft.sol\":16497:16501  from */\n      dup9\n        /* \"chestNft.sol\":16439:16464  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"chestNft.sol\":16168:16184  uint256 toMasked */\n      0x00\n      dup1\n        /* \"chestNft.sol\":16304:16603  log4(... */\n      log4\n        /* \"chestNft.sol\":16628:16636  toMasked */\n      dup1\n        /* \"chestNft.sol\":16640:16641  0 */\n      0x00\n        /* \"chestNft.sol\":16628:16641  toMasked == 0 */\n      sub\n        /* \"chestNft.sol\":16624:16682  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_210\n      jumpi\n        /* \"chestNft.sol\":16643:16682  _revert(TransferToZeroAddress.selector) */\n      tag_210\n      shl(0xe2, 0x3a954ecd)\n        /* \"chestNft.sol\":16643:16650  _revert */\n      tag_170\n        /* \"chestNft.sol\":16643:16682  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_210:\n        /* \"chestNft.sol\":13818:16745  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"chestNft.sol\":13687:16745  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7257:7495  function mint(... */\n    tag_73:\n        /* \"chestNft.sol\":7397:7407  msg.sender */\n      caller\n        /* \"chestNft.sol\":7369:7408  onlyapprovedcontractaddress[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":7369:7396  onlyapprovedcontractaddress */\n      0x09\n        /* \"chestNft.sol\":7369:7408  onlyapprovedcontractaddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"chestNft.sol\":7369:7415  onlyapprovedcontractaddress[msg.sender] ==true */\n      iszero\n      iszero\n        /* \"chestNft.sol\":7369:7408  onlyapprovedcontractaddress[msg.sender] */\n      0x01\n        /* \"chestNft.sol\":7369:7415  onlyapprovedcontractaddress[msg.sender] ==true */\n      eq\n        /* \"chestNft.sol\":7361:7449  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9085:9087   */\n      0x20\n        /* \"chestNft.sol\":7361:7449  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9067:9088   */\n      mstore\n        /* \"#utility.yul\":9124:9126   */\n      0x1d\n        /* \"#utility.yul\":9104:9122   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9097:9127   */\n      mstore\n        /* \"#utility.yul\":9163:9194   */\n      0x796f7520617265206e6f7420617070726f7665642020746f206d696e74000000\n        /* \"#utility.yul\":9143:9161   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9136:9195   */\n      mstore\n        /* \"#utility.yul\":9212:9230   */\n      0x64\n      add\n        /* \"chestNft.sol\":7361:7449  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"chestNft.sol\":7457:7479  _safeMint(_to, amount) */\n      tag_172\n        /* \"chestNft.sol\":7467:7470  _to */\n      dup3\n        /* \"chestNft.sol\":7472:7478  amount */\n      dup3\n        /* \"chestNft.sol\":7457:7466  _safeMint */\n      tag_218\n        /* \"chestNft.sol\":7457:7479  _safeMint(_to, amount) */\n      jump\t// in\n        /* \"chestNft.sol\":16841:17034  function safeTransferFrom(... */\n    tag_76:\n        /* \"chestNft.sol\":16987:17026  safeTransferFrom(from, to, tokenId, '') */\n      tag_220\n        /* \"chestNft.sol\":17004:17008  from */\n      dup4\n        /* \"chestNft.sol\":17010:17012  to */\n      dup4\n        /* \"chestNft.sol\":17014:17021  tokenId */\n      dup4\n        /* \"chestNft.sol\":16987:17026  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"chestNft.sol\":16987:17003  safeTransferFrom */\n      tag_125\n        /* \"chestNft.sol\":16987:17026  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_220:\n        /* \"chestNft.sol\":16841:17034  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":2592:2620  string public uriSuffix = \"\" */\n    tag_79:\n      0x06\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_160\n      jump\t// in\n    tag_221:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_160\n      jump\t// in\n    tag_222:\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_224\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_223)\n    tag_224:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"chestNft.sol\":6869:6974  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"chestNft.sol\":6944:6952  baseURI_ */\n      0x05\n        /* \"chestNft.sol\":6944:6966  baseURI_ = _newBaseURI */\n      tag_172\n        /* \"chestNft.sol\":6955:6966  _newBaseURI */\n      dup3\n        /* \"chestNft.sol\":6944:6952  baseURI_ */\n      dup3\n        /* \"chestNft.sol\":6944:6966  baseURI_ = _newBaseURI */\n      tag_179\n      jump\t// in\n        /* \"chestNft.sol\":8057:8209  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_88:\n        /* \"chestNft.sol\":8129:8136  address */\n      0x00\n        /* \"chestNft.sol\":8172:8199  _packedOwnershipOf(tokenId) */\n      tag_157\n        /* \"chestNft.sol\":8191:8198  tokenId */\n      dup3\n        /* \"chestNft.sol\":8172:8190  _packedOwnershipOf */\n      tag_185\n        /* \"chestNft.sol\":8172:8199  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"chestNft.sol\":4339:4581  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_94:\n        /* \"chestNft.sol\":4411:4418  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":4435:4454  owner == address(0) */\n      dup3\n      and\n        /* \"chestNft.sol\":4431:4500  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_234\n      jumpi\n        /* \"chestNft.sol\":4456:4500  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_234\n      shl(0xe2, 0x23d3ad81)\n        /* \"chestNft.sol\":4456:4463  _revert */\n      tag_170\n        /* \"chestNft.sol\":4456:4500  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_234:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":4518:4543  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":4518:4536  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":4518:4543  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"chestNft.sol\":608:621  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"chestNft.sol\":4518:4573  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"chestNft.sol\":4339:4581  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"chestNft.sol\":6036:6140  function symbol() public view virtual override returns (string memory) {... */\n    tag_111:\n        /* \"chestNft.sol\":6092:6105  string memory */\n      0x60\n        /* \"chestNft.sol\":6125:6132  _symbol */\n      0x04\n        /* \"chestNft.sol\":6118:6132  return _symbol */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n        /* \"chestNft.sol\":11711:11945  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_117:\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n        /* \"chestNft.sol\":11806:11845  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":11806:11824  _operatorApprovals */\n      0x0e\n        /* \"chestNft.sol\":11806:11845  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":11806:11855  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"chestNft.sol\":11806:11866  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"chestNft.sol\":11882:11937  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":11806:11855  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      swap2\n        /* \"chestNft.sol\":11882:11937  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"chestNft.sol\":11882:11937  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"chestNft.sol\":11711:11945  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7103:7244  function setapprovedcontractaddress(address add)external onlyOwner{... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":7189:7221  onlyapprovedcontractaddress[add] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":7189:7216  onlyapprovedcontractaddress */\n      0x09\n        /* \"chestNft.sol\":7189:7221  onlyapprovedcontractaddress[add] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"chestNft.sol\":7189:7227  onlyapprovedcontractaddress[add] =true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"chestNft.sol\":7223:7227  true */\n      0x01\n        /* \"chestNft.sol\":7189:7227  onlyapprovedcontractaddress[add] =true */\n      or\n      swap1\n      sstore\n        /* \"chestNft.sol\":7103:7244  function setapprovedcontractaddress(address add)external onlyOwner{... */\n      jump\t// out\n        /* \"chestNft.sol\":17048:17464  function safeTransferFrom(... */\n    tag_125:\n        /* \"chestNft.sol\":17223:17254  transferFrom(from, to, tokenId) */\n      tag_256\n        /* \"chestNft.sol\":17236:17240  from */\n      dup5\n        /* \"chestNft.sol\":17242:17244  to */\n      dup5\n        /* \"chestNft.sol\":17246:17253  tokenId */\n      dup5\n        /* \"chestNft.sol\":17223:17235  transferFrom */\n      tag_69\n        /* \"chestNft.sol\":17223:17254  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":17269:17283  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"chestNft.sol\":17269:17288  to.code.length != 0 */\n      iszero\n        /* \"chestNft.sol\":17265:17457  if (to.code.length != 0)... */\n      tag_261\n      jumpi\n        /* \"chestNft.sol\":17308:17364  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_258\n        /* \"chestNft.sol\":17339:17343  from */\n      dup5\n        /* \"chestNft.sol\":17345:17347  to */\n      dup5\n        /* \"chestNft.sol\":17349:17356  tokenId */\n      dup5\n        /* \"chestNft.sol\":17358:17363  _data */\n      dup5\n        /* \"chestNft.sol\":17308:17338  _checkContractOnERC721Received */\n      tag_259\n        /* \"chestNft.sol\":17308:17364  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_258:\n        /* \"chestNft.sol\":17303:17457  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_261\n      jumpi\n        /* \"chestNft.sol\":17385:17441  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_261\n      shl(0xe1, 0x68d2bf6b)\n        /* \"chestNft.sol\":17385:17392  _revert */\n      tag_170\n        /* \"chestNft.sol\":17385:17441  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_261:\n        /* \"chestNft.sol\":17048:17464  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7930:8046  function checkredeemednftid(address add)public view returns(uint[] memory ){... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":8021:8038  nftsredeemed[add] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":8021:8033  nftsredeemed */\n      0x07\n        /* \"chestNft.sol\":8021:8038  nftsredeemed[add] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"chestNft.sol\":8014:8038  return nftsredeemed[add] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"chestNft.sol\":7990:8003  uint[] memory */\n      0x60\n      swap4\n        /* \"chestNft.sol\":8014:8038  return nftsredeemed[add] */\n      swap3\n      dup4\n      add\n        /* \"chestNft.sol\":8021:8038  nftsredeemed[add] */\n      dup3\n        /* \"chestNft.sol\":8014:8038  return nftsredeemed[add] */\n      dup3\n      dup1\n      iszero\n      tag_263\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_264:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_264\n      jumpi\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"chestNft.sol\":7930:8046  function checkredeemednftid(address add)public view returns(uint[] memory ){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":6154:6491  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_135:\n        /* \"chestNft.sol\":6227:6240  string memory */\n      0x60\n        /* \"chestNft.sol\":6258:6274  _exists(tokenId) */\n      tag_266\n        /* \"chestNft.sol\":6266:6273  tokenId */\n      dup3\n        /* \"chestNft.sol\":6258:6265  _exists */\n      tag_167\n        /* \"chestNft.sol\":6258:6274  _exists(tokenId) */\n      jump\t// in\n    tag_266:\n        /* \"chestNft.sol\":6253:6321  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_268\n      jumpi\n        /* \"chestNft.sol\":6276:6321  _revert(URIQueryForNonexistentToken.selector) */\n      tag_268\n      shl(0xe4, 0x0a14c4b5)\n        /* \"chestNft.sol\":6276:6283  _revert */\n      tag_170\n        /* \"chestNft.sol\":6276:6321  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_268:\n        /* \"chestNft.sol\":6334:6355  string memory baseURI */\n      0x00\n        /* \"chestNft.sol\":6358:6368  _baseURI() */\n      tag_269\n        /* \"chestNft.sol\":6358:6366  _baseURI */\n      tag_270\n        /* \"chestNft.sol\":6358:6368  _baseURI() */\n      jump\t// in\n    tag_269:\n        /* \"chestNft.sol\":6334:6368  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"chestNft.sol\":6392:6399  baseURI */\n      dup1\n        /* \"chestNft.sol\":6386:6407  bytes(baseURI).length */\n      mload\n        /* \"chestNft.sol\":6411:6412  0 */\n      0x00\n        /* \"chestNft.sol\":6386:6412  bytes(baseURI).length != 0 */\n      sub\n        /* \"chestNft.sol\":6386:6483  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '' */\n      tag_271\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_272)\n    tag_271:\n        /* \"chestNft.sol\":6439:6446  baseURI */\n      dup1\n        /* \"chestNft.sol\":6448:6466  _toString(tokenId) */\n      tag_273\n        /* \"chestNft.sol\":6458:6465  tokenId */\n      dup5\n        /* \"chestNft.sol\":6448:6457  _toString */\n      tag_274\n        /* \"chestNft.sol\":6448:6466  _toString(tokenId) */\n      jump\t// in\n    tag_273:\n        /* \"chestNft.sol\":6467:6476  uriSuffix */\n      0x06\n        /* \"chestNft.sol\":6422:6477  abi.encodePacked(baseURI, _toString(tokenId),uriSuffix) */\n      add(0x20, mload(0x40))\n      tag_275\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"chestNft.sol\":6386:6483  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '' */\n    tag_272:\n        /* \"chestNft.sol\":6379:6483  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '' */\n      swap4\n        /* \"chestNft.sol\":6154:6491  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7509:7752  function redeemPhysicalItem(uint  nftId)public {... */\n    tag_140:\n        /* \"chestNft.sol\":7591:7601  msg.sender */\n      caller\n        /* \"chestNft.sol\":7575:7589  ownerOf(nftId) */\n      tag_278\n        /* \"chestNft.sol\":7583:7588  nftId */\n      dup3\n        /* \"chestNft.sol\":7575:7582  ownerOf */\n      tag_88\n        /* \"chestNft.sol\":7575:7589  ownerOf(nftId) */\n      jump\t// in\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":7575:7601  ownerOf(nftId)==msg.sender */\n      and\n      eq\n        /* \"chestNft.sol\":7567:7602  require(ownerOf(nftId)==msg.sender) */\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n        /* \"chestNft.sol\":7640:7650  msg.sender */\n      caller\n        /* \"chestNft.sol\":7613:7651  _checkredemmedphysicalitem[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":7613:7639  _checkredemmedphysicalitem */\n      0x0a\n        /* \"chestNft.sol\":7613:7651  _checkredemmedphysicalitem[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"chestNft.sol\":7613:7658  _checkredemmedphysicalitem[msg.sender][nftId] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"chestNft.sol\":7613:7663  _checkredemmedphysicalitem[msg.sender][nftId]=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"chestNft.sol\":7659:7663  true */\n      0x01\n        /* \"chestNft.sol\":7613:7663  _checkredemmedphysicalitem[msg.sender][nftId]=true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"chestNft.sol\":7676:7700  nftsredeemed[msg.sender] */\n      swap4\n      dup4\n      mstore\n        /* \"chestNft.sol\":7676:7688  nftsredeemed */\n      0x07\n        /* \"chestNft.sol\":7676:7700  nftsredeemed[msg.sender] */\n      dup3\n      mstore\n      dup3\n      keccak256\n        /* \"chestNft.sol\":7676:7712  nftsredeemed[msg.sender].push(nftId) */\n      dup1\n      sload\n      swap4\n      dup5\n      add\n      dup2\n      sstore\n      dup3\n      mstore\n      swap1\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"chestNft.sol\":7730:7742  _burn(nftId) */\n      tag_281\n        /* \"chestNft.sol\":7652:7657  nftId */\n      dup2\n        /* \"chestNft.sol\":7730:7735  _burn */\n      tag_282\n        /* \"chestNft.sol\":7730:7742  _burn(nftId) */\n      jump\t// in\n    tag_281:\n        /* \"chestNft.sol\":7509:7752  function redeemPhysicalItem(uint  nftId)public {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":2563:2585  string public baseURI_ */\n    tag_149:\n      0x05\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_160\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10704:10706   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10686:10707   */\n      mstore\n        /* \"#utility.yul\":10743:10745   */\n      0x26\n        /* \"#utility.yul\":10723:10741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10716:10746   */\n      mstore\n        /* \"#utility.yul\":10782:10816   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10762:10780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10755:10817   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10833:10851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10826:10862   */\n      mstore\n        /* \"#utility.yul\":10879:10898   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_215\n        /* \"#utility.yul\":10502:10904   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"chestNft.sol\":12135:12503  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_167:\n        /* \"chestNft.sol\":12200:12211  bool result */\n      0x00\n        /* \"chestNft.sol\":12247:12254  tokenId */\n      dup2\n        /* \"chestNft.sol\":3484:3485  1 */\n      0x01\n        /* \"chestNft.sol\":12228:12254  _startTokenId() <= tokenId */\n      gt\n        /* \"chestNft.sol\":12224:12496  if (_startTokenId() <= tokenId) {... */\n      tag_299\n      jumpi\n        /* \"chestNft.sol\":12285:12298  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":12275:12282  tokenId */\n      dup3\n        /* \"chestNft.sol\":12275:12298  tokenId < _currentIndex */\n      lt\n        /* \"chestNft.sol\":12271:12485  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"chestNft.sol\":12319:12333  uint256 packed */\n      0x00\n        /* \"chestNft.sol\":12352:12412  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_300:\n      pop\n        /* \"chestNft.sol\":12369:12395  _packedOwnerships[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"chestNft.sol\":12369:12386  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":12369:12395  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"chestNft.sol\":12359:12401  (packed = _packedOwnerships[tokenId]) == 0 */\n      dup2\n      swap1\n      sub\n        /* \"chestNft.sol\":12352:12412  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_301\n      jumpi\n        /* \"chestNft.sol\":12403:12412  --tokenId */\n      tag_302\n      dup4\n      tag_303\n      jump\t// in\n    tag_302:\n      swap3\n      pop\n        /* \"chestNft.sol\":12352:12412  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_300)\n    tag_301:\n      shl(0xe0, 0x01)\n        /* \"chestNft.sol\":12440:12464  packed & _BITMASK_BURNED */\n      and\n        /* \"chestNft.sol\":12440:12469  packed & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n      pop\n        /* \"chestNft.sol\":12271:12485  if (tokenId < _currentIndex) {... */\n    tag_299:\n        /* \"chestNft.sol\":12135:12503  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":29681:29846  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_170:\n        /* \"chestNft.sol\":29782:29795  errorSelector */\n      dup1\n        /* \"chestNft.sol\":29776:29780  0x00 */\n      0x00\n        /* \"chestNft.sol\":29769:29796  mstore(0x00, errorSelector) */\n      mstore\n        /* \"chestNft.sol\":29823:29827  0x04 */\n      0x04\n        /* \"chestNft.sol\":29817:29821  0x00 */\n      0x00\n        /* \"chestNft.sol\":29810:29828  revert(0x00, 0x04) */\n      revert\n        /* \"chestNft.sol\":23180:23654  function _approve(... */\n    tag_173:\n        /* \"chestNft.sol\":23309:23322  address owner */\n      0x00\n        /* \"chestNft.sol\":23325:23341  ownerOf(tokenId) */\n      tag_306\n        /* \"chestNft.sol\":23333:23340  tokenId */\n      dup4\n        /* \"chestNft.sol\":23325:23332  ownerOf */\n      tag_88\n        /* \"chestNft.sol\":23325:23341  ownerOf(tokenId) */\n      jump\t// in\n    tag_306:\n        /* \"chestNft.sol\":23309:23341  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"chestNft.sol\":23358:23371  approvalCheck */\n      dup2\n        /* \"chestNft.sol\":23358:23403  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":23375:23403  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n      iszero\n        /* \"chestNft.sol\":23358:23403  approvalCheck && _msgSenderERC721A() != owner */\n    tag_307:\n        /* \"chestNft.sol\":23354:23555  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_313\n      jumpi\n        /* \"chestNft.sol\":23423:23467  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_310\n        /* \"chestNft.sol\":23440:23445  owner */\n      dup2\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n        /* \"chestNft.sol\":11958:12122  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_143\n      jump\t// in\n        /* \"chestNft.sol\":23423:23467  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_310:\n        /* \"chestNft.sol\":23418:23555  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_313\n      jumpi\n        /* \"chestNft.sol\":23488:23539  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_313\n      shl(0xe1, 0x67d9dca1)\n        /* \"chestNft.sol\":23488:23495  _revert */\n      tag_170\n        /* \"chestNft.sol\":23488:23539  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_313:\n        /* \"chestNft.sol\":23567:23591  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"chestNft.sol\":23567:23582  _tokenApprovals */\n      0x0d\n        /* \"chestNft.sol\":23567:23591  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"chestNft.sol\":23567:23602  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"chestNft.sol\":23618:23646  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"chestNft.sol\":23567:23591  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"chestNft.sol\":23618:23646  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"chestNft.sol\":23298:23654  {... */\n      pop\n        /* \"chestNft.sol\":23180:23654  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11349:11351   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11331:11352   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11368:11386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11361:11391   */\n      mstore\n        /* \"#utility.yul\":11427:11461   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11407:11425   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11400:11462   */\n      mstore\n        /* \"#utility.yul\":11479:11497   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_215\n        /* \"#utility.yul\":11147:11503   */\n      jump\n        /* \"chestNft.sol\":8942:10138  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_185:\n        /* \"chestNft.sol\":9009:9023  uint256 packed */\n      0x00\n        /* \"chestNft.sol\":9059:9066  tokenId */\n      dup2\n        /* \"chestNft.sol\":3484:3485  1 */\n      0x01\n        /* \"chestNft.sol\":9040:9066  _startTokenId() <= tokenId */\n      gt\n        /* \"chestNft.sol\":9036:10073  if (_startTokenId() <= tokenId) {... */\n      tag_334\n      jumpi\n      pop\n        /* \"chestNft.sol\":9092:9118  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":9092:9109  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":9092:9118  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"chestNft.sol\":9218:9229  packed == 0 */\n      dup2\n      swap1\n      sub\n        /* \"chestNft.sol\":9214:9986  if (packed == 0) {... */\n      tag_325\n      jumpi\n        /* \"chestNft.sol\":9265:9278  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":9254:9261  tokenId */\n      dup3\n        /* \"chestNft.sol\":9254:9278  tokenId >= _currentIndex */\n      lt\n        /* \"chestNft.sol\":9250:9327  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_327\n      jumpi\n        /* \"chestNft.sol\":9280:9327  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_327\n      shl(0xe1, 0x6f96cda1)\n        /* \"chestNft.sol\":9280:9287  _revert */\n      tag_170\n        /* \"chestNft.sol\":9280:9327  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_327:\n        /* \"chestNft.sol\":9364:9971  for (;;) {... */\n    tag_328:\n      pop\n      not(0x00)\n        /* \"chestNft.sol\":9460:9469  --tokenId */\n      add\n        /* \"chestNft.sol\":9442:9470  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":9442:9459  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":9442:9470  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"chestNft.sol\":9516:9541  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"chestNft.sol\":9364:9971  for (;;) {... */\n      tag_328\n        /* \"chestNft.sol\":9516:9541  if (packed == 0) continue */\n      jumpi\n      shl(0xe0, 0x01)\n        /* \"chestNft.sol\":9568:9574  packed */\n      dup2\n        /* \"chestNft.sol\":9568:9592  packed & _BITMASK_BURNED */\n      and\n        /* \"chestNft.sol\":9596:9597  0 */\n      0x00\n        /* \"chestNft.sol\":9568:9597  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"chestNft.sol\":9564:9612  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_332\n      jumpi\n        /* \"chestNft.sol\":8942:10138  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":9564:9612  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_332:\n        /* \"chestNft.sol\":9904:9951  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_333\n      shl(0xe1, 0x6f96cda1)\n        /* \"chestNft.sol\":9904:9911  _revert */\n      tag_170\n        /* \"chestNft.sol\":9904:9951  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_333:\n        /* \"chestNft.sol\":9364:9971  for (;;) {... */\n      jump(tag_328)\n        /* \"chestNft.sol\":9214:9986  if (packed == 0) {... */\n    tag_325:\n      shl(0xe0, 0x01)\n        /* \"chestNft.sol\":10017:10023  packed */\n      dup2\n        /* \"chestNft.sol\":10017:10041  packed & _BITMASK_BURNED */\n      and\n        /* \"chestNft.sol\":10045:10046  0 */\n      0x00\n        /* \"chestNft.sol\":10017:10046  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"chestNft.sol\":10013:10061  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_334\n      jumpi\n        /* \"chestNft.sol\":8942:10138  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":10013:10061  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_334:\n        /* \"chestNft.sol\":10083:10130  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_299\n      shl(0xe1, 0x6f96cda1)\n        /* \"chestNft.sol\":10083:10090  _revert */\n      tag_170\n        /* \"chestNft.sol\":10083:10130  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"chestNft.sol\":22937:23049  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_218:\n        /* \"chestNft.sol\":23014:23041  _safeMint(to, quantity, '') */\n      tag_172\n        /* \"chestNft.sol\":23024:23026  to */\n      dup3\n        /* \"chestNft.sol\":23028:23036  quantity */\n      dup3\n        /* \"chestNft.sol\":23014:23041  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"chestNft.sol\":23014:23023  _safeMint */\n      tag_347\n        /* \"chestNft.sol\":23014:23041  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":17821:18512  function _checkContractOnERC721Received(... */\n    tag_259:\n        /* \"chestNft.sol\":18005:18093  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"chestNft.sol\":17984:17988  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":18005:18050  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"chestNft.sol\":18005:18093  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_351\n      swap1\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n      swap1\n        /* \"chestNft.sol\":18072:18076  from */\n      dup10\n      swap1\n        /* \"chestNft.sol\":18078:18085  tokenId */\n      dup9\n      swap1\n        /* \"chestNft.sol\":18087:18092  _data */\n      dup9\n      swap1\n        /* \"chestNft.sol\":18005:18093  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_352\n      jump\t// in\n    tag_351:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_353\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_354\n      swap2\n      dup2\n      add\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      0x01\n    tag_353:\n        /* \"chestNft.sol\":18001:18505  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_356\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_361\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_360)\n    tag_361:\n      0x60\n      swap2\n      pop\n    tag_360:\n      pop\n        /* \"chestNft.sol\":18288:18294  reason */\n      dup1\n        /* \"chestNft.sol\":18288:18301  reason.length */\n      mload\n        /* \"chestNft.sol\":18305:18306  0 */\n      0x00\n        /* \"chestNft.sol\":18288:18306  reason.length == 0 */\n      sub\n        /* \"chestNft.sol\":18284:18399  if (reason.length == 0) {... */\n      tag_363\n      jumpi\n        /* \"chestNft.sol\":18327:18383  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_363\n      shl(0xe1, 0x68d2bf6b)\n        /* \"chestNft.sol\":18327:18334  _revert */\n      tag_170\n        /* \"chestNft.sol\":18327:18383  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_363:\n        /* \"chestNft.sol\":18471:18477  reason */\n      dup1\n        /* \"chestNft.sol\":18465:18478  mload(reason) */\n      mload\n        /* \"chestNft.sol\":18456:18462  reason */\n      dup2\n        /* \"chestNft.sol\":18452:18454  32 */\n      0x20\n        /* \"chestNft.sol\":18448:18463  add(32, reason) */\n      add\n        /* \"chestNft.sol\":18441:18479  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"chestNft.sol\":18001:18505  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_356:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"chestNft.sol\":18164:18228  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"chestNft.sol\":18001:18505  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_364:\n        /* \"chestNft.sol\":17821:18512  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":6753:6853  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_270:\n        /* \"chestNft.sol\":6804:6817  string memory */\n      0x60\n        /* \"chestNft.sol\":6837:6845  baseURI_ */\n      0x05\n        /* \"chestNft.sol\":6830:6845  return baseURI_ */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n        /* \"chestNft.sol\":27869:29614  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_274:\n        /* \"chestNft.sol\":27934:27951  string memory str */\n      0x60\n        /* \"chestNft.sol\":28368:28372  0xa0 */\n      0xa0\n        /* \"chestNft.sol\":28361:28365  0x40 */\n      0x40\n        /* \"chestNft.sol\":28355:28366  mload(0x40) */\n      mload\n        /* \"chestNft.sol\":28351:28373  add(mload(0x40), 0xa0) */\n      add\n        /* \"chestNft.sol\":28460:28461  m */\n      dup1\n        /* \"chestNft.sol\":28454:28458  0x40 */\n      0x40\n        /* \"chestNft.sol\":28447:28462  mstore(0x40, m) */\n      mstore\n        /* \"chestNft.sol\":28535:28539  0x20 */\n      0x20\n        /* \"chestNft.sol\":28532:28533  m */\n      dup2\n        /* \"chestNft.sol\":28528:28540  sub(m, 0x20) */\n      sub\n        /* \"chestNft.sol\":28521:28540  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"chestNft.sol\":28617:28618  0 */\n      0x00\n        /* \"chestNft.sol\":28612:28615  str */\n      dup2\n        /* \"chestNft.sol\":28605:28619  mstore(str, 0) */\n      mstore\n        /* \"chestNft.sol\":28721:28724  str */\n      dup1\n        /* \"chestNft.sol\":28960:28965  value */\n      dup3\n        /* \"chestNft.sol\":28942:29370  for { let temp := value } 1 {} {... */\n    tag_372:\n        /* \"chestNft.sol\":29008:29009  1 */\n      0x01\n        /* \"chestNft.sol\":29003:29006  str */\n      dup4\n        /* \"chestNft.sol\":28999:29010  sub(str, 1) */\n      sub\n        /* \"chestNft.sol\":28992:29010  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"chestNft.sol\":29179:29181  10 */\n      0x0a\n        /* \"chestNft.sol\":29173:29177  temp */\n      dup2\n        /* \"chestNft.sol\":29169:29182  mod(temp, 10) */\n      mod\n        /* \"chestNft.sol\":29165:29167  48 */\n      0x30\n        /* \"chestNft.sol\":29161:29183  add(48, mod(temp, 10)) */\n      add\n        /* \"chestNft.sol\":29156:29159  str */\n      dup4\n        /* \"chestNft.sol\":29148:29184  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"chestNft.sol\":29273:29275  10 */\n      0x0a\n        /* \"chestNft.sol\":29263:29276  div(temp, 10) */\n      swap1\n      div\n        /* \"chestNft.sol\":29330:29355  if iszero(temp) { break } */\n      dup1\n        /* \"chestNft.sol\":28942:29370  for { let temp := value } 1 {} {... */\n      tag_372\n        /* \"chestNft.sol\":29330:29355  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"chestNft.sol\":29400:29413  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"chestNft.sol\":29515:29529  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"chestNft.sol\":29577:29596  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":29515:29529  sub(str, 0x20) */\n      swap2\n        /* \"chestNft.sol\":27869:29614  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":23667:23756  function _burn(uint256 tokenId) internal virtual {... */\n    tag_282:\n        /* \"chestNft.sol\":23727:23748  _burn(tokenId, false) */\n      tag_281\n        /* \"chestNft.sol\":23733:23740  tokenId */\n      dup2\n        /* \"chestNft.sol\":23742:23747  false */\n      0x00\n        /* \"chestNft.sol\":23727:23732  _burn */\n      tag_378\n        /* \"chestNft.sol\":23727:23748  _burn(tokenId, false) */\n      jump\t// in\n        /* \"chestNft.sol\":22145:22853  function _safeMint(... */\n    tag_347:\n        /* \"chestNft.sol\":22276:22295  _mint(to, quantity) */\n      tag_382\n        /* \"chestNft.sol\":22282:22284  to */\n      dup4\n        /* \"chestNft.sol\":22286:22294  quantity */\n      dup4\n        /* \"chestNft.sol\":22276:22281  _mint */\n      tag_383\n        /* \"chestNft.sol\":22276:22295  _mint(to, quantity) */\n      jump\t// in\n    tag_382:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":22337:22351  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"chestNft.sol\":22337:22356  to.code.length != 0 */\n      iszero\n        /* \"chestNft.sol\":22333:22835  if (to.code.length != 0) {... */\n      tag_220\n      jumpi\n        /* \"chestNft.sol\":22391:22404  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":22439:22453  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"chestNft.sol\":22472:22714  do {... */\n    tag_385:\n        /* \"chestNft.sol\":22503:22565  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_388\n        /* \"chestNft.sol\":22542:22543  0 */\n      0x00\n        /* \"chestNft.sol\":22546:22548  to */\n      dup7\n        /* \"chestNft.sol\":22550:22557  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"chestNft.sol\":22559:22564  _data */\n      dup7\n        /* \"chestNft.sol\":22503:22533  _checkContractOnERC721Received */\n      tag_259\n        /* \"chestNft.sol\":22503:22565  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_388:\n        /* \"chestNft.sol\":22498:22674  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_390\n      jumpi\n        /* \"chestNft.sol\":22594:22650  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_390\n      shl(0xe1, 0x68d2bf6b)\n        /* \"chestNft.sol\":22594:22601  _revert */\n      tag_170\n        /* \"chestNft.sol\":22594:22650  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_390:\n        /* \"chestNft.sol\":22709:22712  end */\n      dup2\n        /* \"chestNft.sol\":22701:22706  index */\n      dup2\n        /* \"chestNft.sol\":22701:22712  index < end */\n      lt\n        /* \"chestNft.sol\":22472:22714  do {... */\n      tag_385\n      jumpi\n        /* \"chestNft.sol\":22796:22799  end */\n      dup2\n        /* \"chestNft.sol\":22779:22792  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":22779:22799  _currentIndex != end */\n      eq\n        /* \"chestNft.sol\":22775:22819  if (_currentIndex != end) _revert(bytes4(0)) */\n      tag_392\n      jumpi\n        /* \"chestNft.sol\":22801:22819  _revert(bytes4(0)) */\n      tag_392\n        /* \"chestNft.sol\":22816:22817  0 */\n      0x00\n        /* \"chestNft.sol\":22801:22808  _revert */\n      tag_170\n        /* \"chestNft.sol\":22801:22819  _revert(bytes4(0)) */\n      jump\t// in\n    tag_392:\n        /* \"chestNft.sol\":22358:22835  {... */\n      pop\n      pop\n        /* \"chestNft.sol\":22145:22853  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":23769:26608  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n    tag_378:\n        /* \"chestNft.sol\":23849:23876  uint256 prevOwnershipPacked */\n      0x00\n        /* \"chestNft.sol\":23879:23906  _packedOwnershipOf(tokenId) */\n      tag_394\n        /* \"chestNft.sol\":23898:23905  tokenId */\n      dup4\n        /* \"chestNft.sol\":23879:23897  _packedOwnershipOf */\n      tag_185\n        /* \"chestNft.sol\":23879:23906  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_394:\n        /* \"chestNft.sol\":23849:23906  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n      dup1\n        /* \"chestNft.sol\":23919:23931  address from */\n      0x00\n      dup1\n        /* \"chestNft.sol\":24041:24076  _getApprovedSlotAndAddress(tokenId) */\n      tag_395\n        /* \"chestNft.sol\":24068:24075  tokenId */\n      dup7\n        /* \"chestNft.sol\":13291:13318  uint256 approvedAddressSlot */\n      0x00\n        /* \"chestNft.sol\":13402:13426  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"chestNft.sol\":13402:13417  _tokenApprovals */\n      0x0d\n        /* \"chestNft.sol\":13402:13426  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"chestNft.sol\":13630:13656  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"chestNft.sol\":13402:13426  _tokenApprovals[tokenId] */\n      swap1\n      swap2\n        /* \"chestNft.sol\":13189:13674  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      jump\n        /* \"chestNft.sol\":24041:24076  _getApprovedSlotAndAddress(tokenId) */\n    tag_395:\n        /* \"chestNft.sol\":23984:24076  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"chestNft.sol\":24093:24106  approvalCheck */\n      dup5\n        /* \"chestNft.sol\":24089:24414  if (approvalCheck) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"chestNft.sol\":24214:24282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_397\n        /* \"chestNft.sol\":24239:24254  approvedAddress */\n      dup2\n        /* \"chestNft.sol\":24256:24260  from */\n      dup5\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n        /* \"chestNft.sol\":24262:24281  _msgSenderERC721A() */\n      tag_191\n        /* \"chestNft.sol\":27662:27767  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      jump\n        /* \"chestNft.sol\":24214:24282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_397:\n        /* \"chestNft.sol\":24209:24402  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_403\n      jumpi\n        /* \"chestNft.sol\":24306:24349  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_400\n        /* \"chestNft.sol\":24323:24327  from */\n      dup4\n        /* \"chestNft.sol\":27749:27759  msg.sender */\n      caller\n        /* \"chestNft.sol\":11958:12122  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_143\n      jump\t// in\n        /* \"chestNft.sol\":24306:24349  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_400:\n        /* \"chestNft.sol\":24301:24402  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_403\n      jumpi\n        /* \"chestNft.sol\":24351:24402  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_403\n      shl(0xe1, 0x2ce44b5f)\n        /* \"chestNft.sol\":24351:24358  _revert */\n      tag_170\n        /* \"chestNft.sol\":24351:24402  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_403:\n        /* \"chestNft.sol\":24570:24585  approvedAddress */\n      dup1\n        /* \"chestNft.sol\":24567:24727  if approvedAddress {... */\n      iszero\n      tag_405\n      jumpi\n        /* \"chestNft.sol\":24710:24711  0 */\n      0x00\n        /* \"chestNft.sol\":24689:24708  approvedAddressSlot */\n      dup3\n        /* \"chestNft.sol\":24682:24712  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"chestNft.sol\":24567:24727  if approvedAddress {... */\n    tag_405:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":25078:25102  _packedAddressData[from] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":25078:25096  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":25078:25102  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"chestNft.sol\":25078:25138  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      dup1\n      sload\n        /* \"chestNft.sol\":25106:25138  (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      0xffffffffffffffffffffffffffffffff\n        /* \"chestNft.sol\":25078:25138  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      add\n      swap1\n      sstore\n        /* \"chestNft.sol\":10943:10954  timestamp() */\n      timestamp\n        /* \"chestNft.sol\":10918:10941  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"chestNft.sol\":10914:10955  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"chestNft.sol\":10901:10964  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe0, 0x03)\n      or\n        /* \"chestNft.sol\":25376:25402  _packedOwnerships[tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"chestNft.sol\":25376:25393  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":25376:25402  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"chestNft.sol\":25376:25581  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"chestNft.sol\":25701:25748  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup6\n      and\n        /* \"chestNft.sol\":25701:25753  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"chestNft.sol\":25697:26324  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_408\n      jumpi\n        /* \"chestNft.sol\":25806:25807  1 */\n      0x01\n        /* \"chestNft.sol\":25796:25807  tokenId + 1 */\n      dup7\n      add\n        /* \"chestNft.sol\":25774:25793  uint256 nextTokenId */\n      0x00\n        /* \"chestNft.sol\":25929:25959  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":25929:25946  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":25929:25959  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"chestNft.sol\":25929:25964  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"chestNft.sol\":25925:26309  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_410\n      jumpi\n        /* \"chestNft.sol\":26067:26080  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":26052:26063  nextTokenId */\n      dup2\n        /* \"chestNft.sol\":26052:26080  nextTokenId != _currentIndex */\n      eq\n        /* \"chestNft.sol\":26048:26290  if (nextTokenId != _currentIndex) {... */\n      tag_410\n      jumpi\n        /* \"chestNft.sol\":26214:26244  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":26214:26231  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":26214:26244  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"chestNft.sol\":26214:26266  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup6\n      swap1\n      sstore\n        /* \"chestNft.sol\":26048:26290  if (nextTokenId != _currentIndex) {... */\n    tag_410:\n        /* \"chestNft.sol\":25755:26324  {... */\n      pop\n        /* \"chestNft.sol\":25697:26324  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_408:\n        /* \"chestNft.sol\":26352:26387  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"chestNft.sol\":26379:26386  tokenId */\n      dup7\n      swap1\n        /* \"chestNft.sol\":26375:26376  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":26352:26387  Transfer(from, address(0), tokenId) */\n      dup7\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"chestNft.sol\":26375:26376  0 */\n      dup4\n      swap1\n        /* \"chestNft.sol\":26352:26387  Transfer(from, address(0), tokenId) */\n      log4\n      pop\n      pop\n        /* \"chestNft.sol\":26575:26587  _burnCounter */\n      0x02\n        /* \"chestNft.sol\":26575:26589  _burnCounter++ */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"chestNft.sol\":23769:26608  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n      jump\t// out\n        /* \"chestNft.sol\":18526:20831  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_383:\n        /* \"chestNft.sol\":18622:18635  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":18599:18619  uint256 startTokenId */\n      0x00\n        /* \"chestNft.sol\":18650:18663  quantity == 0 */\n      dup3\n      swap1\n      sub\n        /* \"chestNft.sol\":18646:18699  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n      tag_414\n      jumpi\n        /* \"chestNft.sol\":18665:18699  _revert(MintZeroQuantity.selector) */\n      tag_414\n      shl(0xe0, 0xb562e8dd)\n        /* \"chestNft.sol\":18665:18672  _revert */\n      tag_170\n        /* \"chestNft.sol\":18665:18699  _revert(MintZeroQuantity.selector) */\n      jump\t// in\n    tag_414:\n        /* \"chestNft.sol\":19212:19243  _packedOwnerships[startTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"chestNft.sol\":19212:19229  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":19212:19243  _packedOwnerships[startTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"chestNft.sol\":10769:10797  and(owner, _BITMASK_ADDRESS) */\n      dup8\n      and\n        /* \"chestNft.sol\":10943:10954  timestamp() */\n      timestamp\n        /* \"chestNft.sol\":10918:10941  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"chestNft.sol\":10914:10955  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"chestNft.sol\":11298:11299  1 */\n      0x01\n        /* \"chestNft.sol\":11285:11300  eq(quantity, 1) */\n      dup9\n      eq\n        /* \"chestNft.sol\":11259:11283  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"chestNft.sol\":11255:11301  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"chestNft.sol\":10911:10963  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"chestNft.sol\":10901:10964  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup2\n      or\n        /* \"chestNft.sol\":19212:19385  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      swap1\n      swap2\n      sstore\n        /* \"chestNft.sol\":19603:19625  _packedAddressData[to] */\n      dup1\n      dup5\n      mstore\n        /* \"chestNft.sol\":19603:19621  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":19603:19625  _packedAddressData[to] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"chestNft.sol\":19603:19674  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"chestNft.sol\":19641:19673  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"chestNft.sol\":19629:19674  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup7\n      mul\n        /* \"chestNft.sol\":19603:19674  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"chestNft.sol\":10769:10797  and(owner, _BITMASK_ADDRESS) */\n      swap1\n        /* \"chestNft.sol\":19864:19877  toMasked == 0 */\n      dup2\n      swap1\n      sub\n        /* \"chestNft.sol\":19860:19914  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n      tag_421\n      jumpi\n        /* \"chestNft.sol\":19879:19914  _revert(MintToZeroAddress.selector) */\n      tag_421\n      shl(0xe8, 0x2e0763)\n        /* \"chestNft.sol\":19879:19886  _revert */\n      tag_170\n        /* \"chestNft.sol\":19879:19914  _revert(MintToZeroAddress.selector) */\n      jump\t// in\n    tag_421:\n        /* \"chestNft.sol\":19945:19968  startTokenId + quantity */\n      dup2\n      dup4\n      add\n        /* \"chestNft.sol\":19945:19957  startTokenId */\n      dup3\n        /* \"chestNft.sol\":20030:20706  do {... */\n    tag_422:\n        /* \"chestNft.sol\":20449:20456  tokenId */\n      dup1\n        /* \"chestNft.sol\":20405:20413  toMasked */\n      dup4\n        /* \"chestNft.sol\":20360:20361  0 */\n      0x00\n        /* \"chestNft.sol\":20294:20319  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"chestNft.sol\":20231:20232  0 */\n      0x00\n        /* \"chestNft.sol\":20166:20167  0 */\n      dup1\n        /* \"chestNft.sol\":20135:20493  log4(... */\n      log4\n        /* \"chestNft.sol\":20701:20704  end */\n      dup2\n        /* \"chestNft.sol\":20688:20697  ++tokenId */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n      dup2\n        /* \"chestNft.sol\":20688:20704  ++tokenId != end */\n      sub\n        /* \"chestNft.sol\":20030:20706  do {... */\n      tag_422\n      jumpi\n      pop\n        /* \"chestNft.sol\":20722:20735  _currentIndex */\n      0x01\n        /* \"chestNft.sol\":20722:20741  _currentIndex = end */\n      sstore\n      pop\n        /* \"chestNft.sol\":16841:17034  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_427:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_36:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_440:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_272\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_427\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_428:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_444:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_444)\n    tag_446:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_429:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_448\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_428\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_44:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_272\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_48:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_430:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1919:2173   */\n    tag_54:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_457:\n        /* \"#utility.yul\":2087:2116   */\n      tag_458\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_430\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2305   */\n    tag_431:\n        /* \"#utility.yul\":2239:2249   */\n      0x4e487b71\n        /* \"#utility.yul\":2234:2237   */\n      0xe0\n        /* \"#utility.yul\":2230:2250   */\n      shl\n        /* \"#utility.yul\":2227:2228   */\n      0x00\n        /* \"#utility.yul\":2220:2251   */\n      mstore\n        /* \"#utility.yul\":2270:2274   */\n      0x41\n        /* \"#utility.yul\":2267:2268   */\n      0x04\n        /* \"#utility.yul\":2260:2275   */\n      mstore\n        /* \"#utility.yul\":2294:2298   */\n      0x24\n        /* \"#utility.yul\":2291:2292   */\n      0x00\n        /* \"#utility.yul\":2284:2299   */\n      revert\n        /* \"#utility.yul\":2310:2942   */\n    tag_432:\n        /* \"#utility.yul\":2375:2380   */\n      0x00\n        /* \"#utility.yul\":2405:2423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2446:2448   */\n      dup1\n        /* \"#utility.yul\":2438:2444   */\n      dup5\n        /* \"#utility.yul\":2435:2449   */\n      gt\n        /* \"#utility.yul\":2432:2472   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":2452:2470   */\n      tag_462\n      tag_431\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":2527:2529   */\n      0x40\n        /* \"#utility.yul\":2521:2530   */\n      mload\n        /* \"#utility.yul\":2495:2497   */\n      0x1f\n        /* \"#utility.yul\":2581:2596   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2577:2601   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2603:2605   */\n      0x3f\n        /* \"#utility.yul\":2573:2606   */\n      add\n        /* \"#utility.yul\":2569:2611   */\n      and\n        /* \"#utility.yul\":2557:2612   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2627:2645   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2647:2669   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2624:2670   */\n      or\n        /* \"#utility.yul\":2621:2693   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2673:2691   */\n      tag_464\n      tag_431\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":2713:2723   */\n      dup2\n        /* \"#utility.yul\":2709:2711   */\n      0x40\n        /* \"#utility.yul\":2702:2724   */\n      mstore\n        /* \"#utility.yul\":2742:2748   */\n      dup1\n        /* \"#utility.yul\":2733:2748   */\n      swap4\n      pop\n        /* \"#utility.yul\":2772:2778   */\n      dup6\n        /* \"#utility.yul\":2764:2770   */\n      dup2\n        /* \"#utility.yul\":2757:2779   */\n      mstore\n        /* \"#utility.yul\":2812:2815   */\n      dup7\n        /* \"#utility.yul\":2803:2809   */\n      dup7\n        /* \"#utility.yul\":2798:2801   */\n      dup7\n        /* \"#utility.yul\":2794:2810   */\n      add\n        /* \"#utility.yul\":2791:2816   */\n      gt\n        /* \"#utility.yul\":2788:2833   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2826:2827   */\n      dup1\n        /* \"#utility.yul\":2819:2831   */\n      revert\n        /* \"#utility.yul\":2788:2833   */\n    tag_465:\n        /* \"#utility.yul\":2879:2885   */\n      dup6\n        /* \"#utility.yul\":2874:2877   */\n      dup6\n        /* \"#utility.yul\":2867:2871   */\n      0x20\n        /* \"#utility.yul\":2859:2865   */\n      dup4\n        /* \"#utility.yul\":2855:2872   */\n      add\n        /* \"#utility.yul\":2842:2886   */\n      calldatacopy\n        /* \"#utility.yul\":2934:2935   */\n      0x00\n        /* \"#utility.yul\":2927:2931   */\n      0x20\n        /* \"#utility.yul\":2918:2924   */\n      dup8\n        /* \"#utility.yul\":2910:2916   */\n      dup4\n        /* \"#utility.yul\":2906:2925   */\n      add\n        /* \"#utility.yul\":2902:2932   */\n      add\n        /* \"#utility.yul\":2895:2936   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2310:2942   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2947:3398   */\n    tag_59:\n        /* \"#utility.yul\":3016:3022   */\n      0x00\n        /* \"#utility.yul\":3069:3071   */\n      0x20\n        /* \"#utility.yul\":3057:3066   */\n      dup3\n        /* \"#utility.yul\":3048:3055   */\n      dup5\n        /* \"#utility.yul\":3044:3067   */\n      sub\n        /* \"#utility.yul\":3040:3072   */\n      slt\n        /* \"#utility.yul\":3037:3089   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3085:3086   */\n      0x00\n        /* \"#utility.yul\":3082:3083   */\n      dup1\n        /* \"#utility.yul\":3075:3087   */\n      revert\n        /* \"#utility.yul\":3037:3089   */\n    tag_467:\n        /* \"#utility.yul\":3125:3134   */\n      dup2\n        /* \"#utility.yul\":3112:3135   */\n      calldataload\n        /* \"#utility.yul\":3158:3176   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3150:3156   */\n      dup2\n        /* \"#utility.yul\":3147:3177   */\n      gt\n        /* \"#utility.yul\":3144:3194   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":3190:3191   */\n      0x00\n        /* \"#utility.yul\":3187:3188   */\n      dup1\n        /* \"#utility.yul\":3180:3192   */\n      revert\n        /* \"#utility.yul\":3144:3194   */\n    tag_468:\n        /* \"#utility.yul\":3213:3235   */\n      dup3\n      add\n        /* \"#utility.yul\":3266:3270   */\n      0x1f\n        /* \"#utility.yul\":3258:3271   */\n      dup2\n      add\n        /* \"#utility.yul\":3254:3281   */\n      dup5\n      sgt\n        /* \"#utility.yul\":3244:3299   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":3295:3296   */\n      0x00\n        /* \"#utility.yul\":3292:3293   */\n      dup1\n        /* \"#utility.yul\":3285:3297   */\n      revert\n        /* \"#utility.yul\":3244:3299   */\n    tag_469:\n        /* \"#utility.yul\":3318:3392   */\n      tag_364\n        /* \"#utility.yul\":3384:3391   */\n      dup5\n        /* \"#utility.yul\":3379:3381   */\n      dup3\n        /* \"#utility.yul\":3366:3382   */\n      calldataload\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3357:3359   */\n      dup5\n        /* \"#utility.yul\":3353:3364   */\n      add\n        /* \"#utility.yul\":3318:3392   */\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":3585:3913   */\n    tag_68:\n        /* \"#utility.yul\":3662:3668   */\n      0x00\n        /* \"#utility.yul\":3670:3676   */\n      dup1\n        /* \"#utility.yul\":3678:3684   */\n      0x00\n        /* \"#utility.yul\":3731:3733   */\n      0x60\n        /* \"#utility.yul\":3719:3728   */\n      dup5\n        /* \"#utility.yul\":3710:3717   */\n      dup7\n        /* \"#utility.yul\":3706:3729   */\n      sub\n        /* \"#utility.yul\":3702:3734   */\n      slt\n        /* \"#utility.yul\":3699:3751   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":3747:3748   */\n      0x00\n        /* \"#utility.yul\":3744:3745   */\n      dup1\n        /* \"#utility.yul\":3737:3749   */\n      revert\n        /* \"#utility.yul\":3699:3751   */\n    tag_473:\n        /* \"#utility.yul\":3770:3799   */\n      tag_474\n        /* \"#utility.yul\":3789:3798   */\n      dup5\n        /* \"#utility.yul\":3770:3799   */\n      tag_430\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3760:3799   */\n      swap3\n      pop\n        /* \"#utility.yul\":3818:3856   */\n      tag_475\n        /* \"#utility.yul\":3852:3854   */\n      0x20\n        /* \"#utility.yul\":3841:3850   */\n      dup6\n        /* \"#utility.yul\":3837:3855   */\n      add\n        /* \"#utility.yul\":3818:3856   */\n      tag_430\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3808:3856   */\n      swap2\n      pop\n        /* \"#utility.yul\":3903:3905   */\n      0x40\n        /* \"#utility.yul\":3892:3901   */\n      dup5\n        /* \"#utility.yul\":3888:3906   */\n      add\n        /* \"#utility.yul\":3875:3907   */\n      calldataload\n        /* \"#utility.yul\":3865:3907   */\n      swap1\n      pop\n        /* \"#utility.yul\":3585:3913   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3918:4104   */\n    tag_93:\n        /* \"#utility.yul\":3977:3983   */\n      0x00\n        /* \"#utility.yul\":4030:4032   */\n      0x20\n        /* \"#utility.yul\":4018:4027   */\n      dup3\n        /* \"#utility.yul\":4009:4016   */\n      dup5\n        /* \"#utility.yul\":4005:4028   */\n      sub\n        /* \"#utility.yul\":4001:4033   */\n      slt\n        /* \"#utility.yul\":3998:4050   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":4046:4047   */\n      0x00\n        /* \"#utility.yul\":4043:4044   */\n      dup1\n        /* \"#utility.yul\":4036:4048   */\n      revert\n        /* \"#utility.yul\":3998:4050   */\n    tag_477:\n        /* \"#utility.yul\":4069:4098   */\n      tag_272\n        /* \"#utility.yul\":4088:4097   */\n      dup3\n        /* \"#utility.yul\":4069:4098   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":4109:4363   */\n    tag_102:\n        /* \"#utility.yul\":4177:4183   */\n      0x00\n        /* \"#utility.yul\":4185:4191   */\n      dup1\n        /* \"#utility.yul\":4238:4240   */\n      0x40\n        /* \"#utility.yul\":4226:4235   */\n      dup4\n        /* \"#utility.yul\":4217:4224   */\n      dup6\n        /* \"#utility.yul\":4213:4236   */\n      sub\n        /* \"#utility.yul\":4209:4241   */\n      slt\n        /* \"#utility.yul\":4206:4258   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":4254:4255   */\n      0x00\n        /* \"#utility.yul\":4251:4252   */\n      dup1\n        /* \"#utility.yul\":4244:4256   */\n      revert\n        /* \"#utility.yul\":4206:4258   */\n    tag_480:\n        /* \"#utility.yul\":4290:4299   */\n      dup3\n        /* \"#utility.yul\":4277:4300   */\n      calldataload\n        /* \"#utility.yul\":4267:4300   */\n      swap2\n      pop\n        /* \"#utility.yul\":4319:4357   */\n      tag_481\n        /* \"#utility.yul\":4353:4355   */\n      0x20\n        /* \"#utility.yul\":4342:4351   */\n      dup5\n        /* \"#utility.yul\":4338:4356   */\n      add\n        /* \"#utility.yul\":4319:4357   */\n      tag_430\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4309:4357   */\n      swap1\n      pop\n        /* \"#utility.yul\":4109:4363   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4368:4715   */\n    tag_116:\n        /* \"#utility.yul\":4433:4439   */\n      0x00\n        /* \"#utility.yul\":4441:4447   */\n      dup1\n        /* \"#utility.yul\":4494:4496   */\n      0x40\n        /* \"#utility.yul\":4482:4491   */\n      dup4\n        /* \"#utility.yul\":4473:4480   */\n      dup6\n        /* \"#utility.yul\":4469:4492   */\n      sub\n        /* \"#utility.yul\":4465:4497   */\n      slt\n        /* \"#utility.yul\":4462:4514   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":4510:4511   */\n      0x00\n        /* \"#utility.yul\":4507:4508   */\n      dup1\n        /* \"#utility.yul\":4500:4512   */\n      revert\n        /* \"#utility.yul\":4462:4514   */\n    tag_483:\n        /* \"#utility.yul\":4533:4562   */\n      tag_484\n        /* \"#utility.yul\":4552:4561   */\n      dup4\n        /* \"#utility.yul\":4533:4562   */\n      tag_430\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":4523:4562   */\n      swap2\n      pop\n        /* \"#utility.yul\":4612:4614   */\n      0x20\n        /* \"#utility.yul\":4601:4610   */\n      dup4\n        /* \"#utility.yul\":4597:4615   */\n      add\n        /* \"#utility.yul\":4584:4616   */\n      calldataload\n        /* \"#utility.yul\":4659:4664   */\n      dup1\n        /* \"#utility.yul\":4652:4665   */\n      iszero\n        /* \"#utility.yul\":4645:4666   */\n      iszero\n        /* \"#utility.yul\":4638:4643   */\n      dup2\n        /* \"#utility.yul\":4635:4667   */\n      eq\n        /* \"#utility.yul\":4625:4685   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":4681:4682   */\n      0x00\n        /* \"#utility.yul\":4678:4679   */\n      dup1\n        /* \"#utility.yul\":4671:4683   */\n      revert\n        /* \"#utility.yul\":4625:4685   */\n    tag_485:\n        /* \"#utility.yul\":4704:4709   */\n      dup1\n        /* \"#utility.yul\":4694:4709   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4368:4715   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4720:5387   */\n    tag_124:\n        /* \"#utility.yul\":4815:4821   */\n      0x00\n        /* \"#utility.yul\":4823:4829   */\n      dup1\n        /* \"#utility.yul\":4831:4837   */\n      0x00\n        /* \"#utility.yul\":4839:4845   */\n      dup1\n        /* \"#utility.yul\":4892:4895   */\n      0x80\n        /* \"#utility.yul\":4880:4889   */\n      dup6\n        /* \"#utility.yul\":4871:4878   */\n      dup8\n        /* \"#utility.yul\":4867:4890   */\n      sub\n        /* \"#utility.yul\":4863:4896   */\n      slt\n        /* \"#utility.yul\":4860:4913   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":4909:4910   */\n      0x00\n        /* \"#utility.yul\":4906:4907   */\n      dup1\n        /* \"#utility.yul\":4899:4911   */\n      revert\n        /* \"#utility.yul\":4860:4913   */\n    tag_487:\n        /* \"#utility.yul\":4932:4961   */\n      tag_488\n        /* \"#utility.yul\":4951:4960   */\n      dup6\n        /* \"#utility.yul\":4932:4961   */\n      tag_430\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4922:4961   */\n      swap4\n      pop\n        /* \"#utility.yul\":4980:5018   */\n      tag_489\n        /* \"#utility.yul\":5014:5016   */\n      0x20\n        /* \"#utility.yul\":5003:5012   */\n      dup7\n        /* \"#utility.yul\":4999:5017   */\n      add\n        /* \"#utility.yul\":4980:5018   */\n      tag_430\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":4970:5018   */\n      swap3\n      pop\n        /* \"#utility.yul\":5065:5067   */\n      0x40\n        /* \"#utility.yul\":5054:5063   */\n      dup6\n        /* \"#utility.yul\":5050:5068   */\n      add\n        /* \"#utility.yul\":5037:5069   */\n      calldataload\n        /* \"#utility.yul\":5027:5069   */\n      swap2\n      pop\n        /* \"#utility.yul\":5120:5122   */\n      0x60\n        /* \"#utility.yul\":5109:5118   */\n      dup6\n        /* \"#utility.yul\":5105:5123   */\n      add\n        /* \"#utility.yul\":5092:5124   */\n      calldataload\n        /* \"#utility.yul\":5147:5165   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5139:5145   */\n      dup2\n        /* \"#utility.yul\":5136:5166   */\n      gt\n        /* \"#utility.yul\":5133:5183   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5176:5177   */\n      dup1\n        /* \"#utility.yul\":5169:5181   */\n      revert\n        /* \"#utility.yul\":5133:5183   */\n    tag_490:\n        /* \"#utility.yul\":5202:5224   */\n      dup6\n      add\n        /* \"#utility.yul\":5255:5259   */\n      0x1f\n        /* \"#utility.yul\":5247:5260   */\n      dup2\n      add\n        /* \"#utility.yul\":5243:5270   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5233:5288   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":5284:5285   */\n      0x00\n        /* \"#utility.yul\":5281:5282   */\n      dup1\n        /* \"#utility.yul\":5274:5286   */\n      revert\n        /* \"#utility.yul\":5233:5288   */\n    tag_491:\n        /* \"#utility.yul\":5307:5381   */\n      tag_492\n        /* \"#utility.yul\":5373:5380   */\n      dup8\n        /* \"#utility.yul\":5368:5370   */\n      dup3\n        /* \"#utility.yul\":5355:5371   */\n      calldataload\n        /* \"#utility.yul\":5350:5352   */\n      0x20\n        /* \"#utility.yul\":5346:5348   */\n      dup5\n        /* \"#utility.yul\":5342:5353   */\n      add\n        /* \"#utility.yul\":5307:5381   */\n      tag_432\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":5297:5381   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4720:5387   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5392:6024   */\n    tag_131:\n        /* \"#utility.yul\":5563:5565   */\n      0x20\n        /* \"#utility.yul\":5615:5636   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5685:5698   */\n      dup3\n      mload\n        /* \"#utility.yul\":5588:5606   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5707:5729   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5534:5538   */\n      0x00\n      swap2\n        /* \"#utility.yul\":5563:5565   */\n      swap1\n        /* \"#utility.yul\":5786:5801   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5760:5762   */\n      0x40\n        /* \"#utility.yul\":5745:5763   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5534:5538   */\n      dup5\n        /* \"#utility.yul\":5829:5998   */\n    tag_494:\n        /* \"#utility.yul\":5843:5849   */\n      dup2\n        /* \"#utility.yul\":5840:5841   */\n      dup2\n        /* \"#utility.yul\":5837:5850   */\n      lt\n        /* \"#utility.yul\":5829:5998   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":5904:5917   */\n      dup4\n      mload\n        /* \"#utility.yul\":5892:5918   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5973:5988   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":5938:5950   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":5865:5866   */\n      0x01\n        /* \"#utility.yul\":5858:5867   */\n      add\n        /* \"#utility.yul\":5829:5998   */\n      jump(tag_494)\n    tag_496:\n      pop\n        /* \"#utility.yul\":6015:6018   */\n      swap1\n      swap7\n        /* \"#utility.yul\":5392:6024   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6029:6289   */\n    tag_144:\n        /* \"#utility.yul\":6097:6103   */\n      0x00\n        /* \"#utility.yul\":6105:6111   */\n      dup1\n        /* \"#utility.yul\":6158:6160   */\n      0x40\n        /* \"#utility.yul\":6146:6155   */\n      dup4\n        /* \"#utility.yul\":6137:6144   */\n      dup6\n        /* \"#utility.yul\":6133:6156   */\n      sub\n        /* \"#utility.yul\":6129:6161   */\n      slt\n        /* \"#utility.yul\":6126:6178   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":6174:6175   */\n      0x00\n        /* \"#utility.yul\":6171:6172   */\n      dup1\n        /* \"#utility.yul\":6164:6176   */\n      revert\n        /* \"#utility.yul\":6126:6178   */\n    tag_498:\n        /* \"#utility.yul\":6197:6226   */\n      tag_499\n        /* \"#utility.yul\":6216:6225   */\n      dup4\n        /* \"#utility.yul\":6197:6226   */\n      tag_430\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6187:6226   */\n      swap2\n      pop\n        /* \"#utility.yul\":6245:6283   */\n      tag_481\n        /* \"#utility.yul\":6279:6281   */\n      0x20\n        /* \"#utility.yul\":6268:6277   */\n      dup5\n        /* \"#utility.yul\":6264:6282   */\n      add\n        /* \"#utility.yul\":6245:6283   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":6294:6674   */\n    tag_160:\n        /* \"#utility.yul\":6373:6374   */\n      0x01\n        /* \"#utility.yul\":6369:6381   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6416:6428   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6437:6498   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":6491:6495   */\n      0x7f\n        /* \"#utility.yul\":6483:6489   */\n      dup3\n        /* \"#utility.yul\":6479:6496   */\n      and\n        /* \"#utility.yul\":6469:6496   */\n      swap2\n      pop\n        /* \"#utility.yul\":6437:6498   */\n    tag_502:\n        /* \"#utility.yul\":6544:6546   */\n      0x20\n        /* \"#utility.yul\":6536:6542   */\n      dup3\n        /* \"#utility.yul\":6533:6547   */\n      lt\n        /* \"#utility.yul\":6513:6531   */\n      dup2\n        /* \"#utility.yul\":6510:6548   */\n      sub\n        /* \"#utility.yul\":6507:6668   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":6590:6600   */\n      0x4e487b71\n        /* \"#utility.yul\":6585:6588   */\n      0xe0\n        /* \"#utility.yul\":6581:6601   */\n      shl\n        /* \"#utility.yul\":6578:6579   */\n      0x00\n        /* \"#utility.yul\":6571:6602   */\n      mstore\n        /* \"#utility.yul\":6625:6629   */\n      0x22\n        /* \"#utility.yul\":6622:6623   */\n      0x04\n        /* \"#utility.yul\":6615:6630   */\n      mstore\n        /* \"#utility.yul\":6653:6657   */\n      0x24\n        /* \"#utility.yul\":6650:6651   */\n      0x00\n        /* \"#utility.yul\":6643:6658   */\n      revert\n        /* \"#utility.yul\":6507:6668   */\n    tag_503:\n      pop\n        /* \"#utility.yul\":6294:6674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6805:7350   */\n    tag_434:\n        /* \"#utility.yul\":6907:6909   */\n      0x1f\n        /* \"#utility.yul\":6902:6905   */\n      dup3\n        /* \"#utility.yul\":6899:6910   */\n      gt\n        /* \"#utility.yul\":6896:7344   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":6943:6944   */\n      0x00\n        /* \"#utility.yul\":6968:6973   */\n      dup2\n        /* \"#utility.yul\":6964:6966   */\n      dup2\n        /* \"#utility.yul\":6957:6974   */\n      mstore\n        /* \"#utility.yul\":7013:7017   */\n      0x20\n        /* \"#utility.yul\":7009:7011   */\n      dup2\n        /* \"#utility.yul\":6999:7018   */\n      keccak256\n        /* \"#utility.yul\":7083:7085   */\n      0x1f\n        /* \"#utility.yul\":7071:7081   */\n      dup6\n        /* \"#utility.yul\":7067:7086   */\n      add\n        /* \"#utility.yul\":7064:7065   */\n      0x05\n        /* \"#utility.yul\":7060:7087   */\n      shr\n        /* \"#utility.yul\":7054:7058   */\n      dup2\n        /* \"#utility.yul\":7050:7088   */\n      add\n        /* \"#utility.yul\":7119:7123   */\n      0x20\n        /* \"#utility.yul\":7107:7117   */\n      dup7\n        /* \"#utility.yul\":7104:7124   */\n      lt\n        /* \"#utility.yul\":7101:7148   */\n      iszero\n      tag_507\n      jumpi\n      pop\n        /* \"#utility.yul\":7142:7146   */\n      dup1\n        /* \"#utility.yul\":7101:7148   */\n    tag_507:\n        /* \"#utility.yul\":7197:7199   */\n      0x1f\n        /* \"#utility.yul\":7192:7195   */\n      dup6\n        /* \"#utility.yul\":7188:7200   */\n      add\n        /* \"#utility.yul\":7185:7186   */\n      0x05\n        /* \"#utility.yul\":7181:7201   */\n      shr\n        /* \"#utility.yul\":7175:7179   */\n      dup3\n        /* \"#utility.yul\":7171:7202   */\n      add\n        /* \"#utility.yul\":7161:7202   */\n      swap2\n      pop\n        /* \"#utility.yul\":7252:7334   */\n    tag_508:\n        /* \"#utility.yul\":7270:7272   */\n      dup2\n        /* \"#utility.yul\":7263:7268   */\n      dup2\n        /* \"#utility.yul\":7260:7273   */\n      lt\n        /* \"#utility.yul\":7252:7334   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":7315:7332   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":7296:7297   */\n      0x01\n        /* \"#utility.yul\":7285:7298   */\n      add\n        /* \"#utility.yul\":7252:7334   */\n      jump(tag_508)\n    tag_510:\n        /* \"#utility.yul\":7256:7259   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6805:7350   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7526:8878   */\n    tag_179:\n        /* \"#utility.yul\":7652:7655   */\n      dup2\n        /* \"#utility.yul\":7646:7656   */\n      mload\n        /* \"#utility.yul\":7679:7697   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7671:7677   */\n      dup2\n        /* \"#utility.yul\":7668:7698   */\n      gt\n        /* \"#utility.yul\":7665:7721   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":7701:7719   */\n      tag_514\n      tag_431\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":7730:7827   */\n      tag_515\n        /* \"#utility.yul\":7820:7826   */\n      dup2\n        /* \"#utility.yul\":7780:7818   */\n      tag_516\n        /* \"#utility.yul\":7812:7816   */\n      dup5\n        /* \"#utility.yul\":7806:7817   */\n      sload\n        /* \"#utility.yul\":7780:7818   */\n      tag_160\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":7774:7778   */\n      dup5\n        /* \"#utility.yul\":7730:7827   */\n      tag_434\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":7882:7886   */\n      0x20\n      dup1\n        /* \"#utility.yul\":7946:7948   */\n      0x1f\n        /* \"#utility.yul\":7935:7949   */\n      dup4\n      gt\n        /* \"#utility.yul\":7963:7964   */\n      0x01\n        /* \"#utility.yul\":7958:8621   */\n      dup2\n      eq\n      tag_518\n      jumpi\n        /* \"#utility.yul\":8665:8666   */\n      0x00\n        /* \"#utility.yul\":8682:8688   */\n      dup5\n        /* \"#utility.yul\":8679:8768   */\n      iszero\n      tag_519\n      jumpi\n      pop\n        /* \"#utility.yul\":8734:8753   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":8728:8754   */\n      mload\n        /* \"#utility.yul\":8679:8768   */\n    tag_519:\n      not(0x00)\n        /* \"#utility.yul\":7483:7484   */\n      0x03\n        /* \"#utility.yul\":7479:7490   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":7475:7499   */\n      shr\n        /* \"#utility.yul\":7471:7500   */\n      not\n        /* \"#utility.yul\":7461:7501   */\n      and\n        /* \"#utility.yul\":7507:7508   */\n      0x01\n        /* \"#utility.yul\":7503:7514   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":7458:7515   */\n      or\n        /* \"#utility.yul\":8781:8862   */\n      dup6\n      sstore\n        /* \"#utility.yul\":7928:8872   */\n      jump(tag_510)\n        /* \"#utility.yul\":7958:8621   */\n    tag_518:\n        /* \"#utility.yul\":6752:6753   */\n      0x00\n        /* \"#utility.yul\":6745:6759   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":6789:6793   */\n      0x20\n        /* \"#utility.yul\":6776:6794   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7994:8014   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":8112:8348   */\n    tag_522:\n        /* \"#utility.yul\":8126:8133   */\n      dup3\n        /* \"#utility.yul\":8123:8124   */\n      dup2\n        /* \"#utility.yul\":8120:8134   */\n      lt\n        /* \"#utility.yul\":8112:8348   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":8215:8234   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":8209:8235   */\n      mload\n        /* \"#utility.yul\":8194:8236   */\n      dup3\n      sstore\n        /* \"#utility.yul\":8307:8334   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":8275:8276   */\n      0x01\n        /* \"#utility.yul\":8263:8277   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":8142:8161   */\n      dup5\n      add\n        /* \"#utility.yul\":8112:8348   */\n      jump(tag_522)\n    tag_524:\n        /* \"#utility.yul\":8116:8119   */\n      pop\n        /* \"#utility.yul\":8376:8382   */\n      dup6\n        /* \"#utility.yul\":8367:8374   */\n      dup3\n        /* \"#utility.yul\":8364:8383   */\n      lt\n        /* \"#utility.yul\":8361:8562   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":8437:8456   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":8431:8457   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":8520:8521   */\n      0x03\n        /* \"#utility.yul\":8516:8530   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":8532:8535   */\n      0xf8\n        /* \"#utility.yul\":8512:8536   */\n      and\n        /* \"#utility.yul\":8508:8545   */\n      shr\n        /* \"#utility.yul\":8504:8546   */\n      not\n        /* \"#utility.yul\":8489:8547   */\n      and\n        /* \"#utility.yul\":8474:8548   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8361:8562   */\n    tag_525:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8608:8609   */\n      0x01\n        /* \"#utility.yul\":8592:8606   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":8588:8610   */\n      add\n        /* \"#utility.yul\":8575:8611   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":7526:8878   */\n      jump\t// out\n        /* \"#utility.yul\":9241:10497   */\n    tag_276:\n        /* \"#utility.yul\":9465:9468   */\n      0x00\n        /* \"#utility.yul\":9503:9509   */\n      dup5\n        /* \"#utility.yul\":9497:9510   */\n      mload\n        /* \"#utility.yul\":9529:9533   */\n      0x20\n        /* \"#utility.yul\":9542:9606   */\n      tag_528\n        /* \"#utility.yul\":9599:9605   */\n      dup3\n        /* \"#utility.yul\":9594:9597   */\n      dup6\n        /* \"#utility.yul\":9589:9591   */\n      dup4\n        /* \"#utility.yul\":9581:9587   */\n      dup11\n        /* \"#utility.yul\":9577:9592   */\n      add\n        /* \"#utility.yul\":9542:9606   */\n      tag_428\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":9669:9682   */\n      dup6\n      mload\n        /* \"#utility.yul\":9628:9644   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":9691:9759   */\n      tag_529\n        /* \"#utility.yul\":9669:9682   */\n      dup2\n        /* \"#utility.yul\":9628:9644   */\n      dup5\n        /* \"#utility.yul\":9726:9741   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":9691:9759   */\n      tag_428\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":9848:9861   */\n      dup6\n      sload\n        /* \"#utility.yul\":9781:9801   */\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":9821:9822   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9886:9922   */\n      tag_530\n        /* \"#utility.yul\":9848:9861   */\n      dup2\n        /* \"#utility.yul\":9886:9922   */\n      tag_160\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":9941:9942   */\n      0x01\n        /* \"#utility.yul\":9958:9976   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":9985:10126   */\n      dup1\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":10140:10141   */\n      0x01\n        /* \"#utility.yul\":10135:10472   */\n      dup2\n      eq\n      tag_533\n      jumpi\n        /* \"#utility.yul\":9951:10472   */\n      jump(tag_531)\n        /* \"#utility.yul\":9985:10126   */\n    tag_532:\n      not(0xff)\n        /* \"#utility.yul\":10020:10044   */\n      dup5\n      and\n        /* \"#utility.yul\":10006:10045   */\n      dup8\n      mstore\n        /* \"#utility.yul\":10097:10113   */\n      dup3\n      iszero\n        /* \"#utility.yul\":10090:10114   */\n      iszero\n        /* \"#utility.yul\":10076:10115   */\n      dup4\n      mul\n        /* \"#utility.yul\":10065:10116   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":9985:10126   */\n      jump(tag_531)\n        /* \"#utility.yul\":10135:10472   */\n    tag_533:\n        /* \"#utility.yul\":10166:10172   */\n      dup10\n        /* \"#utility.yul\":10163:10164   */\n      0x00\n        /* \"#utility.yul\":10156:10173   */\n      mstore\n        /* \"#utility.yul\":10214:10216   */\n      dup6\n        /* \"#utility.yul\":10211:10212   */\n      0x00\n        /* \"#utility.yul\":10201:10217   */\n      keccak256\n        /* \"#utility.yul\":10239:10240   */\n      0x00\n        /* \"#utility.yul\":10253:10422   */\n    tag_534:\n        /* \"#utility.yul\":10267:10275   */\n      dup5\n        /* \"#utility.yul\":10264:10265   */\n      dup2\n        /* \"#utility.yul\":10261:10276   */\n      lt\n        /* \"#utility.yul\":10253:10422   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":10349:10363   */\n      dup2\n      sload\n        /* \"#utility.yul\":10334:10347   */\n      dup10\n      dup3\n      add\n        /* \"#utility.yul\":10327:10364   */\n      mstore\n        /* \"#utility.yul\":10392:10408   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":10284:10294   */\n      dup8\n      add\n        /* \"#utility.yul\":10253:10422   */\n      jump(tag_534)\n    tag_536:\n        /* \"#utility.yul\":10257:10260   */\n      pop\n      pop\n        /* \"#utility.yul\":10453:10461   */\n      dup3\n        /* \"#utility.yul\":10446:10451   */\n      dup8\n        /* \"#utility.yul\":10442:10462   */\n      add\n        /* \"#utility.yul\":10435:10462   */\n      swap5\n      pop\n        /* \"#utility.yul\":9951:10472   */\n    tag_531:\n      pop\n        /* \"#utility.yul\":10488:10491   */\n      swap3\n      swap11\n        /* \"#utility.yul\":9241:10497   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10909:11142   */\n    tag_303:\n        /* \"#utility.yul\":10948:10951   */\n      0x00\n        /* \"#utility.yul\":10976:10981   */\n      dup2\n        /* \"#utility.yul\":10966:11102   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":11024:11034   */\n      0x4e487b71\n        /* \"#utility.yul\":11019:11022   */\n      0xe0\n        /* \"#utility.yul\":11015:11035   */\n      shl\n        /* \"#utility.yul\":11012:11013   */\n      0x00\n        /* \"#utility.yul\":11005:11036   */\n      mstore\n        /* \"#utility.yul\":11059:11063   */\n      0x11\n        /* \"#utility.yul\":11056:11057   */\n      0x04\n        /* \"#utility.yul\":11049:11064   */\n      mstore\n        /* \"#utility.yul\":11087:11091   */\n      0x24\n        /* \"#utility.yul\":11084:11085   */\n      0x00\n        /* \"#utility.yul\":11077:11092   */\n      revert\n        /* \"#utility.yul\":10966:11102   */\n    tag_539:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":11118:11136   */\n      add\n      swap1\n        /* \"#utility.yul\":10909:11142   */\n      jump\t// out\n        /* \"#utility.yul\":11508:11997   */\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11777:11792   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11759:11793   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11829:11844   */\n      dup5\n      and\n        /* \"#utility.yul\":11824:11826   */\n      0x20\n        /* \"#utility.yul\":11809:11827   */\n      dup3\n      add\n        /* \"#utility.yul\":11802:11845   */\n      mstore\n        /* \"#utility.yul\":11876:11878   */\n      0x40\n        /* \"#utility.yul\":11861:11879   */\n      dup2\n      add\n        /* \"#utility.yul\":11854:11888   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11924:11927   */\n      0x80\n        /* \"#utility.yul\":11919:11921   */\n      0x60\n        /* \"#utility.yul\":11904:11922   */\n      dup3\n      add\n        /* \"#utility.yul\":11897:11928   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11702:11706   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11945:11991   */\n      tag_542\n      swap1\n        /* \"#utility.yul\":11971:11990   */\n      dup4\n      add\n        /* \"#utility.yul\":11963:11969   */\n      dup5\n        /* \"#utility.yul\":11945:11991   */\n      tag_429\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":11937:11991   */\n      swap7\n        /* \"#utility.yul\":11508:11997   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12002:12251   */\n    tag_355:\n        /* \"#utility.yul\":12071:12077   */\n      0x00\n        /* \"#utility.yul\":12124:12126   */\n      0x20\n        /* \"#utility.yul\":12112:12121   */\n      dup3\n        /* \"#utility.yul\":12103:12110   */\n      dup5\n        /* \"#utility.yul\":12099:12122   */\n      sub\n        /* \"#utility.yul\":12095:12127   */\n      slt\n        /* \"#utility.yul\":12092:12144   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12137:12138   */\n      dup1\n        /* \"#utility.yul\":12130:12142   */\n      revert\n        /* \"#utility.yul\":12092:12144   */\n    tag_544:\n        /* \"#utility.yul\":12172:12181   */\n      dup2\n        /* \"#utility.yul\":12166:12182   */\n      mload\n        /* \"#utility.yul\":12191:12221   */\n      tag_272\n        /* \"#utility.yul\":12215:12220   */\n      dup2\n        /* \"#utility.yul\":12191:12221   */\n      tag_427\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220b8a6939d024eb5460a4e7b4b64d6ce496d74828093ee59e77429e4a6cb26454a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_477": {
									"entryPoint": null,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 128,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:4"
															},
															"nodeType": "YulIf",
															"src": "289:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:4"
															},
															"nodeType": "YulIf",
															"src": "359:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:4",
														"type": ""
													}
												],
												"src": "146:380:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:4",
														"type": ""
													}
												],
												"src": "531:121:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:4"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:4"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:4",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:4"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:4"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:4",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:4"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:4"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:4"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:4"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:4"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:4"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:4"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:4",
																			"statements": []
																		},
																		"src": "1104:82:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:4"
															},
															"nodeType": "YulIf",
															"src": "748:448:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:4",
														"type": ""
													}
												],
												"src": "657:545:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:4",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:4"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:4",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:4"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:4",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:4",
														"type": ""
													}
												],
												"src": "1207:166:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:4"
															},
															"nodeType": "YulIf",
															"src": "1517:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:4"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:4",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:4"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:4",
																					"statements": []
																				},
																				"src": "1964:236:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:4",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:4"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:4"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:4"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:4",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:4"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:4",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:4"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:4"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:4"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:4"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:4",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:4"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:4",
														"type": ""
													}
												],
												"src": "1378:1352:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2799:776:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2848:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2857:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2860:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2850:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2850:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2850:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2827:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2835:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2823:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2823:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2842:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2819:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:35:4"
															},
															"nodeType": "YulIf",
															"src": "2809:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2873:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2889:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2883:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2877:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2905:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2923:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2927:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2919:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2919:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2931:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:18:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2909:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2956:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2958:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2958:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2958:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2948:2:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2952:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2945:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:10:4"
															},
															"nodeType": "YulIf",
															"src": "2942:36:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2987:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2997:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:7:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2991:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3013:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3027:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3017:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3045:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3067:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "3091:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3095:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3087:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3087:13:4"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3102:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3083:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3083:22:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3107:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3079:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3079:31:4"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3112:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3075:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3049:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3175:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3177:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3177:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3177:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:10:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3146:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3131:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3154:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3128:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:46:4"
															},
															"nodeType": "YulIf",
															"src": "3125:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3213:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3217:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3206:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3206:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3244:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3252:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:18:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3264:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3274:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "3268:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3324:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3333:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3336:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3326:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3326:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3326:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3301:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3309:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3297:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3297:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "3314:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:24:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3319:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3290:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:33:4"
															},
															"nodeType": "YulIf",
															"src": "3287:53:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3349:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3358:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3353:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3414:87:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3443:6:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3451:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3439:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3439:14:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "3455:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3435:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3435:23:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "3474:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3482:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3470:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3470:14:4"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "3486:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3466:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3466:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3460:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3460:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3428:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3428:63:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3428:63:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3379:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3382:2:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3376:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:9:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3386:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3388:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3397:1:4"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "3400:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3393:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3393:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3388:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3372:3:4",
																"statements": []
															},
															"src": "3368:133:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3525:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3533:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3521:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3521:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "3538:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3517:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:24:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3543:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3510:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3510:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3554:15:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3563:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3554:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2773:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2781:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2789:5:4",
														"type": ""
													}
												],
												"src": "2735:840:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3698:444:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3744:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3753:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3756:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3746:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3746:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3746:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3719:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3728:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3715:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3740:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3711:32:4"
															},
															"nodeType": "YulIf",
															"src": "3708:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3769:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3789:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3783:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3783:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3773:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3808:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3826:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3822:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3822:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3818:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:18:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3812:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3863:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3872:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3875:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3865:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3865:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3865:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3851:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3859:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3848:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:14:4"
															},
															"nodeType": "YulIf",
															"src": "3845:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3888:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3927:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3951:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3898:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3968:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3994:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4005:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3990:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3990:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3984:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3972:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4038:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4047:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4050:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4040:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4040:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4040:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4024:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4034:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4021:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:16:4"
															},
															"nodeType": "YulIf",
															"src": "4018:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4063:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4117:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4128:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4073:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3656:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3667:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3679:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3687:6:4",
														"type": ""
													}
												],
												"src": "3580:562:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052600060809081526006906200001a908262000175565b503480156200002857600080fd5b5060405162001b7f38038062001b7f8339810160408190526200004b91620002f0565b620000563362000080565b600362000064838262000175565b50600462000073828262000175565b505060018055506200035a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000fb57607f821691505b6020821081036200011c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017057600081815260208120601f850160051c810160208610156200014b5750805b601f850160051c820191505b818110156200016c5782815560010162000157565b5050505b505050565b81516001600160401b03811115620001915762000191620000d0565b620001a981620001a28454620000e6565b8462000122565b602080601f831160018114620001e15760008415620001c85750858301515b600019600386901b1c1916600185901b1785556200016c565b600085815260208120601f198616915b828110156200021257888601518255948401946001909101908401620001f1565b5085821015620002315787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082601f8301126200025357600080fd5b81516001600160401b0380821115620002705762000270620000d0565b604051601f8301601f19908116603f011681019082821181831017156200029b576200029b620000d0565b81604052838152602092508683858801011115620002b857600080fd5b600091505b83821015620002dc5785820183015181830184015290820190620002bd565b600093810190920192909252949350505050565b600080604083850312156200030457600080fd5b82516001600160401b03808211156200031c57600080fd5b6200032a8683870162000241565b935060208501519150808211156200034157600080fd5b50620003508582860162000241565b9150509250929050565b611815806200036a6000396000f3fe6080604052600436106101815760003560e01c8063715018a6116100d1578063b88d4fde1161008a578063dc76668d11610064578063dc76668d14610457578063e985e9c514610477578063f259a29e146104c0578063f2fde38b146104d557600080fd5b8063b88d4fde146103f7578063bf1e5e9e1461040a578063c87b56dd1461043757600080fd5b8063715018a61461032c5780638370d004146103415780638da5cb5b1461038457806395d89b41146103a2578063a22cb465146103b7578063b6b285d9146103d757600080fd5b806323b872dd1161013e5780635503a0e8116101185780635503a0e8146102b757806355f804b3146102cc5780636352211e146102ec57806370a082311461030c57600080fd5b806323b872dd1461027157806340c10f191461028457806342842e0e146102a457600080fd5b806301ffc9a71461018657806306fdde03146101bb578063081812fc146101dd578063095ea7b31461021557806316ba10e01461022a57806318160ddd1461024a575b600080fd5b34801561019257600080fd5b506101a66101a1366004611220565b6104f5565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d0610547565b6040516101b2919061128d565b3480156101e957600080fd5b506101fd6101f83660046112a0565b6105d9565b6040516001600160a01b0390911681526020016101b2565b6102286102233660046112d0565b610614565b005b34801561023657600080fd5b50610228610245366004611386565b610624565b34801561025657600080fd5b5060025460015403600019015b6040519081526020016101b2565b61022861027f3660046113cf565b610638565b34801561029057600080fd5b5061022861029f3660046112d0565b6107a7565b6102286102b23660046113cf565b61081a565b3480156102c357600080fd5b506101d061083a565b3480156102d857600080fd5b506102286102e7366004611386565b6108c8565b3480156102f857600080fd5b506101fd6103073660046112a0565b6108dc565b34801561031857600080fd5b5061026361032736600461140b565b6108e7565b34801561033857600080fd5b5061022861092d565b34801561034d57600080fd5b506101a661035c366004611426565b6001600160a01b03166000908152600a60209081526040808320938352929052205460ff1690565b34801561039057600080fd5b506000546001600160a01b03166101fd565b3480156103ae57600080fd5b506101d0610941565b3480156103c357600080fd5b506102286103d2366004611452565b610950565b3480156103e357600080fd5b506102286103f236600461140b565b6109bc565b61022861040536600461148e565b6109e8565b34801561041657600080fd5b5061042a61042536600461140b565b610a29565b6040516101b2919061150a565b34801561044357600080fd5b506101d06104523660046112a0565b610a95565b34801561046357600080fd5b506102286104723660046112a0565b610b13565b34801561048357600080fd5b506101a661049236600461154e565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b3480156104cc57600080fd5b506101d0610b7c565b3480156104e157600080fd5b506102286104f036600461140b565b610b89565b60006301ffc9a760e01b6001600160e01b03198316148061052657506380ac58cd60e01b6001600160e01b03198316145b806105415750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606003805461055690611578565b80601f016020809104026020016040519081016040528092919081815260200182805461058290611578565b80156105cf5780601f106105a4576101008083540402835291602001916105cf565b820191906000526020600020905b8154815290600101906020018083116105b257829003601f168201915b5050505050905090565b60006105e482610bff565b6105f8576105f86333d1c03960e21b610c4d565b506000908152600d60205260409020546001600160a01b031690565b61062082826001610c57565b5050565b61062c610cfa565b60066106208282611600565b600061064382610d54565b6001600160a01b0394851694909150811684146106695761066962a1148160e81b610c4d565b6000828152600d6020526040902080546106958187335b6001600160a01b039081169116811491141790565b6106b7576106a38633610492565b6106b7576106b7632ce44b5f60e11b610c4d565b80156106c257600082555b6001600160a01b038681166000908152600c60205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b176000858152600b6020526040812091909155600160e11b8416900361075457600184016000818152600b60205260408120549003610752576001548114610752576000818152600b602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361079e5761079e633a954ecd60e21b610c4d565b50505050505050565b3360009081526009602052604090205460ff1615156001146108105760405162461bcd60e51b815260206004820152601d60248201527f796f7520617265206e6f7420617070726f7665642020746f206d696e7400000060448201526064015b60405180910390fd5b6106208282610df5565b610835838383604051806020016040528060008152506109e8565b505050565b6006805461084790611578565b80601f016020809104026020016040519081016040528092919081815260200182805461087390611578565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b505050505081565b6108d0610cfa565b60056106208282611600565b600061054182610d54565b60006001600160a01b038216610907576109076323d3ad8160e21b610c4d565b506001600160a01b03166000908152600c602052604090205467ffffffffffffffff1690565b610935610cfa565b61093f6000610e0f565b565b60606004805461055690611578565b336000818152600e602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109c4610cfa565b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b6109f3848484610638565b6001600160a01b0383163b15610a2357610a0f84848484610e5f565b610a2357610a236368d2bf6b60e11b610c4d565b50505050565b6001600160a01b038116600090815260076020908152604091829020805483518184028101840190945280845260609392830182828015610a8957602002820191906000526020600020905b815481526020019060010190808311610a75575b50505050509050919050565b6060610aa082610bff565b610ab457610ab4630a14c4b560e41b610c4d565b6000610abe610f42565b90508051600003610ade5760405180602001604052806000815250610b0c565b80610ae884610f51565b6006604051602001610afc939291906116c0565b6040516020818303038152906040525b9392505050565b33610b1d826108dc565b6001600160a01b031614610b3057600080fd5b336000818152600a602090815260408083208584528252808320805460ff19166001908117909155938352600782528220805493840181558252902001819055610b7981610f95565b50565b6005805461084790611578565b610b91610cfa565b6001600160a01b038116610bf65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610807565b610b7981610e0f565b600081600111610c4857600154821015610c485760005b506000828152600b602052604081205490819003610c3e57610c3783611760565b9250610c16565b600160e01b161590505b919050565b8060005260046000fd5b6000610c62836108dc565b9050818015610c7a5750336001600160a01b03821614155b15610c9d57610c898133610492565b610c9d57610c9d6367d9dca160e11b610c4d565b6000838152600d602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b6000546001600160a01b0316331461093f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610807565b600081600111610de557506000818152600b602052604081205490819003610dd2576001548210610d8f57610d8f636f96cda160e11b610c4d565b5b50600019016000818152600b60205260409020548015610d9057600160e01b8116600003610dbd57919050565b610dcd636f96cda160e11b610c4d565b610d90565b600160e01b8116600003610de557919050565b610c48636f96cda160e11b610c4d565b610620828260405180602001604052806000815250610fa0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610e94903390899088908890600401611785565b6020604051808303816000875af1925050508015610ecf575060408051601f3d908101601f19168201909252610ecc918101906117c2565b60015b610f24573d808015610efd576040519150601f19603f3d011682016040523d82523d6000602084013e610f02565b606091505b508051600003610f1c57610f1c6368d2bf6b60e11b610c4d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60606005805461055690611578565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610f6b5750819003601f19909101908152919050565b610b79816000611009565b610faa838361114b565b6001600160a01b0383163b15610835576001548281035b610fd46000868380600101945086610e5f565b610fe857610fe86368d2bf6b60e11b610c4d565b818110610fc1578160015414611002576110026000610c4d565b5050505050565b600061101483610d54565b905080600080611032866000908152600d6020526040902080549091565b91509150841561106957611047818433610680565b611069576110558333610492565b61106957611069632ce44b5f60e11b610c4d565b801561107457600082555b6001600160a01b0383166000818152600c6020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b176000878152600b6020526040812091909155600160e11b8516900361110257600186016000818152600b60205260408120549003611100576001548114611100576000818152600b602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060028054600101905550505050565b60015460008290036111675761116763b562e8dd60e01b610c4d565b6000818152600b602090815260408083206001600160a01b0387164260a01b6001881460e11b178117909155808452600c90925282208054680100000000000000018602019055908190036111c5576111c5622e076360e81b610c4d565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081036111ca575060015550505050565b6001600160e01b031981168114610b7957600080fd5b60006020828403121561123257600080fd5b8135610b0c8161120a565b60005b83811015611258578181015183820152602001611240565b50506000910152565b6000815180845261127981602086016020860161123d565b601f01601f19169290920160200192915050565b602081526000610b0c6020830184611261565b6000602082840312156112b257600080fd5b5035919050565b80356001600160a01b0381168114610c4857600080fd5b600080604083850312156112e357600080fd5b6112ec836112b9565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561132b5761132b6112fa565b604051601f8501601f19908116603f01168101908282118183101715611353576113536112fa565b8160405280935085815286868601111561136c57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561139857600080fd5b813567ffffffffffffffff8111156113af57600080fd5b8201601f810184136113c057600080fd5b610f3a84823560208401611310565b6000806000606084860312156113e457600080fd5b6113ed846112b9565b92506113fb602085016112b9565b9150604084013590509250925092565b60006020828403121561141d57600080fd5b610b0c826112b9565b6000806040838503121561143957600080fd5b82359150611449602084016112b9565b90509250929050565b6000806040838503121561146557600080fd5b61146e836112b9565b91506020830135801515811461148357600080fd5b809150509250929050565b600080600080608085870312156114a457600080fd5b6114ad856112b9565b93506114bb602086016112b9565b925060408501359150606085013567ffffffffffffffff8111156114de57600080fd5b8501601f810187136114ef57600080fd5b6114fe87823560208401611310565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b8181101561154257835183529284019291840191600101611526565b50909695505050505050565b6000806040838503121561156157600080fd5b61156a836112b9565b9150611449602084016112b9565b600181811c9082168061158c57607f821691505b6020821081036115ac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561083557600081815260208120601f850160051c810160208610156115d95750805b601f850160051c820191505b818110156115f8578281556001016115e5565b505050505050565b815167ffffffffffffffff81111561161a5761161a6112fa565b61162e816116288454611578565b846115b2565b602080601f831160018114611663576000841561164b5750858301515b600019600386901b1c1916600185901b1785556115f8565b600085815260208120601f198616915b8281101561169257888601518255948401946001909101908401611673565b50858210156116b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000845160206116d38285838a0161123d565b8551918401916116e68184848a0161123d565b85549201916000906116f781611578565b6001828116801561170f576001811461172457611750565b60ff1984168752821515830287019450611750565b896000528560002060005b848110156117485781548982015290830190870161172f565b505082870194505b50929a9950505050505050505050565b60008161177d57634e487b7160e01b600052601160045260246000fd5b506000190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117b890830184611261565b9695505050505050565b6000602082840312156117d457600080fd5b8151610b0c8161120a56fea2646970667358221220b8a6939d024eb5460a4e7b4b64d6ce496d74828093ee59e77429e4a6cb26454a64736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP1 PUSH3 0x1A SWAP1 DUP3 PUSH3 0x175 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B7F CODESIZE SUB DUP1 PUSH3 0x1B7F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4B SWAP2 PUSH3 0x2F0 JUMP JUMPDEST PUSH3 0x56 CALLER PUSH3 0x80 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x64 DUP4 DUP3 PUSH3 0x175 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x73 DUP3 DUP3 PUSH3 0x175 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP PUSH3 0x35A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xFB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x11C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x14B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x157 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x191 JUMPI PUSH3 0x191 PUSH3 0xD0 JUMP JUMPDEST PUSH3 0x1A9 DUP2 PUSH3 0x1A2 DUP5 SLOAD PUSH3 0xE6 JUMP JUMPDEST DUP5 PUSH3 0x122 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1E1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1C8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x16C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x212 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1F1 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x231 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x270 JUMPI PUSH3 0x270 PUSH3 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x29B JUMPI PUSH3 0x29B PUSH3 0xD0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2DC JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x32A DUP7 DUP4 DUP8 ADD PUSH3 0x241 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x350 DUP6 DUP3 DUP7 ADD PUSH3 0x241 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1815 DUP1 PUSH3 0x36A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDC76668D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDC76668D EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xF259A29E EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xBF1E5E9E EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8370D004 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xB6B285D9 EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5503A0E8 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5503A0E8 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x16BA10E0 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x92D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x228 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0xB7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x526 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x541 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x582 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 DUP3 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x5F8 JUMPI PUSH2 0x5F8 PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62C PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x6 PUSH2 0x620 DUP3 DUP3 PUSH2 0x1600 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x643 DUP3 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x669 JUMPI PUSH2 0x669 PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x695 DUP2 DUP8 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x6B7 JUMPI PUSH2 0x6A3 DUP7 CALLER PUSH2 0x492 JUMP JUMPDEST PUSH2 0x6B7 JUMPI PUSH2 0x6B7 PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x754 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x752 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x79E JUMPI PUSH2 0x79E PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0xC4D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206D696E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x835 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x847 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x873 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x895 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x5 PUSH2 0x620 DUP3 DUP3 PUSH2 0x1600 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x541 DUP3 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x907 JUMPI PUSH2 0x907 PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x935 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x93F PUSH1 0x0 PUSH2 0xE0F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1578 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9F3 DUP5 DUP5 DUP5 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA23 JUMPI PUSH2 0xA0F DUP5 DUP5 DUP5 DUP5 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xA23 JUMPI PUSH2 0xA23 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA75 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAA0 DUP3 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABE PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH2 0xAE8 DUP5 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH2 0xB1D DUP3 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH2 0xB79 DUP2 PUSH2 0xF95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x847 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0xB91 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT PUSH2 0xC48 JUMPI PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xC3E JUMPI PUSH2 0xC37 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP3 POP PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC62 DUP4 PUSH2 0x8DC JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC7A JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC9D JUMPI PUSH2 0xC89 DUP2 CALLER PUSH2 0x492 JUMP JUMPDEST PUSH2 0xC9D JUMPI PUSH2 0xC9D PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT PUSH2 0xDE5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD2 JUMPI PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xD8F JUMPI PUSH2 0xD8F PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST JUMPDEST POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH1 0x0 SUB PUSH2 0xDBD JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH1 0x0 SUB PUSH2 0xDE5 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC48 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xE94 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xECF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xECC SWAP2 DUP2 ADD SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF24 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF1C JUMPI PUSH2 0xF1C PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xF6B JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH1 0x0 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0xFAA DUP4 DUP4 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x835 JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0xFD4 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xFE8 JUMPI PUSH2 0xFE8 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xFC1 JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1002 JUMPI PUSH2 0x1002 PUSH1 0x0 PUSH2 0xC4D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1014 DUP4 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x1032 DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1047 DUP2 DUP5 CALLER PUSH2 0x680 JUMP JUMPDEST PUSH2 0x1069 JUMPI PUSH2 0x1055 DUP4 CALLER PUSH2 0x492 JUMP JUMPDEST PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1074 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x3 PUSH1 0xE0 SHL OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP6 AND SWAP1 SUB PUSH2 0x1102 JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1100 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1100 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP3 SWAP1 SUB PUSH2 0x1167 JUMPI PUSH2 0x1167 PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0xC4D JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x11CA JUMPI POP PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB0C DUP2 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1258 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1240 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1279 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x123D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EC DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x132B JUMPI PUSH2 0x132B PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x12FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3A DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13ED DUP5 PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x13FB PUSH1 0x20 DUP6 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0C DUP3 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1449 PUSH1 0x20 DUP5 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146E DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14AD DUP6 PUSH2 0x12B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x14BB PUSH1 0x20 DUP7 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FE DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1542 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1526 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156A DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1449 PUSH1 0x20 DUP5 ADD PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x158C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x15D9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15F8 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15E5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x161A JUMPI PUSH2 0x161A PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x162E DUP2 PUSH2 0x1628 DUP5 SLOAD PUSH2 0x1578 JUMP JUMPDEST DUP5 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1663 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x164B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1692 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1673 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x16B0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x16D3 DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x123D JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x16E6 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x123D JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x16F7 DUP2 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x170F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1724 JUMPI PUSH2 0x1750 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1750 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1748 JUMPI DUP2 SLOAD DUP10 DUP3 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP8 ADD PUSH2 0x172F JUMP JUMPDEST POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x177D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x17B8 SWAP1 DUP4 ADD DUP5 PUSH2 0x1261 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB0C DUP2 PUSH2 0x120A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xA6 SWAP4 SWAP14 MUL 0x4E 0xB5 CHAINID EXP 0x4E PUSH28 0x4B64D6CE496D74828093EE59E77429E4A6CB26454A64736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "2592:28:3:-:0;421:29428;2592:28;-1:-1:-1;421:29428:3;2592:28;;;;;;;;;:::i;:::-;;3230:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;3297:5:3;:13;3305:5;3297;:13;:::i;:::-;-1:-1:-1;3321:7:3;:17;3331:7;3321;:17;:::i;:::-;-1:-1:-1;;3484:1:3;3349:31;;-1:-1:-1;421:29428:3;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:127:4:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:4;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:4;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:4;;;2580:26;2531:89;-1:-1:-1;;1335:1:4;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:4;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:4;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:4;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:4:o;2735:840::-;2789:5;2842:3;2835:4;2827:6;2823:17;2819:27;2809:55;;2860:1;2857;2850:12;2809:55;2883:13;;-1:-1:-1;;;;;2945:10:4;;;2942:36;;;2958:18;;:::i;:::-;3033:2;3027:9;3001:2;3087:13;;-1:-1:-1;;3083:22:4;;;3107:2;3079:31;3075:40;3063:53;;;3131:18;;;3151:22;;;3128:46;3125:72;;;3177:18;;:::i;:::-;3217:10;3213:2;3206:22;3252:2;3244:6;3237:18;3274:4;3264:14;;3319:3;3314:2;3309;3301:6;3297:15;3293:24;3290:33;3287:53;;;3336:1;3333;3326:12;3287:53;3358:1;3349:10;;3368:133;3382:2;3379:1;3376:9;3368:133;;;3470:14;;;3466:23;;3460:30;3439:14;;;3435:23;;3428:63;3393:10;;;;3368:133;;;3543:1;3521:15;;;3517:24;;;3510:35;;;;3525:6;2735:840;-1:-1:-1;;;;2735:840:4:o;3580:562::-;3679:6;3687;3740:2;3728:9;3719:7;3715:23;3711:32;3708:52;;;3756:1;3753;3746:12;3708:52;3783:16;;-1:-1:-1;;;;;3848:14:4;;;3845:34;;;3875:1;3872;3865:12;3845:34;3898:61;3951:7;3942:6;3931:9;3927:22;3898:61;:::i;:::-;3888:71;;4005:2;3994:9;3990:18;3984:25;3968:41;;4034:2;4024:8;4021:16;4018:36;;;4050:1;4047;4040:12;4018:36;;4073:63;4128:7;4117:8;4106:9;4102:24;4073:63;:::i;:::-;4063:73;;;3580:562;;;;;:::o;:::-;421:29428:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1494": {
									"entryPoint": null,
									"id": 1494,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1929": {
									"entryPoint": 3159,
									"id": 1929,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_728": {
									"entryPoint": 3906,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1482": {
									"entryPoint": null,
									"id": 1482,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1940": {
									"entryPoint": 3989,
									"id": 1940,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_2093": {
									"entryPoint": 4105,
									"id": 2093,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1549": {
									"entryPoint": 3679,
									"id": 1549,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 3322,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_1209": {
									"entryPoint": 3071,
									"id": 1209,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2150": {
									"entryPoint": null,
									"id": 2150,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1240": {
									"entryPoint": null,
									"id": 1240,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1222": {
									"entryPoint": null,
									"id": 1222,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1667": {
									"entryPoint": 4427,
									"id": 1667,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2191": {
									"entryPoint": null,
									"id": 2191,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2182": {
									"entryPoint": null,
									"id": 2182,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1086": {
									"entryPoint": null,
									"id": 1086,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1077": {
									"entryPoint": null,
									"id": 1077,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1013": {
									"entryPoint": 3412,
									"id": 1013,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_2209": {
									"entryPoint": 3149,
									"id": 2209,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_1851": {
									"entryPoint": 4000,
									"id": 1851,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_1866": {
									"entryPoint": 3573,
									"id": 1866,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_477": {
									"entryPoint": null,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2201": {
									"entryPoint": 3921,
									"id": 2201,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3599,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_1101": {
									"entryPoint": 1556,
									"id": 1101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_548": {
									"entryPoint": 2279,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseURI__409": {
									"entryPoint": 2940,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkredeemednftid_854": {
									"entryPoint": 2601,
									"id": 854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkredemmedphysicalitem_841": {
									"entryPoint": null,
									"id": 841,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getApproved_1125": {
									"entryPoint": 1497,
									"id": 1125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1167": {
									"entryPoint": null,
									"id": 1167,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_789": {
									"entryPoint": 1959,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_665": {
									"entryPoint": 1351,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_873": {
									"entryPoint": 2268,
									"id": 873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redeemPhysicalItem_825": {
									"entryPoint": 2835,
									"id": 825,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2349,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1431": {
									"entryPoint": 2074,
									"id": 1431,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1470": {
									"entryPoint": 2536,
									"id": 1470,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1150": {
									"entryPoint": 2384,
									"id": 1150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_740": {
									"entryPoint": 2248,
									"id": 740,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUriSuffix_752": {
									"entryPoint": 1572,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setapprovedcontractaddress_766": {
									"entryPoint": 2492,
									"id": 766,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_656": {
									"entryPoint": 1269,
									"id": 656,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_674": {
									"entryPoint": 2369,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_719": {
									"entryPoint": 2709,
									"id": 719,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_500": {
									"entryPoint": null,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1412": {
									"entryPoint": 1592,
									"id": 1412,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2953,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uriSuffix_412": {
									"entryPoint": 2106,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12253:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:4",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:4",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:4"
															},
															"nodeType": "YulIf",
															"src": "68:71:4"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:4",
														"type": ""
													}
												],
												"src": "14:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:4"
															},
															"nodeType": "YulIf",
															"src": "229:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:4",
														"type": ""
													}
												],
												"src": "150:245:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:4",
														"type": ""
													}
												],
												"src": "400:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:4",
																"statements": []
															},
															"src": "687:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:4",
														"type": ""
													}
												],
												"src": "592:250:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:4",
														"type": ""
													}
												],
												"src": "847:271:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:4",
														"type": ""
													}
												],
												"src": "1123:220:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:4"
															},
															"nodeType": "YulIf",
															"src": "1428:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:4",
														"type": ""
													}
												],
												"src": "1348:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:4",
														"type": ""
													}
												],
												"src": "1533:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:4"
															},
															"nodeType": "YulIf",
															"src": "1838:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:4",
														"type": ""
													}
												],
												"src": "1741:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:4"
															},
															"nodeType": "YulIf",
															"src": "2016:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:4",
														"type": ""
													}
												],
												"src": "1919:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2210:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2227:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2234:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2239:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2230:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2230:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2260:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2260:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2260:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2178:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2385:557:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2395:28:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2405:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2399:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2450:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2452:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2452:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2452:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2438:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2446:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2435:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:14:4"
															},
															"nodeType": "YulIf",
															"src": "2432:40:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2481:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:7:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2485:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2507:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2511:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2539:73:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2561:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "2585:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2593:2:4",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2581:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2581:15:4"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "2598:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2577:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2577:24:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2603:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2573:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2573:33:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2608:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:42:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2557:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:55:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2543:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2671:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2673:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2673:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2673:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2630:10:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2642:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2627:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2650:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2647:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2647:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2624:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:46:4"
															},
															"nodeType": "YulIf",
															"src": "2621:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2713:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:22:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2733:15:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2742:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2733:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2764:6:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2772:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2757:22:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2817:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2826:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2819:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2819:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2819:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2798:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2794:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2812:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2791:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:25:4"
															},
															"nodeType": "YulIf",
															"src": "2788:45:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2859:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2867:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:17:4"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2879:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2842:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:44:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2842:44:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2910:6:4"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2918:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2906:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2906:19:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2927:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2902:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2902:30:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2895:41:4"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2354:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2359:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2367:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2375:5:4",
														"type": ""
													}
												],
												"src": "2310:632:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3027:371:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3073:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3075:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3075:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3075:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3048:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3057:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:32:4"
															},
															"nodeType": "YulIf",
															"src": "3037:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3098:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3125:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3112:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:23:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3102:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3178:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3187:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3190:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3180:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3180:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3150:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3158:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3147:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:30:4"
															},
															"nodeType": "YulIf",
															"src": "3144:50:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3203:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3217:9:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3228:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3213:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:22:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3207:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3283:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3292:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3295:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3285:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3285:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3285:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3262:2:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3266:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3258:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3258:13:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3273:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3254:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3254:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3247:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3247:35:4"
															},
															"nodeType": "YulIf",
															"src": "3244:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3308:84:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3357:2:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3361:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:11:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3379:2:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3366:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3366:16:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3384:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "3318:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:74:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2993:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3004:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3016:6:4",
														"type": ""
													}
												],
												"src": "2947:451:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3504:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3514:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3526:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3537:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3522:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3514:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3556:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3567:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3549:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3549:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3473:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3484:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3495:4:4",
														"type": ""
													}
												],
												"src": "3403:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3689:224:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3735:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3744:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3747:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3737:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3737:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3710:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3719:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3706:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3706:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3731:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3702:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3702:32:4"
															},
															"nodeType": "YulIf",
															"src": "3699:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3760:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3789:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3770:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3760:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3808:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3841:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3852:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3837:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3818:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3808:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3865:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3892:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3903:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3888:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3888:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3875:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3865:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3639:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3650:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3662:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3670:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3678:6:4",
														"type": ""
													}
												],
												"src": "3585:328:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3988:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4043:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4046:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4036:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4009:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4018:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4030:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:4"
															},
															"nodeType": "YulIf",
															"src": "3998:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4059:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4088:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4069:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3954:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3965:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3977:6:4",
														"type": ""
													}
												],
												"src": "3918:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4196:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4242:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4251:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4254:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4244:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4244:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4244:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4217:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4226:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4238:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:32:4"
															},
															"nodeType": "YulIf",
															"src": "4206:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4267:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4290:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4277:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4309:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4353:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4338:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4319:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4154:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4165:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4177:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4185:6:4",
														"type": ""
													}
												],
												"src": "4109:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4498:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4507:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4500:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4500:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4500:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4473:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4482:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4469:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4469:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4465:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:32:4"
															},
															"nodeType": "YulIf",
															"src": "4462:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4523:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4552:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4533:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4523:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4571:45:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4612:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4597:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4584:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:32:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4575:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4669:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4678:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4681:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4671:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4671:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4671:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4638:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4659:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4652:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4652:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4645:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4645:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4635:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4635:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:40:4"
															},
															"nodeType": "YulIf",
															"src": "4625:60:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4694:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4704:5:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4694:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4410:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4421:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4433:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4441:6:4",
														"type": ""
													}
												],
												"src": "4368:347:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:537:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4897:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4906:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4909:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4899:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4899:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4899:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4871:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4867:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4867:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:33:4"
															},
															"nodeType": "YulIf",
															"src": "4860:53:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4922:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4951:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4932:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4970:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5014:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4980:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5065:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5050:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5037:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5027:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5078:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5120:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5092:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:32:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5082:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5167:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5176:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5179:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5169:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5169:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5139:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5147:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5136:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:30:4"
															},
															"nodeType": "YulIf",
															"src": "5133:50:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5192:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5206:9:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5217:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5202:22:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5196:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5272:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5281:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5284:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5274:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5274:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5274:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5251:2:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5255:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5247:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5247:13:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5262:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5243:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:35:4"
															},
															"nodeType": "YulIf",
															"src": "5233:55:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5297:84:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5346:2:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5350:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5342:11:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5368:2:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5355:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:16:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5373:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "5307:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:74:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5297:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4792:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4803:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4815:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4823:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4831:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4839:6:4",
														"type": ""
													}
												],
												"src": "4720:667:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5543:481:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5553:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5563:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5557:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5574:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5592:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5603:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5588:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:18:4"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5578:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5622:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5633:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5645:17:4",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5656:6:4"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5649:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5671:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5691:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5685:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5675:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5714:6:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5722:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5707:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5707:22:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5738:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5749:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5760:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5745:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:18:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5772:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5790:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5798:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5786:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5786:15:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5776:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5810:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5819:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5814:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5878:120:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5899:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "5910:6:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5904:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5904:13:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5892:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5892:26:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5892:26:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5931:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5942:3:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5947:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5938:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5938:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5963:25:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5977:6:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5985:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5973:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5973:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5963:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5840:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5843:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5837:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5851:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5853:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5862:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5865:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5858:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5853:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5833:3:4",
																"statements": []
															},
															"src": "5829:169:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6007:11:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6015:3:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6007:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5512:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5523:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5534:4:4",
														"type": ""
													}
												],
												"src": "5392:632:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6116:173:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6162:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6171:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6174:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6164:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6164:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6164:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6137:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6133:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6133:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6129:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6129:32:4"
															},
															"nodeType": "YulIf",
															"src": "6126:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6187:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6216:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6197:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6235:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6268:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6279:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6264:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6264:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6245:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6245:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6235:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6074:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6085:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6097:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6105:6:4",
														"type": ""
													}
												],
												"src": "6029:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6349:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6359:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6376:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6369:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6359:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6390:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6420:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6426:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6416:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6394:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6467:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6469:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6483:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6491:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6479:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6479:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6469:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6447:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6440:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:26:4"
															},
															"nodeType": "YulIf",
															"src": "6437:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6557:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6578:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6585:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6590:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6581:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6581:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6571:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6571:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6571:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6622:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6625:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6615:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6615:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6615:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6650:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6653:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6643:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6643:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6643:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6513:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6536:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6533:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6533:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6510:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6510:38:4"
															},
															"nodeType": "YulIf",
															"src": "6507:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6329:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6338:6:4",
														"type": ""
													}
												],
												"src": "6294:380:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6735:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6752:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6755:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6745:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6745:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6768:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6786:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "6776:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6776:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6768:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6718:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6726:4:4",
														"type": ""
													}
												],
												"src": "6679:121:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6886:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6919:425:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6933:11:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6943:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6937:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6964:2:4"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6968:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6957:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6957:17:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6957:17:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6987:31:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7009:2:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7013:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6999:19:4"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "6991:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7031:57:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "7054:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7064:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "7071:10:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7083:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7067:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7067:19:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "7060:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7060:27:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7050:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7050:38:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "7035:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7125:23:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7127:19:4",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "7142:4:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "7127:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "7107:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7119:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7104:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7104:20:4"
																		},
																		"nodeType": "YulIf",
																		"src": "7101:47:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7161:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "7175:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7185:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "7192:3:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7197:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7188:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7188:12:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "7181:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7181:20:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7171:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7171:31:4"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "7165:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7215:24:4",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "7228:11:4"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "7219:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7313:21:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "7322:5:4"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "7329:2:4"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "7315:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7315:17:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7315:17:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "7263:5:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "7270:2:4"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7260:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7260:13:4"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "7274:26:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7276:22:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "7289:5:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7296:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7285:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7285:13:4"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "7276:5:4"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "7256:3:4",
																			"statements": []
																		},
																		"src": "7252:82:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6902:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6907:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6899:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:11:4"
															},
															"nodeType": "YulIf",
															"src": "6896:448:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6858:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6865:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6870:10:4",
														"type": ""
													}
												],
												"src": "6805:545:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7440:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7450:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7465:4:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7483:1:4",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "7486:3:4"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7479:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7479:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7496:1:4",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "7492:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7492:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7475:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7475:24:4"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7471:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7471:29:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7461:40:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7507:1:4",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7510:3:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7503:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7503:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7458:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7458:57:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7450:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7417:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7423:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7431:4:4",
														"type": ""
													}
												],
												"src": "7355:166:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7622:1256:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7632:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7652:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7646:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7646:10:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7636:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7699:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7701:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7701:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7701:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7671:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7668:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7668:30:4"
															},
															"nodeType": "YulIf",
															"src": "7665:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "7812:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "7806:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7806:11:4"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "7780:25:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7780:38:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7730:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:97:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7730:97:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7836:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7853:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7840:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7863:23:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7882:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "7867:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7895:24:4",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "7908:11:4"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7895:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7965:656:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7979:35:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7998:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8010:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8006:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8006:7:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7994:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7994:20:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7983:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8027:49:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8071:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8041:29:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8041:35:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8031:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8089:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8098:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8093:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8176:172:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8201:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8219:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8224:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8215:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8215:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8209:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8209:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8194:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8194:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8194:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8253:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8267:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8275:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8263:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8263:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8253:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8294:40:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8311:9:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "8322:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8307:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8307:27:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8294:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8123:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8126:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8120:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8120:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8135:28:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8137:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8146:1:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "8149:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8142:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8142:19:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8137:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8116:3:4",
																					"statements": []
																				},
																				"src": "8112:236:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8396:166:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8414:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8441:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8446:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8437:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8437:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8431:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8431:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8418:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8481:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8493:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "8520:1:4",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "8523:6:4"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "8516:3:4"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "8516:14:4"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "8532:3:4",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "8512:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "8512:24:4"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "8542:1:4",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "8538:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "8538:6:4"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "8508:3:4"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "8508:37:4"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "8504:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8504:42:4"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "8489:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8489:58:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8474:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8474:74:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8474:74:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8367:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8376:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8364:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8364:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "8361:201:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8582:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8596:1:4",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8599:6:4"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8592:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8592:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8608:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8588:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8588:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8575:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8575:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8575:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7958:663:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8638:234:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8652:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8656:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8701:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8719:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8738:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8743:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8734:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8734:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8728:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8728:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8719:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8682:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "8679:89:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8788:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8847:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8854:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8794:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8794:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8781:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8781:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8781:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8630:242:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7938:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7935:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7935:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "7928:944:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7607:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7613:3:4",
														"type": ""
													}
												],
												"src": "7526:1352:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:179:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9074:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9085:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9108:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9119:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9104:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9104:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9124:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9097:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9097:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9097:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9147:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9158:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9143:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9143:18:4"
																	},
																	{
																		"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9163:31:4",
																		"type": "",
																		"value": "you are not approved  to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9136:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:59:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9136:59:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9204:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9216:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9227:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9212:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9204:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9034:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9048:4:4",
														"type": ""
													}
												],
												"src": "8883:353:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9473:1024:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9483:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9503:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9497:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9497:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9487:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9519:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9529:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9523:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9581:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9589:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9577:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9577:15:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9594:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9599:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9542:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:64:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9542:64:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9615:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9632:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9637:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9628:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9628:16:4"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "9619:5:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9653:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9675:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9669:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9669:13:4"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "9657:8:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9730:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9738:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9726:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9726:15:4"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "9743:5:4"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "9750:8:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9691:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9691:68:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9691:68:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9768:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "9785:5:4"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "9792:8:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9781:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:20:4"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "9772:5:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9810:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9821:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "9814:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9831:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9854:6:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "9848:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:13:4"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "9835:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9870:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "9912:9:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "9886:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9886:36:4"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nodeType": "YulTypedName",
																	"src": "9874:8:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9931:11:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9941:1:4",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "9935:2:4",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9992:134:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "10013:5:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "10024:9:4"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10039:3:4",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "10035:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10035:8:4"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "10020:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10020:24:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "10006:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10006:39:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10006:39:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10058:58:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "10069:5:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length_2",
																									"nodeType": "YulIdentifier",
																									"src": "10080:8:4"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length_2",
																													"nodeType": "YulIdentifier",
																													"src": "10104:8:4"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "10097:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "10097:16:4"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "10090:6:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10090:24:4"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "10076:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10076:39:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10065:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10065:51:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "10058:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9985:141:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9990:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10142:330:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10163:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value2",
																							"nodeType": "YulIdentifier",
																							"src": "10166:6:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "10156:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10156:17:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10156:17:4"
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10186:31:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10211:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "10214:2:4"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "10201:9:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10201:16:4"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "10190:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10230:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10239:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10234:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10309:113:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "end_2",
																												"nodeType": "YulIdentifier",
																												"src": "10338:5:4"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "10345:1:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10334:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10334:13:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "10355:7:4"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "10349:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10349:14:4"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "10327:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10327:37:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10327:37:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10381:27:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "10396:7:4"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "10405:2:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10392:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10392:16:4"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "10381:7:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10264:1:4"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "10267:8:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10261:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10261:15:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10277:19:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10279:15:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10288:1:4"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "10291:2:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10284:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10284:10:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10279:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10257:3:4",
																					"statements": []
																				},
																				"src": "10253:169:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10435:27:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "10446:5:4"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "10453:8:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10442:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10442:20:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "10435:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10135:337:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10140:1:4",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "9962:9:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9973:2:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9958:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:18:4"
															},
															"nodeType": "YulSwitch",
															"src": "9951:521:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10481:10:4",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "10488:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10481:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9433:3:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9438:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9446:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9454:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9465:3:4",
														"type": ""
													}
												],
												"src": "9241:1256:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10676:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10693:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10704:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10686:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10686:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10727:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10738:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10723:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10743:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10716:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10716:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10716:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10766:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10777:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10762:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10782:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10755:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10755:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10755:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10837:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10848:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10833:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10833:18:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10853:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10826:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10826:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10826:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10871:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10883:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10894:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10879:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10879:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10871:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10653:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10667:4:4",
														"type": ""
													}
												],
												"src": "10502:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10956:186:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10991:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11012:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11019:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11024:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11015:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11015:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11005:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11005:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11005:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11056:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11059:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11049:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11049:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11049:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11084:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11087:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11077:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11077:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11077:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10976:5:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10969:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10969:13:4"
															},
															"nodeType": "YulIf",
															"src": "10966:136:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11111:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11122:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11133:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11129:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11118:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11118:18:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10938:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10948:3:4",
														"type": ""
													}
												],
												"src": "10909:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11321:182:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11338:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11349:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11331:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11331:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11372:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11383:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11368:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11368:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11388:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11361:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11361:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11361:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11411:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11422:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11407:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11407:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11427:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11400:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11400:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11400:62:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11471:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11483:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11494:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11479:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11479:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11471:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11298:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11312:4:4",
														"type": ""
													}
												],
												"src": "11147:356:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11711:286:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11721:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11739:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11744:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11735:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11735:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11748:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11731:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11725:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11766:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11781:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11789:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11777:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11777:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11759:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11759:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11759:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11813:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11824:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11809:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11809:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11833:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11841:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11829:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11829:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11802:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11802:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11802:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11865:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11876:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11861:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11861:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11881:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11854:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11854:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11854:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11908:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11919:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11904:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11904:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11924:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11897:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11897:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11937:54:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11963:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11975:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11986:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11971:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11971:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11945:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11945:46:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11937:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11656:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11667:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11675:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11683:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11691:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11702:4:4",
														"type": ""
													}
												],
												"src": "11508:489:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12082:169:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12128:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12137:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12140:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12130:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12130:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12130:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12103:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12112:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12099:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12099:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12124:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12095:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12095:32:4"
															},
															"nodeType": "YulIf",
															"src": "12092:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12153:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12172:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12166:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12166:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12157:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12215:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "12191:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12191:30:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12230:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12240:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12230:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12048:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12059:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12071:6:4",
														"type": ""
													}
												],
												"src": "12002:249:4"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"you are not approved  to mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory_with_cleanup(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, _1), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        let ret := 0\n        let slotValue := sload(value2)\n        let length_2 := extract_byte_array_length(slotValue)\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(end_2, and(slotValue, not(255)))\n            ret := add(end_2, mul(length_2, iszero(iszero(length_2))))\n        }\n        case 1 {\n            mstore(0, value2)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length_2) { i := add(i, _1) }\n            {\n                mstore(add(end_2, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_2, length_2)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101815760003560e01c8063715018a6116100d1578063b88d4fde1161008a578063dc76668d11610064578063dc76668d14610457578063e985e9c514610477578063f259a29e146104c0578063f2fde38b146104d557600080fd5b8063b88d4fde146103f7578063bf1e5e9e1461040a578063c87b56dd1461043757600080fd5b8063715018a61461032c5780638370d004146103415780638da5cb5b1461038457806395d89b41146103a2578063a22cb465146103b7578063b6b285d9146103d757600080fd5b806323b872dd1161013e5780635503a0e8116101185780635503a0e8146102b757806355f804b3146102cc5780636352211e146102ec57806370a082311461030c57600080fd5b806323b872dd1461027157806340c10f191461028457806342842e0e146102a457600080fd5b806301ffc9a71461018657806306fdde03146101bb578063081812fc146101dd578063095ea7b31461021557806316ba10e01461022a57806318160ddd1461024a575b600080fd5b34801561019257600080fd5b506101a66101a1366004611220565b6104f5565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d0610547565b6040516101b2919061128d565b3480156101e957600080fd5b506101fd6101f83660046112a0565b6105d9565b6040516001600160a01b0390911681526020016101b2565b6102286102233660046112d0565b610614565b005b34801561023657600080fd5b50610228610245366004611386565b610624565b34801561025657600080fd5b5060025460015403600019015b6040519081526020016101b2565b61022861027f3660046113cf565b610638565b34801561029057600080fd5b5061022861029f3660046112d0565b6107a7565b6102286102b23660046113cf565b61081a565b3480156102c357600080fd5b506101d061083a565b3480156102d857600080fd5b506102286102e7366004611386565b6108c8565b3480156102f857600080fd5b506101fd6103073660046112a0565b6108dc565b34801561031857600080fd5b5061026361032736600461140b565b6108e7565b34801561033857600080fd5b5061022861092d565b34801561034d57600080fd5b506101a661035c366004611426565b6001600160a01b03166000908152600a60209081526040808320938352929052205460ff1690565b34801561039057600080fd5b506000546001600160a01b03166101fd565b3480156103ae57600080fd5b506101d0610941565b3480156103c357600080fd5b506102286103d2366004611452565b610950565b3480156103e357600080fd5b506102286103f236600461140b565b6109bc565b61022861040536600461148e565b6109e8565b34801561041657600080fd5b5061042a61042536600461140b565b610a29565b6040516101b2919061150a565b34801561044357600080fd5b506101d06104523660046112a0565b610a95565b34801561046357600080fd5b506102286104723660046112a0565b610b13565b34801561048357600080fd5b506101a661049236600461154e565b6001600160a01b039182166000908152600e6020908152604080832093909416825291909152205460ff1690565b3480156104cc57600080fd5b506101d0610b7c565b3480156104e157600080fd5b506102286104f036600461140b565b610b89565b60006301ffc9a760e01b6001600160e01b03198316148061052657506380ac58cd60e01b6001600160e01b03198316145b806105415750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606003805461055690611578565b80601f016020809104026020016040519081016040528092919081815260200182805461058290611578565b80156105cf5780601f106105a4576101008083540402835291602001916105cf565b820191906000526020600020905b8154815290600101906020018083116105b257829003601f168201915b5050505050905090565b60006105e482610bff565b6105f8576105f86333d1c03960e21b610c4d565b506000908152600d60205260409020546001600160a01b031690565b61062082826001610c57565b5050565b61062c610cfa565b60066106208282611600565b600061064382610d54565b6001600160a01b0394851694909150811684146106695761066962a1148160e81b610c4d565b6000828152600d6020526040902080546106958187335b6001600160a01b039081169116811491141790565b6106b7576106a38633610492565b6106b7576106b7632ce44b5f60e11b610c4d565b80156106c257600082555b6001600160a01b038681166000908152600c60205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b176000858152600b6020526040812091909155600160e11b8416900361075457600184016000818152600b60205260408120549003610752576001548114610752576000818152600b602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361079e5761079e633a954ecd60e21b610c4d565b50505050505050565b3360009081526009602052604090205460ff1615156001146108105760405162461bcd60e51b815260206004820152601d60248201527f796f7520617265206e6f7420617070726f7665642020746f206d696e7400000060448201526064015b60405180910390fd5b6106208282610df5565b610835838383604051806020016040528060008152506109e8565b505050565b6006805461084790611578565b80601f016020809104026020016040519081016040528092919081815260200182805461087390611578565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b505050505081565b6108d0610cfa565b60056106208282611600565b600061054182610d54565b60006001600160a01b038216610907576109076323d3ad8160e21b610c4d565b506001600160a01b03166000908152600c602052604090205467ffffffffffffffff1690565b610935610cfa565b61093f6000610e0f565b565b60606004805461055690611578565b336000818152600e602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109c4610cfa565b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b6109f3848484610638565b6001600160a01b0383163b15610a2357610a0f84848484610e5f565b610a2357610a236368d2bf6b60e11b610c4d565b50505050565b6001600160a01b038116600090815260076020908152604091829020805483518184028101840190945280845260609392830182828015610a8957602002820191906000526020600020905b815481526020019060010190808311610a75575b50505050509050919050565b6060610aa082610bff565b610ab457610ab4630a14c4b560e41b610c4d565b6000610abe610f42565b90508051600003610ade5760405180602001604052806000815250610b0c565b80610ae884610f51565b6006604051602001610afc939291906116c0565b6040516020818303038152906040525b9392505050565b33610b1d826108dc565b6001600160a01b031614610b3057600080fd5b336000818152600a602090815260408083208584528252808320805460ff19166001908117909155938352600782528220805493840181558252902001819055610b7981610f95565b50565b6005805461084790611578565b610b91610cfa565b6001600160a01b038116610bf65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610807565b610b7981610e0f565b600081600111610c4857600154821015610c485760005b506000828152600b602052604081205490819003610c3e57610c3783611760565b9250610c16565b600160e01b161590505b919050565b8060005260046000fd5b6000610c62836108dc565b9050818015610c7a5750336001600160a01b03821614155b15610c9d57610c898133610492565b610c9d57610c9d6367d9dca160e11b610c4d565b6000838152600d602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b6000546001600160a01b0316331461093f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610807565b600081600111610de557506000818152600b602052604081205490819003610dd2576001548210610d8f57610d8f636f96cda160e11b610c4d565b5b50600019016000818152600b60205260409020548015610d9057600160e01b8116600003610dbd57919050565b610dcd636f96cda160e11b610c4d565b610d90565b600160e01b8116600003610de557919050565b610c48636f96cda160e11b610c4d565b610620828260405180602001604052806000815250610fa0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610e94903390899088908890600401611785565b6020604051808303816000875af1925050508015610ecf575060408051601f3d908101601f19168201909252610ecc918101906117c2565b60015b610f24573d808015610efd576040519150601f19603f3d011682016040523d82523d6000602084013e610f02565b606091505b508051600003610f1c57610f1c6368d2bf6b60e11b610c4d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60606005805461055690611578565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610f6b5750819003601f19909101908152919050565b610b79816000611009565b610faa838361114b565b6001600160a01b0383163b15610835576001548281035b610fd46000868380600101945086610e5f565b610fe857610fe86368d2bf6b60e11b610c4d565b818110610fc1578160015414611002576110026000610c4d565b5050505050565b600061101483610d54565b905080600080611032866000908152600d6020526040902080549091565b91509150841561106957611047818433610680565b611069576110558333610492565b61106957611069632ce44b5f60e11b610c4d565b801561107457600082555b6001600160a01b0383166000818152600c6020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b176000878152600b6020526040812091909155600160e11b8516900361110257600186016000818152600b60205260408120549003611100576001548114611100576000818152600b602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060028054600101905550505050565b60015460008290036111675761116763b562e8dd60e01b610c4d565b6000818152600b602090815260408083206001600160a01b0387164260a01b6001881460e11b178117909155808452600c90925282208054680100000000000000018602019055908190036111c5576111c5622e076360e81b610c4d565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081036111ca575060015550505050565b6001600160e01b031981168114610b7957600080fd5b60006020828403121561123257600080fd5b8135610b0c8161120a565b60005b83811015611258578181015183820152602001611240565b50506000910152565b6000815180845261127981602086016020860161123d565b601f01601f19169290920160200192915050565b602081526000610b0c6020830184611261565b6000602082840312156112b257600080fd5b5035919050565b80356001600160a01b0381168114610c4857600080fd5b600080604083850312156112e357600080fd5b6112ec836112b9565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561132b5761132b6112fa565b604051601f8501601f19908116603f01168101908282118183101715611353576113536112fa565b8160405280935085815286868601111561136c57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561139857600080fd5b813567ffffffffffffffff8111156113af57600080fd5b8201601f810184136113c057600080fd5b610f3a84823560208401611310565b6000806000606084860312156113e457600080fd5b6113ed846112b9565b92506113fb602085016112b9565b9150604084013590509250925092565b60006020828403121561141d57600080fd5b610b0c826112b9565b6000806040838503121561143957600080fd5b82359150611449602084016112b9565b90509250929050565b6000806040838503121561146557600080fd5b61146e836112b9565b91506020830135801515811461148357600080fd5b809150509250929050565b600080600080608085870312156114a457600080fd5b6114ad856112b9565b93506114bb602086016112b9565b925060408501359150606085013567ffffffffffffffff8111156114de57600080fd5b8501601f810187136114ef57600080fd5b6114fe87823560208401611310565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b8181101561154257835183529284019291840191600101611526565b50909695505050505050565b6000806040838503121561156157600080fd5b61156a836112b9565b9150611449602084016112b9565b600181811c9082168061158c57607f821691505b6020821081036115ac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561083557600081815260208120601f850160051c810160208610156115d95750805b601f850160051c820191505b818110156115f8578281556001016115e5565b505050505050565b815167ffffffffffffffff81111561161a5761161a6112fa565b61162e816116288454611578565b846115b2565b602080601f831160018114611663576000841561164b5750858301515b600019600386901b1c1916600185901b1785556115f8565b600085815260208120601f198616915b8281101561169257888601518255948401946001909101908401611673565b50858210156116b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000845160206116d38285838a0161123d565b8551918401916116e68184848a0161123d565b85549201916000906116f781611578565b6001828116801561170f576001811461172457611750565b60ff1984168752821515830287019450611750565b896000528560002060005b848110156117485781548982015290830190870161172f565b505082870194505b50929a9950505050505050505050565b60008161177d57634e487b7160e01b600052601160045260246000fd5b506000190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117b890830184611261565b9695505050505050565b6000602082840312156117d457600080fd5b8151610b0c8161120a56fea2646970667358221220b8a6939d024eb5460a4e7b4b64d6ce496d74828093ee59e77429e4a6cb26454a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDC76668D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDC76668D EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xF259A29E EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xBF1E5E9E EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8370D004 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xB6B285D9 EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5503A0E8 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5503A0E8 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x16BA10E0 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CF JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x92D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x228 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0xB7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x526 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x541 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x582 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E4 DUP3 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x5F8 JUMPI PUSH2 0x5F8 PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62C PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x6 PUSH2 0x620 DUP3 DUP3 PUSH2 0x1600 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x643 DUP3 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x669 JUMPI PUSH2 0x669 PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x695 DUP2 DUP8 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x6B7 JUMPI PUSH2 0x6A3 DUP7 CALLER PUSH2 0x492 JUMP JUMPDEST PUSH2 0x6B7 JUMPI PUSH2 0x6B7 PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x754 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x752 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x752 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x79E JUMPI PUSH2 0x79E PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0xC4D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206D696E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x835 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x847 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x873 SWAP1 PUSH2 0x1578 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x895 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x5 PUSH2 0x620 DUP3 DUP3 PUSH2 0x1600 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x541 DUP3 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x907 JUMPI PUSH2 0x907 PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0xC4D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x935 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x93F PUSH1 0x0 PUSH2 0xE0F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1578 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9F3 DUP5 DUP5 DUP5 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA23 JUMPI PUSH2 0xA0F DUP5 DUP5 DUP5 DUP5 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xA23 JUMPI PUSH2 0xA23 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA75 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAA0 DUP3 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABE PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH2 0xAE8 DUP5 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH2 0xB1D DUP3 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH2 0xB79 DUP2 PUSH2 0xF95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x847 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0xB91 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT PUSH2 0xC48 JUMPI PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xC3E JUMPI PUSH2 0xC37 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP3 POP PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC62 DUP4 PUSH2 0x8DC JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC7A JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC9D JUMPI PUSH2 0xC89 DUP2 CALLER PUSH2 0x492 JUMP JUMPDEST PUSH2 0xC9D JUMPI PUSH2 0xC9D PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT PUSH2 0xDE5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD2 JUMPI PUSH1 0x1 SLOAD DUP3 LT PUSH2 0xD8F JUMPI PUSH2 0xD8F PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST JUMPDEST POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD90 JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH1 0x0 SUB PUSH2 0xDBD JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH1 0x0 SUB PUSH2 0xDE5 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC48 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xE94 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xECF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xECC SWAP2 DUP2 ADD SWAP1 PUSH2 0x17C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF24 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF1C JUMPI PUSH2 0xF1C PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xF6B JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH1 0x0 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0xFAA DUP4 DUP4 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x835 JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0xFD4 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xE5F JUMP JUMPDEST PUSH2 0xFE8 JUMPI PUSH2 0xFE8 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xFC1 JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1002 JUMPI PUSH2 0x1002 PUSH1 0x0 PUSH2 0xC4D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1014 DUP4 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x1032 DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1047 DUP2 DUP5 CALLER PUSH2 0x680 JUMP JUMPDEST PUSH2 0x1069 JUMPI PUSH2 0x1055 DUP4 CALLER PUSH2 0x492 JUMP JUMPDEST PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0xC4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1074 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x3 PUSH1 0xE0 SHL OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP6 AND SWAP1 SUB PUSH2 0x1102 JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1100 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1100 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP3 SWAP1 SUB PUSH2 0x1167 JUMPI PUSH2 0x1167 PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0xC4D JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x11CA JUMPI POP PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB0C DUP2 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1258 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1240 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1279 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x123D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EC DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x132B JUMPI PUSH2 0x132B PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x12FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x136C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3A DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13ED DUP5 PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x13FB PUSH1 0x20 DUP6 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0C DUP3 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1449 PUSH1 0x20 DUP5 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146E DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14AD DUP6 PUSH2 0x12B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x14BB PUSH1 0x20 DUP7 ADD PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14FE DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1542 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1526 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156A DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1449 PUSH1 0x20 DUP5 ADD PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x158C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x15D9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15F8 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15E5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x161A JUMPI PUSH2 0x161A PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x162E DUP2 PUSH2 0x1628 DUP5 SLOAD PUSH2 0x1578 JUMP JUMPDEST DUP5 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1663 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x164B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1692 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1673 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x16B0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x16D3 DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x123D JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x16E6 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x123D JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x16F7 DUP2 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x170F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1724 JUMPI PUSH2 0x1750 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1750 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1748 JUMPI DUP2 SLOAD DUP10 DUP3 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP8 ADD PUSH2 0x172F JUMP JUMPDEST POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x177D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x17B8 SWAP1 DUP4 ADD DUP5 PUSH2 0x1261 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB0C DUP2 PUSH2 0x120A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xA6 SWAP4 SWAP14 MUL 0x4E 0xB5 CHAINID EXP 0x4E PUSH28 0x4B64D6CE496D74828093EE59E77429E4A6CB26454A64736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "421:29428:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5547:362;;;;;;;;;;-1:-1:-1;5547:362:3;;;;;:::i;:::-;;:::i;:::-;;;565:14:4;;558:22;540:41;;528:2;513:18;5547:362:3;;;;;;;;5922:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;11471:227::-;;;;;;;;;;-1:-1:-1;11471:227:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:4;;;1679:51;;1667:2;1652:18;11471:227:3;1533:203:4;11333:124:3;;;;;;:::i;:::-;;:::i;:::-;;6987:108;;;;;;;;;;-1:-1:-1;6987:108:3;;;;;:::i;:::-;;:::i;3622:323::-;;;;;;;;;;-1:-1:-1;3896:12:3;;3484:1;3880:13;:28;-1:-1:-1;;3880:46:3;3622:323;;;3549:25:4;;;3537:2;3522:18;3622:323:3;3403:177:4;13687:3058:3;;;;;;:::i;:::-;;:::i;7257:238::-;;;;;;;;;;-1:-1:-1;7257:238:3;;;;;:::i;:::-;;:::i;16841:193::-;;;;;;:::i;:::-;;:::i;2592:28::-;;;;;;;;;;;;;:::i;6869:105::-;;;;;;;;;;-1:-1:-1;6869:105:3;;;;;:::i;:::-;;:::i;8057:152::-;;;;;;;;;;-1:-1:-1;8057:152:3;;;;;:::i;:::-;;:::i;4339:242::-;;;;;;;;;;-1:-1:-1;4339:242:3;;;;;:::i;:::-;;:::i;1824:101:0:-;;;;;;;;;;;;;:::i;7760:150:3:-;;;;;;;;;;-1:-1:-1;7760:150:3;;;;;:::i;:::-;-1:-1:-1;;;;;7864:31:3;7840:4;7864:31;;;:26;:31;;;;;;;;:38;;;;;;;;;;;7760:150;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;6036:104:3;;;;;;;;;;;;;:::i;11711:234::-;;;;;;;;;;-1:-1:-1;11711:234:3;;;;;:::i;:::-;;:::i;7103:141::-;;;;;;;;;;-1:-1:-1;7103:141:3;;;;;:::i;:::-;;:::i;17048:416::-;;;;;;:::i;:::-;;:::i;7930:116::-;;;;;;;;;;-1:-1:-1;7930:116:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6154:337::-;;;;;;;;;;-1:-1:-1;6154:337:3;;;;;:::i;:::-;;:::i;7509:243::-;;;;;;;;;;-1:-1:-1;7509:243:3;;;;;:::i;:::-;;:::i;11958:164::-;;;;;;;;;;-1:-1:-1;11958:164:3;;;;;:::i;:::-;-1:-1:-1;;;;;12079:25:3;;;12055:4;12079:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;11958:164;2563:22;;;;;;;;;;;;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;5547:362:3:-;5632:4;-1:-1:-1;;;;;;;;;5679:25:3;;;;:102;;-1:-1:-1;;;;;;;;;;5756:25:3;;;5679:102;:179;;;-1:-1:-1;;;;;;;;;;5833:25:3;;;5679:179;5659:199;5547:362;-1:-1:-1;;5547:362:3:o;5922:100::-;5976:13;6009:5;6002:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5922:100;:::o;11471:227::-;11547:7;11572:16;11580:7;11572;:16::i;:::-;11567:73;;11590:50;-1:-1:-1;;;11590:7:3;:50::i;:::-;-1:-1:-1;11660:24:3;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;11660:30:3;;11471:227::o;11333:124::-;11422:27;11431:2;11435:7;11444:4;11422:8;:27::i;:::-;11333:124;;:::o;6987:108::-;1094:13:0;:11;:13::i;:::-;7065:9:3::1;:22;7077:10:::0;7065:9;:22:::1;:::i;13687:3058::-:0;13829:27;13859;13878:7;13859:18;:27::i;:::-;-1:-1:-1;;;;;14014:22:3;;;;13829:57;;-1:-1:-1;14074:45:3;;;;14070:95;;14121:44;-1:-1:-1;;;14121:7:3;:44::i;:::-;14179:27;13402:24;;;:15;:24;;;;;13630:26;;14370:68;13630:26;14412:4;27749:10;14418:19;-1:-1:-1;;;;;12976:32:3;;;12820:28;;13105:20;;13127:30;;13102:56;;12517:659;14370:68;14365:189;;14458:43;14475:4;27749:10;11958:164;:::i;14458:43::-;14453:101;;14503:51;-1:-1:-1;;;14503:7:3;:51::i;:::-;14703:15;14700:160;;;14843:1;14822:19;14815:30;14700:160;-1:-1:-1;;;;;14988:24:3;;;;;;;:18;:24;;;;;;14986:26;;-1:-1:-1;;14986:26:3;;;15057:22;;;;;;;;;15055:24;;-1:-1:-1;15055:24:3;;;10943:11;10918:23;10914:41;10901:63;-1:-1:-1;;;10901:63:3;15137:26;;;;:17;:26;;;;;:175;;;;-1:-1:-1;;;15432:47:3;;:52;;15428:627;;15537:1;15527:11;;15505:19;15660:30;;;:17;:30;;;;;;:35;;15656:384;;15798:13;;15783:11;:28;15779:242;;15945:30;;;;:17;:30;;;;;:52;;;15779:242;15486:569;15428:627;-1:-1:-1;;;;;16187:20:3;;16567:7;16187:20;16497:4;16439:25;16168:16;;16304:299;16628:8;16640:1;16628:13;16624:58;;16643:39;-1:-1:-1;;;16643:7:3;:39::i;:::-;13818:2927;;;;13687:3058;;;:::o;7257:238::-;7397:10;7369:39;;;;:27;:39;;;;;;;;:46;;:39;:46;7361:88;;;;-1:-1:-1;;;7361:88:3;;9085:2:4;7361:88:3;;;9067:21:4;9124:2;9104:18;;;9097:30;9163:31;9143:18;;;9136:59;9212:18;;7361:88:3;;;;;;;;;7457:22;7467:3;7472:6;7457:9;:22::i;16841:193::-;16987:39;17004:4;17010:2;17014:7;16987:39;;;;;;;;;;;;:16;:39::i;:::-;16841:193;;;:::o;2592:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6869:105::-;1094:13:0;:11;:13::i;:::-;6944:8:3::1;:22;6955:11:::0;6944:8;:22:::1;:::i;8057:152::-:0;8129:7;8172:27;8191:7;8172:18;:27::i;4339:242::-;4411:7;-1:-1:-1;;;;;4435:19:3;;4431:69;;4456:44;-1:-1:-1;;;4456:7:3;:44::i;:::-;-1:-1:-1;;;;;;4518:25:3;;;;;:18;:25;;;;;;608:13;4518:55;;4339:242::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;6036:104:3:-;6092:13;6125:7;6118:14;;;;;:::i;11711:234::-;27749:10;11806:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;11806:49:3;;;;;;;;;;;;:60;;-1:-1:-1;;11806:60:3;;;;;;;;;;11882:55;;540:41:4;;;11806:49:3;;27749:10;11882:55;;513:18:4;11882:55:3;;;;;;;11711:234;;:::o;7103:141::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;7189:32:3::1;;::::0;;;:27:::1;:32;::::0;;;;:38;;-1:-1:-1;;7189:38:3::1;7223:4;7189:38;::::0;;7103:141::o;17048:416::-;17223:31;17236:4;17242:2;17246:7;17223:12;:31::i;:::-;-1:-1:-1;;;;;17269:14:3;;;:19;17265:192;;17308:56;17339:4;17345:2;17349:7;17358:5;17308:30;:56::i;:::-;17303:154;;17385:56;-1:-1:-1;;;17385:7:3;:56::i;:::-;17048:416;;;;:::o;7930:116::-;-1:-1:-1;;;;;8021:17:3;;;;;;:12;:17;;;;;;;;;8014:24;;;;;;;;;;;;;;;;;7990:13;;8014:24;;;8021:17;8014:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7930:116;;;:::o;6154:337::-;6227:13;6258:16;6266:7;6258;:16::i;:::-;6253:68;;6276:45;-1:-1:-1;;;6276:7:3;:45::i;:::-;6334:21;6358:10;:8;:10::i;:::-;6334:34;;6392:7;6386:21;6411:1;6386:26;:97;;;;;;;;;;;;;;;;;6439:7;6448:18;6458:7;6448:9;:18::i;:::-;6467:9;6422:55;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6386:97;6379:104;6154:337;-1:-1:-1;;;6154:337:3:o;7509:243::-;7591:10;7575:14;7583:5;7575:7;:14::i;:::-;-1:-1:-1;;;;;7575:26:3;;7567:35;;;;;;7640:10;7613:38;;;;:26;:38;;;;;;;;:45;;;;;;;;:50;;-1:-1:-1;;7613:50:3;7659:4;7613:50;;;;;;7676:24;;;:12;:24;;;;:36;;;;;;;;;;;;;;;7730:12;7652:5;7730;:12::i;:::-;7509:243;:::o;2563:22::-;;;;;;;:::i;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;10704:2:4;2154:73:0::1;::::0;::::1;10686:21:4::0;10743:2;10723:18;;;10716:30;10782:34;10762:18;;;10755:62;-1:-1:-1;;;10833:18:4;;;10826:36;10879:19;;2154:73:0::1;10502:402:4::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;12135:368:3:-:0;12200:11;12247:7;3484:1;12228:26;12224:272;;12285:13;;12275:7;:23;12271:214;;;12319:14;12352:60;-1:-1:-1;12369:26:3;;;;:17;:26;;;;;;;12359:42;;;12352:60;;12403:9;;;:::i;:::-;;;12352:60;;;-1:-1:-1;;;12440:24:3;:29;;-1:-1:-1;12271:214:3;12135:368;;;:::o;29681:165::-;29782:13;29776:4;29769:27;29823:4;29817;29810:18;23180:474;23309:13;23325:16;23333:7;23325;:16::i;:::-;23309:32;;23358:13;:45;;;;-1:-1:-1;27749:10:3;-1:-1:-1;;;;;23375:28:3;;;;23358:45;23354:201;;;23423:44;23440:5;27749:10;11958:164;:::i;23423:44::-;23418:137;;23488:51;-1:-1:-1;;;23488:7:3;:51::i;:::-;23567:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;23567:35:3;-1:-1:-1;;;;;23567:35:3;;;;;;;;;23618:28;;23567:24;;23618:28;;;;;;;23298:356;23180:474;;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;27749:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;11349:2:4;1414:68:0;;;11331:21:4;;;11368:18;;;11361:30;11427:34;11407:18;;;11400:62;11479:18;;1414:68:0;11147:356:4;8942:1196:3;9009:14;9059:7;3484:1;9040:26;9036:1037;;-1:-1:-1;9092:26:3;;;;:17;:26;;;;;;;9218:11;;;9214:772;;9265:13;;9254:7;:24;9250:77;;9280:47;-1:-1:-1;;;9280:7:3;:47::i;:::-;9364:607;-1:-1:-1;;;9460:9:3;9442:28;;;;:17;:28;;;;;;9516:25;;9364:607;9516:25;-1:-1:-1;;;9568:6:3;:24;9596:1;9568:29;9564:48;;8942:1196;;;:::o;9564:48::-;9904:47;-1:-1:-1;;;9904:7:3;:47::i;:::-;9364:607;;9214:772;-1:-1:-1;;;10017:6:3;:24;10045:1;10017:29;10013:48;;8942:1196;;;:::o;10013:48::-;10083:47;-1:-1:-1;;;10083:7:3;:47::i;22937:112::-;23014:27;23024:2;23028:8;23014:27;;;;;;;;;;;;:9;:27::i;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;17821:691:3:-;18005:88;;-1:-1:-1;;;18005:88:3;;17984:4;;-1:-1:-1;;;;;18005:45:3;;;;;:88;;27749:10;;18072:4;;18078:7;;18087:5;;18005:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18005:88:3;;;;;;;;-1:-1:-1;;18005:88:3;;;;;;;;;;;;:::i;:::-;;;18001:504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18288:6;:13;18305:1;18288:18;18284:115;;18327:56;-1:-1:-1;;;18327:7:3;:56::i;:::-;18471:6;18465:13;18456:6;18452:2;18448:15;18441:38;18001:504;-1:-1:-1;;;;;;18164:64:3;-1:-1:-1;;;18164:64:3;;-1:-1:-1;18001:504:3;17821:691;;;;;;:::o;6753:100::-;6804:13;6837:8;6830:15;;;;;:::i;27869:1745::-;27934:17;28368:4;28361;28355:11;28351:22;28460:1;28454:4;28447:15;28535:4;28532:1;28528:12;28521:19;;;28617:1;28612:3;28605:14;28721:3;28960:5;28942:428;29008:1;29003:3;28999:11;28992:18;;29179:2;29173:4;29169:13;29165:2;29161:22;29156:3;29148:36;29273:2;29263:13;;29330:25;28942:428;29330:25;-1:-1:-1;29400:13:3;;;-1:-1:-1;;29515:14:3;;;29577:19;;;29515:14;27869:1745;-1:-1:-1;27869:1745:3:o;23667:89::-;23727:21;23733:7;23742:5;23727;:21::i;22145:708::-;22276:19;22282:2;22286:8;22276:5;:19::i;:::-;-1:-1:-1;;;;;22337:14:3;;;:19;22333:502;;22391:13;;22439:14;;;22472:242;22503:62;22542:1;22546:2;22550:7;;;;;;22559:5;22503:30;:62::i;:::-;22498:176;;22594:56;-1:-1:-1;;;22594:7:3;:56::i;:::-;22709:3;22701:5;:11;22472:242;;22796:3;22779:13;;:20;22775:44;;22801:18;22816:1;22801:7;:18::i;:::-;22358:477;;22145:708;;;:::o;23769:2839::-;23849:27;23879;23898:7;23879:18;:27::i;:::-;23849:57;-1:-1:-1;23849:57:3;23919:12;;24041:35;24068:7;13291:27;13402:24;;;:15;:24;;;;;13630:26;;13402:24;;13189:485;24041:35;23984:92;;;;24093:13;24089:325;;;24214:68;24239:15;24256:4;27749:10;24262:19;27662:105;24214:68;24209:193;;24306:43;24323:4;27749:10;11958:164;:::i;24306:43::-;24301:101;;24351:51;-1:-1:-1;;;24351:7:3;:51::i;:::-;24570:15;24567:160;;;24710:1;24689:19;24682:30;24567:160;-1:-1:-1;;;;;25078:24:3;;;;;;:18;:24;;;;;:60;;25106:32;25078:60;;;10943:11;10918:23;10914:41;10901:63;-1:-1:-1;;;10901:63:3;25376:26;;;;:17;:26;;;;;:205;;;;-1:-1:-1;;;25701:47:3;;:52;;25697:627;;25806:1;25796:11;;25774:19;25929:30;;;:17;:30;;;;;;:35;;25925:384;;26067:13;;26052:11;:28;26048:242;;26214:30;;;;:17;:30;;;;;:52;;;26048:242;25755:569;25697:627;26352:35;;26379:7;;26375:1;;-1:-1:-1;;;;;26352:35:3;;;;;26375:1;;26352:35;-1:-1:-1;;26575:12:3;:14;;;;;;-1:-1:-1;;;;23769:2839:3:o;18526:2305::-;18622:13;;18599:20;18650:13;;;18646:53;;18665:34;-1:-1:-1;;;18665:7:3;:34::i;:::-;19212:31;;;;:17;:31;;;;;;;;-1:-1:-1;;;;;10769:28:3;;10943:11;10918:23;10914:41;11298:1;11285:15;;11259:24;11255:46;10911:52;10901:63;;19212:173;;;19603:22;;;:18;:22;;;;;:71;;19641:32;19629:45;;19603:71;;;10769:28;19864:13;;;19860:54;;19879:35;-1:-1:-1;;;19879:7:3;:35::i;:::-;19945:23;;;:12;20030:676;20449:7;20405:8;20360:1;20294:25;20231:1;20166;20135:358;20701:3;20688:9;;;;;;:16;20030:676;;-1:-1:-1;20722:13:3;:19;-1:-1:-1;16841:193:3;;;:::o;14:131:4:-;-1:-1:-1;;;;;;88:32:4;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:4;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:4;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:4:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:4;;1348:180;-1:-1:-1;1348:180:4:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:4;;1848:42;;1838:70;;1904:1;1901;1894:12;1919:254;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:4:o;2178:127::-;2239:10;2234:3;2230:20;2227:1;2220:31;2270:4;2267:1;2260:15;2294:4;2291:1;2284:15;2310:632;2375:5;2405:18;2446:2;2438:6;2435:14;2432:40;;;2452:18;;:::i;:::-;2527:2;2521:9;2495:2;2581:15;;-1:-1:-1;;2577:24:4;;;2603:2;2573:33;2569:42;2557:55;;;2627:18;;;2647:22;;;2624:46;2621:72;;;2673:18;;:::i;:::-;2713:10;2709:2;2702:22;2742:6;2733:15;;2772:6;2764;2757:22;2812:3;2803:6;2798:3;2794:16;2791:25;2788:45;;;2829:1;2826;2819:12;2788:45;2879:6;2874:3;2867:4;2859:6;2855:17;2842:44;2934:1;2927:4;2918:6;2910;2906:19;2902:30;2895:41;;;;2310:632;;;;;:::o;2947:451::-;3016:6;3069:2;3057:9;3048:7;3044:23;3040:32;3037:52;;;3085:1;3082;3075:12;3037:52;3125:9;3112:23;3158:18;3150:6;3147:30;3144:50;;;3190:1;3187;3180:12;3144:50;3213:22;;3266:4;3258:13;;3254:27;-1:-1:-1;3244:55:4;;3295:1;3292;3285:12;3244:55;3318:74;3384:7;3379:2;3366:16;3361:2;3357;3353:11;3318:74;:::i;3585:328::-;3662:6;3670;3678;3731:2;3719:9;3710:7;3706:23;3702:32;3699:52;;;3747:1;3744;3737:12;3699:52;3770:29;3789:9;3770:29;:::i;:::-;3760:39;;3818:38;3852:2;3841:9;3837:18;3818:38;:::i;:::-;3808:48;;3903:2;3892:9;3888:18;3875:32;3865:42;;3585:328;;;;;:::o;3918:186::-;3977:6;4030:2;4018:9;4009:7;4005:23;4001:32;3998:52;;;4046:1;4043;4036:12;3998:52;4069:29;4088:9;4069:29;:::i;4109:254::-;4177:6;4185;4238:2;4226:9;4217:7;4213:23;4209:32;4206:52;;;4254:1;4251;4244:12;4206:52;4290:9;4277:23;4267:33;;4319:38;4353:2;4342:9;4338:18;4319:38;:::i;:::-;4309:48;;4109:254;;;;;:::o;4368:347::-;4433:6;4441;4494:2;4482:9;4473:7;4469:23;4465:32;4462:52;;;4510:1;4507;4500:12;4462:52;4533:29;4552:9;4533:29;:::i;:::-;4523:39;;4612:2;4601:9;4597:18;4584:32;4659:5;4652:13;4645:21;4638:5;4635:32;4625:60;;4681:1;4678;4671:12;4625:60;4704:5;4694:15;;;4368:347;;;;;:::o;4720:667::-;4815:6;4823;4831;4839;4892:3;4880:9;4871:7;4867:23;4863:33;4860:53;;;4909:1;4906;4899:12;4860:53;4932:29;4951:9;4932:29;:::i;:::-;4922:39;;4980:38;5014:2;5003:9;4999:18;4980:38;:::i;:::-;4970:48;;5065:2;5054:9;5050:18;5037:32;5027:42;;5120:2;5109:9;5105:18;5092:32;5147:18;5139:6;5136:30;5133:50;;;5179:1;5176;5169:12;5133:50;5202:22;;5255:4;5247:13;;5243:27;-1:-1:-1;5233:55:4;;5284:1;5281;5274:12;5233:55;5307:74;5373:7;5368:2;5355:16;5350:2;5346;5342:11;5307:74;:::i;:::-;5297:84;;;4720:667;;;;;;;:::o;5392:632::-;5563:2;5615:21;;;5685:13;;5588:18;;;5707:22;;;5534:4;;5563:2;5786:15;;;;5760:2;5745:18;;;5534:4;5829:169;5843:6;5840:1;5837:13;5829:169;;;5904:13;;5892:26;;5973:15;;;;5938:12;;;;5865:1;5858:9;5829:169;;;-1:-1:-1;6015:3:4;;5392:632;-1:-1:-1;;;;;;5392:632:4:o;6029:260::-;6097:6;6105;6158:2;6146:9;6137:7;6133:23;6129:32;6126:52;;;6174:1;6171;6164:12;6126:52;6197:29;6216:9;6197:29;:::i;:::-;6187:39;;6245:38;6279:2;6268:9;6264:18;6245:38;:::i;6294:380::-;6373:1;6369:12;;;;6416;;;6437:61;;6491:4;6483:6;6479:17;6469:27;;6437:61;6544:2;6536:6;6533:14;6513:18;6510:38;6507:161;;6590:10;6585:3;6581:20;6578:1;6571:31;6625:4;6622:1;6615:15;6653:4;6650:1;6643:15;6507:161;;6294:380;;;:::o;6805:545::-;6907:2;6902:3;6899:11;6896:448;;;6943:1;6968:5;6964:2;6957:17;7013:4;7009:2;6999:19;7083:2;7071:10;7067:19;7064:1;7060:27;7054:4;7050:38;7119:4;7107:10;7104:20;7101:47;;;-1:-1:-1;7142:4:4;7101:47;7197:2;7192:3;7188:12;7185:1;7181:20;7175:4;7171:31;7161:41;;7252:82;7270:2;7263:5;7260:13;7252:82;;;7315:17;;;7296:1;7285:13;7252:82;;;7256:3;;;6805:545;;;:::o;7526:1352::-;7652:3;7646:10;7679:18;7671:6;7668:30;7665:56;;;7701:18;;:::i;:::-;7730:97;7820:6;7780:38;7812:4;7806:11;7780:38;:::i;:::-;7774:4;7730:97;:::i;:::-;7882:4;;7946:2;7935:14;;7963:1;7958:663;;;;8665:1;8682:6;8679:89;;;-1:-1:-1;8734:19:4;;;8728:26;8679:89;-1:-1:-1;;7483:1:4;7479:11;;;7475:24;7471:29;7461:40;7507:1;7503:11;;;7458:57;8781:81;;7928:944;;7958:663;6752:1;6745:14;;;6789:4;6776:18;;-1:-1:-1;;7994:20:4;;;8112:236;8126:7;8123:1;8120:14;8112:236;;;8215:19;;;8209:26;8194:42;;8307:27;;;;8275:1;8263:14;;;;8142:19;;8112:236;;;8116:3;8376:6;8367:7;8364:19;8361:201;;;8437:19;;;8431:26;-1:-1:-1;;8520:1:4;8516:14;;;8532:3;8512:24;8508:37;8504:42;8489:58;8474:74;;8361:201;-1:-1:-1;;;;;8608:1:4;8592:14;;;8588:22;8575:36;;-1:-1:-1;7526:1352:4:o;9241:1256::-;9465:3;9503:6;9497:13;9529:4;9542:64;9599:6;9594:3;9589:2;9581:6;9577:15;9542:64;:::i;:::-;9669:13;;9628:16;;;;9691:68;9669:13;9628:16;9726:15;;;9691:68;:::i;:::-;9848:13;;9781:20;;;9821:1;;9886:36;9848:13;9886:36;:::i;:::-;9941:1;9958:18;;;9985:141;;;;10140:1;10135:337;;;;9951:521;;9985:141;-1:-1:-1;;10020:24:4;;10006:39;;10097:16;;10090:24;10076:39;;10065:51;;;-1:-1:-1;9985:141:4;;10135:337;10166:6;10163:1;10156:17;10214:2;10211:1;10201:16;10239:1;10253:169;10267:8;10264:1;10261:15;10253:169;;;10349:14;;10334:13;;;10327:37;10392:16;;;;10284:10;;10253:169;;;10257:3;;10453:8;10446:5;10442:20;10435:27;;9951:521;-1:-1:-1;10488:3:4;;9241:1256;-1:-1:-1;;;;;;;;;;9241:1256:4:o;10909:233::-;10948:3;10976:5;10966:136;;11024:10;11019:3;11015:20;11012:1;11005:31;11059:4;11056:1;11049:15;11087:4;11084:1;11077:15;10966:136;-1:-1:-1;;;11118:18:4;;10909:233::o;11508:489::-;-1:-1:-1;;;;;11777:15:4;;;11759:34;;11829:15;;11824:2;11809:18;;11802:43;11876:2;11861:18;;11854:34;;;11924:3;11919:2;11904:18;;11897:31;;;11702:4;;11945:46;;11971:19;;11963:6;11945:46;:::i;:::-;11937:54;11508:489;-1:-1:-1;;;;;;11508:489:4:o;12002:249::-;12071:6;12124:2;12112:9;12103:7;12099:23;12095:32;12092:52;;;12140:1;12137;12130:12;12092:52;12172:9;12166:16;12191:30;12215:5;12191:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1233000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2706",
								"baseURI_()": "infinite",
								"checkredeemednftid(address)": "infinite",
								"checkredemmedphysicalitem(uint256,address)": "2678",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"ownerOf(uint256)": "infinite",
								"redeemPhysicalItem(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26696",
								"setBaseURI(string)": "infinite",
								"setUriSuffix(string)": "infinite",
								"setapprovedcontractaddress(address)": "26907",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4530",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"uriSuffix()": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2592,
									"end": 2620,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2592,
									"end": 2620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2620,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 3230,
									"end": 3388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3230,
									"end": 3388,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3297,
									"end": 3302,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3297,
									"end": 3310,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3305,
									"end": 3310,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3297,
									"end": 3302,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3297,
									"end": 3310,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3297,
									"end": 3310,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3297,
									"end": 3310,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3297,
									"end": 3310,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3321,
									"end": 3328,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3321,
									"end": 3338,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3331,
									"end": 3338,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3321,
									"end": 3328,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3321,
									"end": 3338,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3321,
									"end": 3338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3321,
									"end": 3338,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3321,
									"end": 3338,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3349,
									"end": 3380,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3349,
									"end": 3380,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 4,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2735,
									"end": 3575,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2735,
									"end": 3575,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2789,
									"end": 2794,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2842,
									"end": 2845,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2835,
									"end": 2839,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2827,
									"end": 2833,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2819,
									"end": 2846,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2809,
									"end": 2864,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2809,
									"end": 2864,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2860,
									"end": 2861,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2857,
									"end": 2858,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2850,
									"end": 2862,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2809,
									"end": 2864,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2809,
									"end": 2864,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2883,
									"end": 2896,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2883,
									"end": 2896,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2945,
									"end": 2955,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2945,
									"end": 2955,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2945,
									"end": 2955,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2942,
									"end": 2978,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2942,
									"end": 2978,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2942,
									"end": 2978,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2958,
									"end": 2976,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2958,
									"end": 2976,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2958,
									"end": 2976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2958,
									"end": 2976,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2958,
									"end": 2976,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3033,
									"end": 3035,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3027,
									"end": 3036,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3001,
									"end": 3003,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3087,
									"end": 3100,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3087,
									"end": 3100,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3083,
									"end": 3105,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3083,
									"end": 3105,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3083,
									"end": 3105,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3107,
									"end": 3109,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 3079,
									"end": 3110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3075,
									"end": 3115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3063,
									"end": 3116,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3063,
									"end": 3116,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3063,
									"end": 3116,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3149,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3149,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3149,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3151,
									"end": 3173,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3151,
									"end": 3173,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3151,
									"end": 3173,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3128,
									"end": 3174,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3125,
									"end": 3197,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3125,
									"end": 3197,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3125,
									"end": 3197,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3177,
									"end": 3195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 3227,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3213,
									"end": 3215,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3206,
									"end": 3228,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3252,
									"end": 3254,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3244,
									"end": 3250,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3237,
									"end": 3255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3274,
									"end": 3278,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3264,
									"end": 3278,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3264,
									"end": 3278,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3319,
									"end": 3322,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3314,
									"end": 3316,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3311,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3301,
									"end": 3307,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 3297,
									"end": 3312,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3293,
									"end": 3317,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3290,
									"end": 3323,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3287,
									"end": 3340,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3287,
									"end": 3340,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 3287,
									"end": 3340,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3336,
									"end": 3337,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3333,
									"end": 3334,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3338,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3287,
									"end": 3340,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 3287,
									"end": 3340,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3358,
									"end": 3359,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3349,
									"end": 3359,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3349,
									"end": 3359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3382,
									"end": 3384,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3379,
									"end": 3380,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3376,
									"end": 3385,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3470,
									"end": 3484,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3470,
									"end": 3484,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3470,
									"end": 3484,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3466,
									"end": 3489,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3466,
									"end": 3489,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3460,
									"end": 3490,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3439,
									"end": 3453,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3439,
									"end": 3453,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3439,
									"end": 3453,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3435,
									"end": 3458,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3435,
									"end": 3458,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3428,
									"end": 3491,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3393,
									"end": 3403,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3393,
									"end": 3403,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3393,
									"end": 3403,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3393,
									"end": 3403,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 3368,
									"end": 3501,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3544,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3521,
									"end": 3536,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3521,
									"end": 3536,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3517,
									"end": 3541,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3517,
									"end": 3541,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3517,
									"end": 3541,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3510,
									"end": 3545,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3510,
									"end": 3545,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3510,
									"end": 3545,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3510,
									"end": 3545,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3525,
									"end": 3531,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2735,
									"end": 3575,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2735,
									"end": 3575,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3679,
									"end": 3685,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3687,
									"end": 3693,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3740,
									"end": 3742,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3728,
									"end": 3737,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3719,
									"end": 3726,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3715,
									"end": 3738,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3711,
									"end": 3743,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 3708,
									"end": 3760,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3708,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 3708,
									"end": 3760,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3757,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3753,
									"end": 3754,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3746,
									"end": 3758,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3708,
									"end": 3760,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 3708,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3783,
									"end": 3799,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3783,
									"end": 3799,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3848,
									"end": 3862,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3845,
									"end": 3879,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3845,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 3845,
									"end": 3879,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3876,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3865,
									"end": 3877,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3845,
									"end": 3879,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 3845,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3898,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3951,
									"end": 3958,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3931,
									"end": 3940,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 3927,
									"end": 3949,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3898,
									"end": 3959,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3898,
									"end": 3959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3898,
									"end": 3959,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3898,
									"end": 3959,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3888,
									"end": 3959,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 3888,
									"end": 3959,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4005,
									"end": 4007,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3994,
									"end": 4003,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3990,
									"end": 4008,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3984,
									"end": 4009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3968,
									"end": 4009,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3968,
									"end": 4009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4034,
									"end": 4036,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4024,
									"end": 4032,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4021,
									"end": 4037,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4018,
									"end": 4054,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4018,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 4018,
									"end": 4054,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4050,
									"end": 4051,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4047,
									"end": 4048,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4040,
									"end": 4052,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4018,
									"end": 4054,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 4018,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4018,
									"end": 4054,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4073,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 4128,
									"end": 4135,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4117,
									"end": 4125,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4106,
									"end": 4115,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4102,
									"end": 4126,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4073,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 4073,
									"end": 4136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4073,
									"end": 4136,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 4073,
									"end": 4136,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4063,
									"end": 4136,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4063,
									"end": 4136,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4063,
									"end": 4136,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3580,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 29849,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8a6939d024eb5460a4e7b4b64d6ce496d74828093ee59e77429e4a6cb26454a64736f6c63430008120033",
									".code": [
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "DC76668D"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "DC76668D"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "F259A29E"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "BF1E5E9E"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "8370D004"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "B6B285D9"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "5503A0E8"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "5503A0E8"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "55F804B3"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "16BA10E0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 421,
											"end": 29849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5547,
											"end": 5909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5547,
											"end": 5909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5922,
											"end": 6022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5922,
											"end": 6022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 11471,
											"end": 11698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 11471,
											"end": 11698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 11333,
											"end": 11457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 11333,
											"end": 11457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6987,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6987,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3880,
											"end": 3893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 3908,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3926,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3539,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3403,
											"end": 3580,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 13687,
											"end": 16745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 13687,
											"end": 16745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 7257,
											"end": 7495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7257,
											"end": 7495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 16841,
											"end": 17034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 16841,
											"end": 17034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2592,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6869,
											"end": 6974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6869,
											"end": 6974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 8057,
											"end": 8209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 8057,
											"end": 8209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4339,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4339,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 7760,
											"end": 7910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7760,
											"end": 7910,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6036,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 11711,
											"end": 11945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 11711,
											"end": 11945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7103,
											"end": 7244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 7103,
											"end": 7244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 17048,
											"end": 17464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 17048,
											"end": 17464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7930,
											"end": 8046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7930,
											"end": 8046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7930,
											"end": 8046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6154,
											"end": 6491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6154,
											"end": 6491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7509,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7509,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 11958,
											"end": 12122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12055,
											"end": 12059,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12104,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2563,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5636,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5679,
											"end": 5704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5704,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5704,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5679,
											"end": 5781,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5756,
											"end": 5781,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5781,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5781,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5781,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5679,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5679,
											"end": 5858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5833,
											"end": 5858,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5833,
											"end": 5858,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5833,
											"end": 5858,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5858,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5679,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5858,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5547,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5976,
											"end": 5989,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6009,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6002,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6002,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5922,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 11471,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11547,
											"end": 11554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11572,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11572,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 11572,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11572,
											"end": 11588,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 11572,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11567,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 11567,
											"end": 11640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11590,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11590,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 11590,
											"end": 11640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11590,
											"end": 11640,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 11590,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11675,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11690,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11660,
											"end": 11690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11690,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11471,
											"end": 11698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11422,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 11431,
											"end": 11433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11442,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11444,
											"end": 11448,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11422,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 11422,
											"end": 11449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11422,
											"end": 11449,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 11422,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6987,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7065,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7077,
											"end": 7087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7065,
											"end": 7087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7065,
											"end": 7087,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13829,
											"end": 13856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13859,
											"end": 13886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 13878,
											"end": 13885,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13859,
											"end": 13877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 13859,
											"end": 13886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13859,
											"end": 13886,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 13859,
											"end": 13886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14014,
											"end": 14036,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 14014,
											"end": 14036,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14014,
											"end": 14036,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14014,
											"end": 14036,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 13829,
											"end": 13886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13829,
											"end": 13886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14074,
											"end": 14119,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14074,
											"end": 14119,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14074,
											"end": 14119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14074,
											"end": 14119,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14070,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 14070,
											"end": 14165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14121,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14121,
											"end": 14128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 14121,
											"end": 14165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14121,
											"end": 14165,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 14121,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14179,
											"end": 14206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13417,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 13630,
											"end": 13656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13630,
											"end": 13656,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 14370,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 13630,
											"end": 13656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14412,
											"end": 14416,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14437,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 14418,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12820,
											"end": 12848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12820,
											"end": 12848,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13105,
											"end": 13125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13105,
											"end": 13125,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13127,
											"end": 13157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13127,
											"end": 13157,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13102,
											"end": 13158,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 13102,
											"end": 13158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12517,
											"end": 13176,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14370,
											"end": 14438,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 14370,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 14365,
											"end": 14554,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14458,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 14475,
											"end": 14479,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 11958,
											"end": 12122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14458,
											"end": 14501,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 14458,
											"end": 14501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14453,
											"end": 14554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 14453,
											"end": 14554,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14503,
											"end": 14554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14503,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 14503,
											"end": 14554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14503,
											"end": 14554,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 14503,
											"end": 14554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14703,
											"end": 14718,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14700,
											"end": 14860,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14700,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 14700,
											"end": 14860,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14843,
											"end": 14844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14822,
											"end": 14841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14815,
											"end": 14845,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14700,
											"end": 14860,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 14700,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14988,
											"end": 15012,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14986,
											"end": 15012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14986,
											"end": 15012,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14986,
											"end": 15012,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14986,
											"end": 15012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14986,
											"end": 15012,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15055,
											"end": 15079,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15055,
											"end": 15079,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 15055,
											"end": 15079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15055,
											"end": 15079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15055,
											"end": 15079,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10954,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 10914,
											"end": 10955,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10901,
											"end": 10964,
											"name": "OR",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10901,
											"end": 10964,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15154,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15163,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15137,
											"end": 15312,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15432,
											"end": 15479,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15432,
											"end": 15479,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15432,
											"end": 15484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15432,
											"end": 15484,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15428,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 15428,
											"end": 16055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15537,
											"end": 15538,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15527,
											"end": 15538,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15527,
											"end": 15538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15505,
											"end": 15524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15677,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15690,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15660,
											"end": 15695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15656,
											"end": 16040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 15656,
											"end": 16040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15798,
											"end": 15811,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15798,
											"end": 15811,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15783,
											"end": 15794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15783,
											"end": 15811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15779,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 15779,
											"end": 16021,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15962,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15975,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15997,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15945,
											"end": 15997,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15779,
											"end": 16021,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 15779,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15486,
											"end": 16055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15428,
											"end": 16055,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 15428,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16187,
											"end": 16207,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16187,
											"end": 16207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16567,
											"end": 16574,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16187,
											"end": 16207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16497,
											"end": 16501,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 16439,
											"end": 16464,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16168,
											"end": 16184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16168,
											"end": 16184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16304,
											"end": 16603,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 16628,
											"end": 16636,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16640,
											"end": 16641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16628,
											"end": 16641,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16624,
											"end": 16682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 16624,
											"end": 16682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16643,
											"end": 16682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16643,
											"end": 16650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 16643,
											"end": 16682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16643,
											"end": 16682,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 16643,
											"end": 16682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13818,
											"end": 16745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13818,
											"end": 16745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13818,
											"end": 16745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13818,
											"end": 16745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13687,
											"end": 16745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7257,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7397,
											"end": 7407,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7396,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7415,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7415,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7369,
											"end": 7415,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 9087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9067,
											"end": 9088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9126,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9097,
											"end": 9127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9163,
											"end": 9194,
											"name": "PUSH",
											"source": 4,
											"value": "796F7520617265206E6F7420617070726F7665642020746F206D696E74000000"
										},
										{
											"begin": 9143,
											"end": 9161,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 9143,
											"end": 9161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9143,
											"end": 9161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9195,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7361,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7457,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7467,
											"end": 7470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7457,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7457,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 17004,
											"end": 17008,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17010,
											"end": 17012,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17014,
											"end": 17021,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 16987,
											"end": 17026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 16987,
											"end": 17026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2592,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2592,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6869,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6944,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6944,
											"end": 6952,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6944,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6944,
											"end": 6966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 8057,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8191,
											"end": 8198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8172,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4339,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4431,
											"end": 4500,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4456,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4456,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4456,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4456,
											"end": 4500,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4456,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 608,
											"end": 621,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4518,
											"end": 4573,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4518,
											"end": 4573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6036,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6092,
											"end": 6105,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6125,
											"end": 6132,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6118,
											"end": 6132,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6118,
											"end": 6132,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6118,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6118,
											"end": 6132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6118,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6118,
											"end": 6132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11824,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11845,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11866,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11806,
											"end": 11855,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11937,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 7103,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7221,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7189,
											"end": 7221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7189,
											"end": 7221,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7221,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7221,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7227,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7223,
											"end": 7227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7189,
											"end": 7227,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7227,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17223,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 17236,
											"end": 17240,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17242,
											"end": 17244,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17246,
											"end": 17253,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17223,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 17223,
											"end": 17254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17223,
											"end": 17254,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 17223,
											"end": 17254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17269,
											"end": 17283,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17269,
											"end": 17283,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17269,
											"end": 17283,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17269,
											"end": 17288,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17265,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 17265,
											"end": 17457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17308,
											"end": 17364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 17339,
											"end": 17343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17345,
											"end": 17347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17349,
											"end": 17356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17358,
											"end": 17363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17308,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 17308,
											"end": 17364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17308,
											"end": 17364,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 17308,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17303,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 17303,
											"end": 17457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17385,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 17385,
											"end": 17441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17385,
											"end": 17441,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 17385,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17048,
											"end": 17464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8033,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7990,
											"end": 8003,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7990,
											"end": 8003,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 8046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6227,
											"end": 6240,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6258,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6266,
											"end": 6273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6258,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6274,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6258,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6253,
											"end": 6321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6276,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6276,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6276,
											"end": 6321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6276,
											"end": 6321,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6276,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6358,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6358,
											"end": 6368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6358,
											"end": 6368,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6358,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6407,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6412,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6439,
											"end": 6446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6448,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6476,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6422,
											"end": 6477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6386,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6483,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 6491,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6154,
											"end": 6491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7601,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7583,
											"end": 7588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7575,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7589,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7575,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7575,
											"end": 7601,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7601,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7567,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7567,
											"end": 7602,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7567,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7567,
											"end": 7602,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7567,
											"end": 7602,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7567,
											"end": 7602,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7567,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7650,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7639,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7651,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7663,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7663,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7688,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7700,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7676,
											"end": 7712,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7652,
											"end": 7657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7730,
											"end": 7742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 7742,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7730,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2563,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10706,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10743,
											"end": 10745,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 10723,
											"end": 10741,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10723,
											"end": 10741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10716,
											"end": 10746,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10782,
											"end": 10816,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10755,
											"end": 10817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10833,
											"end": 10851,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 10833,
											"end": 10851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10833,
											"end": 10851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10879,
											"end": 10898,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 10879,
											"end": 10898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10502,
											"end": 10904,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12503,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 12135,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12200,
											"end": 12211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12228,
											"end": 12254,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12224,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 12224,
											"end": 12496,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12285,
											"end": 12298,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12285,
											"end": 12298,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12275,
											"end": 12282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12275,
											"end": 12298,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12271,
											"end": 12485,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12271,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 12271,
											"end": 12485,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12319,
											"end": 12333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12386,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12369,
											"end": 12395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12359,
											"end": 12401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12359,
											"end": 12401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12359,
											"end": 12401,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 12403,
											"end": 12412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 12352,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12440,
											"end": 12464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12440,
											"end": 12469,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12440,
											"end": 12469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12271,
											"end": 12485,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 12271,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 29681,
											"end": 29846,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 29681,
											"end": 29846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29782,
											"end": 29795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 29776,
											"end": 29780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29769,
											"end": 29796,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 29823,
											"end": 29827,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 29817,
											"end": 29821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29810,
											"end": 29828,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 23180,
											"end": 23654,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 23180,
											"end": 23654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23309,
											"end": 23322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23325,
											"end": 23341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 23333,
											"end": 23340,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23325,
											"end": 23332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 23325,
											"end": 23341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23325,
											"end": 23341,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 23325,
											"end": 23341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23309,
											"end": 23341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23309,
											"end": 23341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23358,
											"end": 23371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23358,
											"end": 23403,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23358,
											"end": 23403,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23358,
											"end": 23403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 23358,
											"end": 23403,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23375,
											"end": 23403,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23375,
											"end": 23403,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23375,
											"end": 23403,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 23375,
											"end": 23403,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23358,
											"end": 23403,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 23358,
											"end": 23403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23354,
											"end": 23555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23354,
											"end": 23555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 23354,
											"end": 23555,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23423,
											"end": 23467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 23440,
											"end": 23445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 11958,
											"end": 12122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23423,
											"end": 23467,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 23423,
											"end": 23467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23418,
											"end": 23555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 23418,
											"end": 23555,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23488,
											"end": 23539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23488,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 23488,
											"end": 23539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23488,
											"end": 23539,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 23488,
											"end": 23539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23582,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23602,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 23567,
											"end": 23591,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23618,
											"end": 23646,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23180,
											"end": 23654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23180,
											"end": 23654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23180,
											"end": 23654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23180,
											"end": 23654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11351,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11331,
											"end": 11352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11331,
											"end": 11352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11331,
											"end": 11352,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11368,
											"end": 11386,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11368,
											"end": 11386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11368,
											"end": 11386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11361,
											"end": 11391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11427,
											"end": 11461,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11400,
											"end": 11462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 11479,
											"end": 11497,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 11147,
											"end": 11503,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9009,
											"end": 9023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9059,
											"end": 9066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9040,
											"end": 9066,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9036,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 9036,
											"end": 10073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9218,
											"end": 9229,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9218,
											"end": 9229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9218,
											"end": 9229,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9214,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 9214,
											"end": 9986,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9265,
											"end": 9278,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9265,
											"end": 9278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9278,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9250,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 9250,
											"end": 9327,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9280,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9280,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 9280,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9280,
											"end": 9327,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 9280,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9364,
											"end": 9971,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9364,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9460,
											"end": 9469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9459,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9442,
											"end": 9470,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9516,
											"end": 9541,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9516,
											"end": 9541,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9364,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9516,
											"end": 9541,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9568,
											"end": 9574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9568,
											"end": 9592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9596,
											"end": 9597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9597,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 9564,
											"end": 9612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9612,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 9564,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9904,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9904,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 9904,
											"end": 9951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9904,
											"end": 9951,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 9904,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9364,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9364,
											"end": 9971,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9214,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 9214,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10017,
											"end": 10023,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10045,
											"end": 10046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10017,
											"end": 10046,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10013,
											"end": 10061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 10138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10061,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10013,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10083,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10083,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10083,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22937,
											"end": 23049,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 22937,
											"end": 23049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 23024,
											"end": 23026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23028,
											"end": 23036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23014,
											"end": 23023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 23014,
											"end": 23041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17984,
											"end": 17988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17984,
											"end": 17988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18005,
											"end": 18050,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18050,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18050,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 18005,
											"end": 18050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18072,
											"end": 18076,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 18072,
											"end": 18076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18078,
											"end": 18085,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 18078,
											"end": 18085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18087,
											"end": 18092,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 18087,
											"end": 18092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 18005,
											"end": 18093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 18005,
											"end": 18093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 18005,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18288,
											"end": 18294,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18288,
											"end": 18301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18305,
											"end": 18306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18288,
											"end": 18306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18284,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 18284,
											"end": 18399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18327,
											"end": 18383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18327,
											"end": 18334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 18327,
											"end": 18383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18327,
											"end": 18383,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 18327,
											"end": 18383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18471,
											"end": 18477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18465,
											"end": 18478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18456,
											"end": 18462,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18452,
											"end": 18454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18448,
											"end": 18463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18441,
											"end": 18479,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18164,
											"end": 18228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18164,
											"end": 18228,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18164,
											"end": 18228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 18001,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17821,
											"end": 18512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17821,
											"end": 18512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6853,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6753,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6804,
											"end": 6817,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6837,
											"end": 6845,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6830,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 27869,
											"end": 29614,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 27869,
											"end": 29614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27934,
											"end": 27951,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 28368,
											"end": 28372,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 28361,
											"end": 28365,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 28355,
											"end": 28366,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 28351,
											"end": 28373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 28460,
											"end": 28461,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 28454,
											"end": 28458,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 28447,
											"end": 28462,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 28535,
											"end": 28539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 28532,
											"end": 28533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 28528,
											"end": 28540,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 28521,
											"end": 28540,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 28521,
											"end": 28540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28521,
											"end": 28540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28617,
											"end": 28618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 28612,
											"end": 28615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 28605,
											"end": 28619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 28721,
											"end": 28724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 28960,
											"end": 28965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 28942,
											"end": 29370,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 28942,
											"end": 29370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29008,
											"end": 29009,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 29003,
											"end": 29006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 28999,
											"end": 29010,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 28992,
											"end": 29010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 28992,
											"end": 29010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29179,
											"end": 29181,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 29173,
											"end": 29177,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29169,
											"end": 29182,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 29165,
											"end": 29167,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 29161,
											"end": 29183,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29156,
											"end": 29159,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 29148,
											"end": 29184,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 29273,
											"end": 29275,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 29263,
											"end": 29276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29263,
											"end": 29276,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 29330,
											"end": 29355,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 28942,
											"end": 29370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 29330,
											"end": 29355,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29400,
											"end": 29413,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29400,
											"end": 29413,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29400,
											"end": 29413,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29515,
											"end": 29529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29515,
											"end": 29529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 29515,
											"end": 29529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29577,
											"end": 29596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29577,
											"end": 29596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29577,
											"end": 29596,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 29515,
											"end": 29529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27869,
											"end": 29614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27869,
											"end": 29614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23667,
											"end": 23756,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 23667,
											"end": 23756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23727,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 23733,
											"end": 23740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23742,
											"end": 23747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23727,
											"end": 23732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 23727,
											"end": 23748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22145,
											"end": 22853,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 22145,
											"end": 22853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22276,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 22282,
											"end": 22284,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22286,
											"end": 22294,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22276,
											"end": 22281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 22276,
											"end": 22295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22276,
											"end": 22295,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 22276,
											"end": 22295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22337,
											"end": 22351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22337,
											"end": 22351,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22337,
											"end": 22351,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 22337,
											"end": 22356,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 22333,
											"end": 22835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22391,
											"end": 22404,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22391,
											"end": 22404,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22453,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22472,
											"end": 22714,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 22472,
											"end": 22714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22503,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 22542,
											"end": 22543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22546,
											"end": 22548,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22550,
											"end": 22557,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22550,
											"end": 22557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22550,
											"end": 22557,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22550,
											"end": 22557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22550,
											"end": 22557,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 22550,
											"end": 22557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22559,
											"end": 22564,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22503,
											"end": 22533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 22503,
											"end": 22565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22503,
											"end": 22565,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 22503,
											"end": 22565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22498,
											"end": 22674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 22498,
											"end": 22674,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22594,
											"end": 22650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22594,
											"end": 22601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 22594,
											"end": 22650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22594,
											"end": 22650,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 22594,
											"end": 22650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22709,
											"end": 22712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22701,
											"end": 22706,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22701,
											"end": 22712,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 22472,
											"end": 22714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 22472,
											"end": 22714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22796,
											"end": 22799,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22779,
											"end": 22792,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22779,
											"end": 22792,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22779,
											"end": 22799,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22775,
											"end": 22819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 22775,
											"end": 22819,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22801,
											"end": 22819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 22816,
											"end": 22817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22801,
											"end": 22808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 22801,
											"end": 22819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22801,
											"end": 22819,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 22801,
											"end": 22819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22358,
											"end": 22835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22358,
											"end": 22835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22145,
											"end": 22853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22145,
											"end": 22853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22145,
											"end": 22853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22145,
											"end": 22853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23769,
											"end": 26608,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 23769,
											"end": 26608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23849,
											"end": 23876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 23898,
											"end": 23905,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23879,
											"end": 23897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 23879,
											"end": 23906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23879,
											"end": 23906,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 23879,
											"end": 23906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23849,
											"end": 23906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23849,
											"end": 23906,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23919,
											"end": 23931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23919,
											"end": 23931,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24041,
											"end": 24076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 24068,
											"end": 24075,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13417,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 13630,
											"end": 13656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13630,
											"end": 13656,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13402,
											"end": 13426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13189,
											"end": 13674,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24041,
											"end": 24076,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 24041,
											"end": 24076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23984,
											"end": 24076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23984,
											"end": 24076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23984,
											"end": 24076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23984,
											"end": 24076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24093,
											"end": 24106,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24089,
											"end": 24414,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 24089,
											"end": 24414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 24089,
											"end": 24414,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24214,
											"end": 24282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 24239,
											"end": 24254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24256,
											"end": 24260,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 24262,
											"end": 24281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 27662,
											"end": 27767,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24214,
											"end": 24282,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 24214,
											"end": 24282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24209,
											"end": 24402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 24209,
											"end": 24402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24306,
											"end": 24349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 24323,
											"end": 24327,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 27749,
											"end": 27759,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 11958,
											"end": 12122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24306,
											"end": 24349,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 24306,
											"end": 24349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24301,
											"end": 24402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 24301,
											"end": 24402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24351,
											"end": 24402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24351,
											"end": 24358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 24351,
											"end": 24402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24351,
											"end": 24402,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 24351,
											"end": 24402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24570,
											"end": 24585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24567,
											"end": 24727,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 24567,
											"end": 24727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 24567,
											"end": 24727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24710,
											"end": 24711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24689,
											"end": 24708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24682,
											"end": 24712,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 24567,
											"end": 24727,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 24567,
											"end": 24727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25096,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25102,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 25106,
											"end": 25138,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25078,
											"end": 25138,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10954,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 10914,
											"end": 10955,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10901,
											"end": 10964,
											"name": "OR",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10901,
											"end": 10964,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25393,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25402,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 25376,
											"end": 25581,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25701,
											"end": 25748,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 25701,
											"end": 25748,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 25701,
											"end": 25753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25701,
											"end": 25753,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 25697,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 25697,
											"end": 26324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 25806,
											"end": 25807,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 25796,
											"end": 25807,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 25796,
											"end": 25807,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 25774,
											"end": 25793,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25946,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25929,
											"end": 25964,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 25925,
											"end": 26309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 25925,
											"end": 26309,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 26067,
											"end": 26080,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 26067,
											"end": 26080,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 26052,
											"end": 26063,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26052,
											"end": 26080,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 26048,
											"end": 26290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 26048,
											"end": 26290,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26231,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26244,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26266,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26214,
											"end": 26266,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 26048,
											"end": 26290,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 26048,
											"end": 26290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25755,
											"end": 26324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25697,
											"end": 26324,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 25697,
											"end": 26324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 26379,
											"end": 26386,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 26379,
											"end": 26386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26375,
											"end": 26376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26375,
											"end": 26376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26375,
											"end": 26376,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 26375,
											"end": 26376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26352,
											"end": 26387,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26575,
											"end": 26587,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 26575,
											"end": 26589,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26575,
											"end": 26589,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 26575,
											"end": 26589,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 26575,
											"end": 26589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26575,
											"end": 26589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26575,
											"end": 26589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23769,
											"end": 26608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18526,
											"end": 20831,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 18526,
											"end": 20831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18622,
											"end": 18635,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 18622,
											"end": 18635,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18599,
											"end": 18619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18650,
											"end": 18663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18650,
											"end": 18663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18650,
											"end": 18663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18646,
											"end": 18699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 18646,
											"end": 18699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18665,
											"end": 18699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B562E8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18665,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 18665,
											"end": 18699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18665,
											"end": 18699,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 18665,
											"end": 18699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19229,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19243,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10769,
											"end": 10797,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10769,
											"end": 10797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10954,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 10914,
											"end": 10955,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11285,
											"end": 11300,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 11285,
											"end": 11300,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11259,
											"end": 11283,
											"name": "PUSH",
											"source": 3,
											"value": "E1"
										},
										{
											"begin": 11255,
											"end": 11301,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10911,
											"end": 10963,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 10901,
											"end": 10964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10901,
											"end": 10964,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19385,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19212,
											"end": 19385,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19625,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19641,
											"end": 19673,
											"name": "PUSH",
											"source": 3,
											"value": "10000000000000001"
										},
										{
											"begin": 19629,
											"end": 19674,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 19629,
											"end": 19674,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19603,
											"end": 19674,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10769,
											"end": 10797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19864,
											"end": 19877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19864,
											"end": 19877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19864,
											"end": 19877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19860,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 19860,
											"end": 19914,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 19879,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E0763"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19879,
											"end": 19886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 19879,
											"end": 19914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19879,
											"end": 19914,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 19879,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19945,
											"end": 19968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19945,
											"end": 19968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19945,
											"end": 19968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19945,
											"end": 19957,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20030,
											"end": 20706,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 20030,
											"end": 20706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20449,
											"end": 20456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20405,
											"end": 20413,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20360,
											"end": 20361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20294,
											"end": 20319,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20231,
											"end": 20232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20166,
											"end": 20167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20135,
											"end": 20493,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 20701,
											"end": 20704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20688,
											"end": 20697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20688,
											"end": 20697,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20688,
											"end": 20697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20688,
											"end": 20697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20688,
											"end": 20697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20688,
											"end": 20697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20688,
											"end": 20704,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20030,
											"end": 20706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 20030,
											"end": 20706,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20722,
											"end": 20735,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20722,
											"end": 20741,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16841,
											"end": 17034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2305,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 2178,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2239,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2234,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2230,
											"end": 2250,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2251,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2274,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2275,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2299,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2446,
											"end": 2448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2449,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2472,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 2432,
											"end": 2472,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 2452,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2497,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2611,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2669,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2669,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2670,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2693,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 2621,
											"end": 2693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 2673,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2815,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2809,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2801,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2816,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2819,
											"end": 2831,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 2788,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2871,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2886,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2918,
											"end": 2924,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2310,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 3398,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2947,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3071,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3044,
											"end": 3067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3072,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3087,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3135,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3177,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 3144,
											"end": 3194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3192,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3194,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 3144,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3213,
											"end": 3235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3213,
											"end": 3235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3270,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3281,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 3244,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 3384,
											"end": 3391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3366,
											"end": 3382,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3353,
											"end": 3364,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 3318,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3913,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3585,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3676,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3733,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3719,
											"end": 3728,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3729,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3734,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3751,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 3699,
											"end": 3751,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3751,
											"name": "tag",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 3699,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 3770,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3799,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 3770,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3799,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3850,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 3818,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3856,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 3818,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3901,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3906,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3865,
											"end": 3907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3865,
											"end": 3907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3913,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3913,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3913,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3918,
											"end": 4104,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3918,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 3983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4032,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4033,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 3998,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 4088,
											"end": 4097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4069,
											"end": 4098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4363,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4109,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4240,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4235,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4236,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4241,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4258,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 4206,
											"end": 4258,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4258,
											"name": "tag",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 4206,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4300,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4319,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "tag",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4368,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4480,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4492,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4497,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4514,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 4462,
											"end": 4514,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4511,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4512,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4514,
											"name": "tag",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 4462,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 4552,
											"end": 4561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4533,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "tag",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4659,
											"end": 4664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 4665,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4645,
											"end": 4666,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4638,
											"end": 4643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 4625,
											"end": 4685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4671,
											"end": 4683,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4685,
											"name": "tag",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 4625,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 4837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4895,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4896,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4899,
											"end": 4911,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "tag",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 4860,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4932,
											"end": 4961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "tag",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4922,
											"end": 4961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 5014,
											"end": 5016,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4980,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "tag",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 4980,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 5018,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5122,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5183,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 5133,
											"end": 5183,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5183,
											"name": "tag",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 5133,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5224,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5247,
											"end": 5260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5260,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5270,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 5233,
											"end": 5288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5284,
											"end": 5285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5274,
											"end": 5286,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 5233,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 5373,
											"end": 5380,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5355,
											"end": 5371,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5350,
											"end": 5352,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 5307,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5381,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 5307,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4720,
											"end": 5387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5392,
											"end": 6024,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5392,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5565,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 5698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 5698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5729,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5786,
											"end": 5801,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5786,
											"end": 5801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5786,
											"end": 5801,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5786,
											"end": 5801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 5762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5538,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "tag",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5950,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "tag",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 5829,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6018,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 5392,
											"end": 6024,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 6024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6289,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6029,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6111,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6146,
											"end": 6155,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6144,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6161,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6178,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 6126,
											"end": 6178,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6172,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6178,
											"name": "tag",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 6126,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "499"
										},
										{
											"begin": 6216,
											"end": 6225,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 6197,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6226,
											"name": "tag",
											"source": 4,
											"value": "499"
										},
										{
											"begin": 6197,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6187,
											"end": 6226,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6187,
											"end": 6226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6245,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 6279,
											"end": 6281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6245,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 6245,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6674,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6294,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6373,
											"end": 6374,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6369,
											"end": 6381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6369,
											"end": 6381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6369,
											"end": 6381,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 6369,
											"end": 6381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6416,
											"end": 6428,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6416,
											"end": 6428,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6416,
											"end": 6428,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 6437,
											"end": 6498,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6491,
											"end": 6495,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 6483,
											"end": 6489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6469,
											"end": 6496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6469,
											"end": 6496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6498,
											"name": "tag",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 6437,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6544,
											"end": 6546,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6547,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6548,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 6507,
											"end": 6668,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6600,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6581,
											"end": 6601,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6578,
											"end": 6579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6602,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6629,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6615,
											"end": 6630,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6653,
											"end": 6657,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6650,
											"end": 6651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6668,
											"name": "tag",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 6507,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 7350,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 6805,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6907,
											"end": 6909,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6902,
											"end": 6905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6899,
											"end": 6910,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 7344,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6896,
											"end": 7344,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6957,
											"end": 6974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7013,
											"end": 7017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6999,
											"end": 7018,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7071,
											"end": 7081,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7067,
											"end": 7086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7060,
											"end": 7087,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7050,
											"end": 7088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7117,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7124,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7148,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "507"
										},
										{
											"begin": 7101,
											"end": 7148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7148,
											"name": "tag",
											"source": 4,
											"value": "507"
										},
										{
											"begin": 7101,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7197,
											"end": 7199,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7192,
											"end": 7195,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7188,
											"end": 7200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7181,
											"end": 7201,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 7175,
											"end": 7179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "tag",
											"source": 4,
											"value": "508"
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7270,
											"end": 7272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7263,
											"end": 7268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7260,
											"end": 7273,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "510"
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7332,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "508"
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "tag",
											"source": 4,
											"value": "510"
										},
										{
											"begin": 7252,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 7350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 7350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 7350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 7350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 8878,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7526,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7697,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7671,
											"end": 7677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7721,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 7665,
											"end": 7721,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 7701,
											"end": 7719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "tag",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "515"
										},
										{
											"begin": 7820,
											"end": 7826,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7780,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "516"
										},
										{
											"begin": 7812,
											"end": 7816,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7806,
											"end": 7817,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7780,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7780,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7780,
											"end": 7818,
											"name": "tag",
											"source": 4,
											"value": "516"
										},
										{
											"begin": 7780,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 7730,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 7827,
											"name": "tag",
											"source": 4,
											"value": "515"
										},
										{
											"begin": 7730,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7935,
											"end": 7949,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7935,
											"end": 7949,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7958,
											"end": 8621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 8621,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 7958,
											"end": 8621,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8665,
											"end": 8666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 8768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "519"
										},
										{
											"begin": 8679,
											"end": 8768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8734,
											"end": 8753,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8734,
											"end": 8753,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8734,
											"end": 8753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8728,
											"end": 8754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 8768,
											"name": "tag",
											"source": 4,
											"value": "519"
										},
										{
											"begin": 8679,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7479,
											"end": 7490,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7479,
											"end": 7490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7479,
											"end": 7490,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7475,
											"end": 7499,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7461,
											"end": 7501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7507,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7503,
											"end": 7514,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7514,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7515,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 8781,
											"end": 8862,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8781,
											"end": 8862,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7928,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "510"
										},
										{
											"begin": 7928,
											"end": 8872,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 8621,
											"name": "tag",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 7958,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6745,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6745,
											"end": 6759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7994,
											"end": 8014,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7994,
											"end": 8014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7994,
											"end": 8014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "tag",
											"source": 4,
											"value": "522"
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8120,
											"end": 8134,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8236,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8307,
											"end": 8334,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8307,
											"end": 8334,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8307,
											"end": 8334,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8307,
											"end": 8334,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8263,
											"end": 8277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8142,
											"end": 8161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8142,
											"end": 8161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "522"
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "tag",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 8112,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8367,
											"end": 8374,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8383,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8562,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 8361,
											"end": 8562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8437,
											"end": 8456,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8437,
											"end": 8456,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8437,
											"end": 8456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8431,
											"end": 8457,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8520,
											"end": 8521,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8516,
											"end": 8530,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8530,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8532,
											"end": 8535,
											"name": "PUSH",
											"source": 4,
											"value": "F8"
										},
										{
											"begin": 8512,
											"end": 8536,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8545,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 8504,
											"end": 8546,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8489,
											"end": 8547,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8474,
											"end": 8548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8474,
											"end": 8548,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8562,
											"name": "tag",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 8361,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8608,
											"end": 8609,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8592,
											"end": 8606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8592,
											"end": 8606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8592,
											"end": 8606,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8588,
											"end": 8610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8575,
											"end": 8611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8575,
											"end": 8611,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7526,
											"end": 8878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 10497,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 9241,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9465,
											"end": 9468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9509,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9497,
											"end": 9510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9529,
											"end": 9533,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9542,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9597,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9591,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9581,
											"end": 9587,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9542,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 9542,
											"end": 9606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9542,
											"end": 9606,
											"name": "tag",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 9542,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 9682,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 9682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9628,
											"end": 9644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9628,
											"end": 9644,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9628,
											"end": 9644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9628,
											"end": 9644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9691,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "529"
										},
										{
											"begin": 9669,
											"end": 9682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9628,
											"end": 9644,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9726,
											"end": 9741,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9726,
											"end": 9741,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 9726,
											"end": 9741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9691,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 9691,
											"end": 9759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9691,
											"end": 9759,
											"name": "tag",
											"source": 4,
											"value": "529"
										},
										{
											"begin": 9691,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9781,
											"end": 9801,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9781,
											"end": 9801,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9781,
											"end": 9801,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9821,
											"end": 9822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9821,
											"end": 9822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "530"
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9886,
											"end": 9922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9922,
											"name": "tag",
											"source": 4,
											"value": "530"
										},
										{
											"begin": 9886,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9941,
											"end": 9942,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9958,
											"end": 9976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9958,
											"end": 9976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9958,
											"end": 9976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "532"
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10140,
											"end": 10141,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10135,
											"end": 10472,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10472,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "533"
										},
										{
											"begin": 10135,
											"end": 10472,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9951,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 9951,
											"end": 10472,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "tag",
											"source": 4,
											"value": "532"
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10045,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10090,
											"end": 10114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10076,
											"end": 10115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10076,
											"end": 10115,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10065,
											"end": 10116,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10065,
											"end": 10116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10065,
											"end": 10116,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 9985,
											"end": 10126,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10472,
											"name": "tag",
											"source": 4,
											"value": "533"
										},
										{
											"begin": 10135,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10166,
											"end": 10172,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10163,
											"end": 10164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10156,
											"end": 10173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10212,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10201,
											"end": 10217,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10239,
											"end": 10240,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "tag",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10267,
											"end": 10275,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10261,
											"end": 10276,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10363,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10334,
											"end": 10347,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10334,
											"end": 10347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10334,
											"end": 10347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10327,
											"end": 10364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10392,
											"end": 10408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10392,
											"end": 10408,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10392,
											"end": 10408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10392,
											"end": 10408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10294,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "tag",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 10253,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10257,
											"end": 10260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10257,
											"end": 10260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10453,
											"end": 10461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10446,
											"end": 10451,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10442,
											"end": 10462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10435,
											"end": 10462,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10435,
											"end": 10462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9951,
											"end": 10472,
											"name": "tag",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 9951,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10488,
											"end": 10491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10491,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 10497,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9241,
											"end": 10497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 11142,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10909,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10948,
											"end": 10951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10976,
											"end": 10981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 11102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "539"
										},
										{
											"begin": 10966,
											"end": 11102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11024,
											"end": 11034,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 11019,
											"end": 11022,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 11015,
											"end": 11035,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 11012,
											"end": 11013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 11036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11063,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 11056,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11049,
											"end": 11064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11087,
											"end": 11091,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11084,
											"end": 11085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11077,
											"end": 11092,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 11102,
											"name": "tag",
											"source": 4,
											"value": "539"
										},
										{
											"begin": 10966,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11118,
											"end": 11136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11118,
											"end": 11136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 11142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11508,
											"end": 11997,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 11508,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11777,
											"end": 11792,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11777,
											"end": 11792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11777,
											"end": 11792,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11759,
											"end": 11793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11759,
											"end": 11793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11844,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11829,
											"end": 11844,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11824,
											"end": 11826,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11802,
											"end": 11845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11876,
											"end": 11878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11854,
											"end": 11888,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11854,
											"end": 11888,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11854,
											"end": 11888,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11924,
											"end": 11927,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 11919,
											"end": 11921,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11897,
											"end": 11928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11897,
											"end": 11928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11897,
											"end": 11928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11702,
											"end": 11706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11702,
											"end": 11706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 11945,
											"end": 11991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11971,
											"end": 11990,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11971,
											"end": 11990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 11969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 11945,
											"end": 11991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11945,
											"end": 11991,
											"name": "tag",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 11945,
											"end": 11991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 11991,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 11508,
											"end": 11997,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11508,
											"end": 11997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12002,
											"end": 12251,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 12002,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12071,
											"end": 12077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12124,
											"end": 12126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12112,
											"end": 12121,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12103,
											"end": 12110,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12099,
											"end": 12122,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12095,
											"end": 12127,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "544"
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12138,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12130,
											"end": 12142,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "tag",
											"source": 4,
											"value": "544"
										},
										{
											"begin": 12092,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12172,
											"end": 12181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12166,
											"end": 12182,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12191,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12191,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 12191,
											"end": 12221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"IERC721A.sol",
								"chestNft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseURI_()": "f259a29e",
							"checkredeemednftid(address)": "bf1e5e9e",
							"checkredemmedphysicalitem(uint256,address)": "8370d004",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"redeemPhysicalItem(uint256)": "dc76668d",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"setUriSuffix(string)": "16ba10e0",
							"setapprovedcontractaddress(address)": "b6b285d9",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uriSuffix()": "5503a0e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI_\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"checkredeemednftid\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"checkredemmedphysicalitem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"redeemPhysicalItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uriSuffix\",\"type\":\"string\"}],\"name\":\"setUriSuffix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"setapprovedcontractaddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uriSuffix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"chestNft.sol\":\"KleptoGnomeLootChest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC721A.sol\":{\"keccak256\":\"0x93ac89d27a12c97f51960001724c5adb638424ac67ffc02264ab7f7d16865ad8\",\"urls\":[\"bzz-raw://a914beb3cdcede29abf7714738a6c50e2c0e2108b07b79b954cb6a48d13c7ced\",\"dweb:/ipfs/QmSUer9R6GbPgzWQsNhE5Hq2xZBaX63dh2D1YDbTfkRrwK\"]},\"chestNft.sol\":{\"keccak256\":\"0x16345490efd30b26099de2f5bee59c83adea5d40a0a7ebe976ec419f75240f69\",\"urls\":[\"bzz-raw://615ef38900c8280418c0f186db2183836fdd3cdac789270dd1b20d6bf10eea62\",\"dweb:/ipfs/QmTrD2B9WN4oW5NZUbz1ixYwBRDJjLyir1VfWx8YPVNHhe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 401,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 403,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 405,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 407,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 409,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "baseURI_",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 412,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "uriSuffix",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 417,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "nftsredeemed",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 419,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "counter",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 423,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "onlyapprovedcontractaddress",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 429,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_checkredemmedphysicalitem",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 433,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 437,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 442,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)333_storage)"
							},
							{
								"astId": 448,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)333_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)333_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)333_storage": {
								"encoding": "inplace",
								"label": "struct KleptoGnomeLootChest.TokenApprovalRef",
								"members": [
									{
										"astId": 332,
										"contract": "chestNft.sol:KleptoGnomeLootChest",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> IERC721A.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "IERC721A.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> chestNft.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "chestNft.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"IERC721A.sol": {
				"ast": {
					"absolutePath": "IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							308
						]
					},
					"id": 309,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "4:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "IERC721A",
							"nameLocation": "43:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "cfb3b942",
									"id": 138,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "70:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "103:2:2"
									},
									"src": "64:42:2"
								},
								{
									"errorSelector": "cf4700e4",
									"id": 140,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "126:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:2"
									},
									"src": "120:41:2"
								},
								{
									"errorSelector": "8f4eb604",
									"id": 142,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "180:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "206:2:2"
									},
									"src": "174:35:2"
								},
								{
									"errorSelector": "2e076300",
									"id": 144,
									"name": "MintToZeroAddress",
									"nameLocation": "228:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:2:2"
									},
									"src": "222:26:2"
								},
								{
									"errorSelector": "b562e8dd",
									"id": 146,
									"name": "MintZeroQuantity",
									"nameLocation": "268:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:2:2"
									},
									"src": "262:25:2"
								},
								{
									"errorSelector": "df2d9b42",
									"id": 148,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "306:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:2:2"
									},
									"src": "300:38:2"
								},
								{
									"errorSelector": "59c896be",
									"id": 150,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "358:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:2"
									},
									"src": "352:42:2"
								},
								{
									"errorSelector": "a1148100",
									"id": 152,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "414:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:2"
									},
									"src": "408:35:2"
								},
								{
									"errorSelector": "d1a57ed6",
									"id": 154,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "463:38:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:2"
									},
									"src": "457:47:2"
								},
								{
									"errorSelector": "ea553b34",
									"id": 156,
									"name": "TransferToZeroAddress",
									"nameLocation": "522:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"src": "516:30:2"
								},
								{
									"errorSelector": "a14c4b50",
									"id": 158,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "565:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:2"
									},
									"src": "559:36:2"
								},
								{
									"errorSelector": "3db1f9af",
									"id": 160,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "614:31:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:2"
									},
									"src": "608:40:2"
								},
								{
									"errorSelector": "00d58153",
									"id": 162,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "668:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:2:2"
									},
									"src": "662:44:2"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 171,
									"members": [
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "770:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "762:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 163,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 166,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "802:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "795:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 165,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "795:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "841:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "836:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 167,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "836:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 170,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "875:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "868:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 169,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "868:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "726:14:2",
									"nodeType": "StructDefinition",
									"scope": 308,
									"src": "719:173:2",
									"visibility": "public"
								},
								{
									"functionSelector": "18160ddd",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "914:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:2:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "951:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:9:2"
									},
									"scope": 308,
									"src": "905:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01ffc9a7",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "981:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1006:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "999:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 177,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "999:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:20:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:6:2"
									},
									"scope": 308,
									"src": "972:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 191,
									"name": "Transfer",
									"nameLocation": "1067:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1092:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1076:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1114:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1098:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1118:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:67:2"
									},
									"src": "1061:82:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 199,
									"name": "Approval",
									"nameLocation": "1162:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1187:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1171:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1210:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1194:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1220:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:74:2"
									},
									"src": "1156:89:2"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 207,
									"name": "ApprovalForAll",
									"nameLocation": "1259:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1290:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1274:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1313:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1297:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1328:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1323:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:64:2"
									},
									"src": "1253:85:2"
								},
								{
									"functionSelector": "70a08231",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1358:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1376:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1368:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:15:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1414:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1406:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:2"
									},
									"scope": 308,
									"src": "1349:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1445:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:17:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1501:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1493:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:15:2"
									},
									"scope": 308,
									"src": "1436:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b88d4fde",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1529:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1564:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1556:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1579:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1608:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1600:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1641:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1626:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1626:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:107:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:2"
									},
									"scope": 308,
									"src": "1520:150:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42842e0e",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1693:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1728:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1720:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1751:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1743:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:77:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1803:0:2"
									},
									"scope": 308,
									"src": "1684:120:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1826:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1857:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1849:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1880:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1872:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1901:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1893:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:77:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 308,
									"src": "1817:116:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1955:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1971:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1963:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1983:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1975:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:29:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:0:2"
									},
									"scope": 308,
									"src": "1946:63:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2030:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2056:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2048:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "2071:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2066:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2066:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:34:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:0:2"
									},
									"scope": 308,
									"src": "2021:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "081812fc",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "2113:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2133:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2125:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:17:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2173:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 308,
									"src": "2104:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2205:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2230:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2222:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2245:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2237:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:33:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2278:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:6:2"
									},
									"scope": 308,
									"src": "2196:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2306:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:2:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2336:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2336:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:15:2"
									},
									"scope": 308,
									"src": "2297:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2406:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2406:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:15:2"
									},
									"scope": 308,
									"src": "2365:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c87b56dd",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2443:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:17:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2492:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2492:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:15:2"
									},
									"scope": 308,
									"src": "2434:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 307,
									"name": "ConsecutiveTransfer",
									"nameLocation": "2526:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "2562:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2546:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "2583:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2575:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2610:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2594:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2632:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2616:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:90:2"
									},
									"src": "2520:116:2"
								}
							],
							"scope": 309,
							"src": "33:2606:2",
							"usedErrors": [
								138,
								140,
								142,
								144,
								146,
								148,
								150,
								152,
								154,
								156,
								158,
								160,
								162
							]
						}
					],
					"src": "4:2635:2"
				},
				"id": 2
			},
			"chestNft.sol": {
				"ast": {
					"absolutePath": "chestNft.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"ERC721A__IERC721Receiver": [
							326
						],
						"IERC721A": [
							308
						],
						"KleptoGnomeLootChest": [
							2210
						],
						"Ownable": [
							112
						]
					},
					"id": 2211,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:3"
						},
						{
							"absolutePath": "IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2211,
							"sourceUnit": 309,
							"src": "29:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2211,
							"sourceUnit": 113,
							"src": "55:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 326,
							"linearizedBaseContracts": [
								326
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "123:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "164:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "199:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "191:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "226:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "218:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "249:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "241:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "282:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "267:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "267:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:113:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "312:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 322,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:8:3"
									},
									"scope": 326,
									"src": "155:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2211,
							"src": "113:210:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 327,
										"name": "IERC721A",
										"nameLocations": [
											"454:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 308,
										"src": "454:8:3"
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "454:8:3"
								},
								{
									"baseName": {
										"id": 329,
										"name": "Ownable",
										"nameLocations": [
											"463:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "463:7:3"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "463:7:3"
								}
							],
							"canonicalName": "KleptoGnomeLootChest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2210,
							"linearizedBaseContracts": [
								2210,
								112,
								134,
								308
							],
							"name": "KleptoGnomeLootChest",
							"nameLocation": "430:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "KleptoGnomeLootChest.TokenApprovalRef",
									"id": 333,
									"members": [
										{
											"constant": false,
											"id": 332,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "527:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 333,
											"src": "519:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 331,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "519:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "491:16:3",
									"nodeType": "StructDefinition",
									"scope": 2210,
									"src": "484:56:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 341,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "578:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "553:68:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "609:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "614:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "609:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 338,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "608:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 339,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "620:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "608:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 344,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "722:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "697:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "746:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 347,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "849:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "824:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "873:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 350,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "968:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "943:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "943:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "982:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 358,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1101:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "1076:65:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1076:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1128:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1133:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1128:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 355,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1127:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 356,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1140:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1127:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 361,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1241:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "1216:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1216:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1267:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 366,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "1366:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "1341:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1341:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 363,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1384:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 364,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1389:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1384:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 369,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "1501:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "1476:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1476:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1528:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 374,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "1636:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "1611:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 371,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1664:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 372,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1669:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "1664:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 377,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "1767:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "1742:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1788:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 385,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "1912:30:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "1887:72:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1887:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1946:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1951:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "1946:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 382,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1945:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 383,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1958:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1945:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 393,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2047:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2022:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 386,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2022:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2067:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2072:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2067:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 390,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2066:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 391,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2079:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2066:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 396,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2119:32:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2094:64:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 394,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2094:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2154:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 399,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "2196:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2171:128:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 397,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2171:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2233:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2367:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2351:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2351:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2442:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2426:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2426:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2497:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2482:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 404,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2482:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2547:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2532:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 406,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2532:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f259a29e",
									"id": 409,
									"mutability": "mutable",
									"name": "baseURI_",
									"nameLocation": "2577:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2563:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 408,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2563:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5503a0e8",
									"id": 412,
									"mutability": "mutable",
									"name": "uriSuffix",
									"nameLocation": "2606:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2592:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 410,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2592:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 411,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2618:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 417,
									"mutability": "mutable",
									"name": "nftsredeemed",
									"nameLocation": "2653:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2627:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 416,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 413,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2636:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2627:25:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 414,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2645:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 415,
											"nodeType": "ArrayTypeName",
											"src": "2645:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 419,
									"mutability": "mutable",
									"name": "counter",
									"nameLocation": "2677:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2672:12:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 418,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2672:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "onlyapprovedcontractaddress",
									"nameLocation": "2716:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2691:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 422,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 420,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2700:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2691:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 421,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2710:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_checkredemmedphysicalitem",
									"nameLocation": "2800:26:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2750:76:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 428,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 424,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2758:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2750:41:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 427,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 425,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2777:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2769:21:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 426,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2785:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "2883:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2847:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 432,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2855:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2847:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 431,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2866:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "2950:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "2914:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 436,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 434,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2922:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2914:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 435,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2933:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "3073:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "3028:60:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
										"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef)"
									},
									"typeName": {
										"id": 441,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3036:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3028:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
											"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 440,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 439,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"3047:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 333,
												"src": "3047:16:3"
											},
											"referencedDeclaration": 333,
											"src": "3047:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage_ptr",
												"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 448,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3199:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2210,
									"src": "3146:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 447,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 443,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3154:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3146:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 446,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 444,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3173:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3165:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 445,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3184:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "3286:102:3",
										"statements": [
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "3297:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3305:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3297:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "3297:13:3"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "3321:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 460,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3331:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3321:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "3321:17:3"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3349:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 464,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3365:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3365:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3349:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "3349:31:3"
											}
										]
									},
									"id": 469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3256:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3242:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3242:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3277:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3263:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:44:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3286:0:3"
									},
									"scope": 2210,
									"src": "3230:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "3466:27:3",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3484:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 473,
												"id": 475,
												"nodeType": "Return",
												"src": "3477:8:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "3410:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3423:2:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:9:3"
									},
									"scope": 2210,
									"src": "3401:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "3571:39:3",
										"statements": [
											{
												"expression": {
													"id": 482,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "3589:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "3582:20:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "3516:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3528:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3562:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3561:9:3"
									},
									"scope": 2210,
									"src": "3507:103:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										176
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "3692:253:3",
										"statements": [
											{
												"id": 498,
												"nodeType": "UncheckedBlock",
												"src": "3848:90:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 491,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3880:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 492,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3896:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3880:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 494,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "3911:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3911:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3880:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 490,
														"id": 497,
														"nodeType": "Return",
														"src": "3873:53:3"
													}
												]
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3631:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3665:8:3"
									},
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3642:2:3"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3683:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3682:9:3"
									},
									"scope": 2210,
									"src": "3622:323:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "4107:103:3",
										"statements": [
											{
												"id": 511,
												"nodeType": "UncheckedBlock",
												"src": "4128:75:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 506,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "4160:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 507,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4176:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4176:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4160:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 505,
														"id": 510,
														"nodeType": "Return",
														"src": "4153:38:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "3953:84:3",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "4052:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:2:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4098:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4097:9:3"
									},
									"scope": 2210,
									"src": "4043:167:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "4288:38:3",
										"statements": [
											{
												"expression": {
													"id": 518,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "4306:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "4299:19:3"
											}
										]
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "4233:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4245:2:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4279:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4278:9:3"
									},
									"scope": 2210,
									"src": "4224:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										214
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "4420:161:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 529,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "4435:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4452:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4444:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 530,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4444:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4444:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4435:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "IfStatement",
												"src": "4431:69:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 536,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "4464:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4491:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "4464:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 535,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "4456:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4456:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 539,
													"nodeType": "ExpressionStatement",
													"src": "4456:44:3"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 541,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4518:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 543,
														"indexExpression": {
															"id": 542,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4537:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4518:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 544,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4546:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4518:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 528,
												"id": 546,
												"nodeType": "Return",
												"src": "4511:62:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4348:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 525,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4393:8:3"
									},
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4366:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4358:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4358:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:15:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4411:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4411:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4410:9:3"
									},
									"scope": 2210,
									"src": "4339:242:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "4664:108:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 555,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "4683:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 557,
																	"indexExpression": {
																		"id": 556,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4702:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4683:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 558,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "4712:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4683:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 560,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4682:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 561,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4737:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4682:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 563,
												"nodeType": "Return",
												"src": "4675:89:3"
											}
										]
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "4603:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4625:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4617:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4617:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4616:15:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4655:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4654:9:3"
									},
									"scope": 2210,
									"src": "4594:178:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "4856:108:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 572,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "4875:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 574,
																	"indexExpression": {
																		"id": 573,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "4894:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4875:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 575,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "4904:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4875:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 577,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4874:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 578,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4929:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4874:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 580,
												"nodeType": "Return",
												"src": "4867:89:3"
											}
										]
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "4795:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4817:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "4809:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4808:15:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "4847:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:9:3"
									},
									"scope": 2210,
									"src": "4786:178:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "5041:74:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 591,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "5066:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 593,
																"indexExpression": {
																	"id": 592,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "5085:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5066:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 594,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "5095:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5066:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5059:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 589,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "5059:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5059:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 588,
												"id": 597,
												"nodeType": "Return",
												"src": "5052:55:3"
											}
										]
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "4987:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5003:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4995:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4994:15:3"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5033:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 586,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5033:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5032:8:3"
									},
									"scope": 2210,
									"src": "4978:137:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5190:343:3",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "5209:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "5201:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"baseExpression": {
														"id": 608,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "5218:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 610,
													"indexExpression": {
														"id": 609,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5237:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5218:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5201:42:3"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "5262:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "5254:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5254:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"nodeType": "VariableDeclarationStatement",
												"src": "5254:17:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5356:42:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5371:16:3",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "5384:3:3"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "5371:9:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 603,
														"isOffset": false,
														"isSlot": false,
														"src": "5384:3:3",
														"valueSize": 1
													},
													{
														"declaration": 613,
														"isOffset": false,
														"isSlot": false,
														"src": "5371:9:3",
														"valueSize": 1
													}
												],
												"id": 615,
												"nodeType": "InlineAssembly",
												"src": "5347:51:3"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 616,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5408:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 617,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "5418:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 618,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "5427:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5418:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 620,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5417:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 621,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "5455:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 622,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "5468:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5455:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 624,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5454:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5417:63:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5408:72:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "5408:72:3"
											},
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 628,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5491:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 630,
														"indexExpression": {
															"id": 629,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "5510:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5491:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 631,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5519:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5491:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "5491:34:3"
											}
										]
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "5138:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5154:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5146:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "5168:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5161:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 602,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5161:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5145:27:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5190:0:3"
									},
									"scope": 2210,
									"src": "5129:404:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										183
									],
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "5638:271:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "5679:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5694:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "5679:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "5756:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5771:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "5756:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5679:102:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 650,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "5833:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5848:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "5833:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5679:179:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 642,
												"id": 654,
												"nodeType": "Return",
												"src": "5659:199:3"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5556:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 639,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5614:8:3"
									},
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5581:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5574:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5574:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5573:20:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5632:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5632:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5631:6:3"
									},
									"scope": 2210,
									"src": "5547:362:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5991:31:3",
										"statements": [
											{
												"expression": {
													"id": 662,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "6009:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 661,
												"id": 663,
												"nodeType": "Return",
												"src": "6002:12:3"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "5931:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 658,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5958:8:3"
									},
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5935:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5976:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5975:15:3"
									},
									"scope": 2210,
									"src": "5922:100:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										290
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "6107:33:3",
										"statements": [
											{
												"expression": {
													"id": 671,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 407,
													"src": "6125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 670,
												"id": 672,
												"nodeType": "Return",
												"src": "6118:14:3"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6045:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6074:8:3"
									},
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6051:2:3"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6092:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6092:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6091:15:3"
									},
									"scope": 2210,
									"src": "6036:104:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										297
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "6242:249:3",
										"statements": [
											{
												"condition": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6257:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 683,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "6266:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 682,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "6258:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6258:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "6253:68:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 687,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "6284:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6312:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "6284:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 686,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "6276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6276:45:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 690,
													"nodeType": "ExpressionStatement",
													"src": "6276:45:3"
												}
											},
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "6348:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 718,
														"src": "6334:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 692,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6334:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 694,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6358:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6358:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6334:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 699,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "6392:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6386:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 697,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6386:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6386:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6401:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6386:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6411:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6386:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6481:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6386:97:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 708,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "6439:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 710,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6458:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 709,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2201,
																			"src": "6448:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6448:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 712,
																		"name": "uriSuffix",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "6467:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"expression": {
																		"id": 706,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "6422:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6426:12:3",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "6422:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6422:55:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6415:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 704,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "6415:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6415:63:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 681,
												"id": 717,
												"nodeType": "Return",
												"src": "6379:104:3"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "6163:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6209:8:3"
									},
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6180:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "6172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6171:17:3"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "6227:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6227:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6226:15:3"
									},
									"scope": 2210,
									"src": "6154:337:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "6819:34:3",
										"statements": [
											{
												"expression": {
													"id": 725,
													"name": "baseURI_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "6837:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 724,
												"id": 726,
												"nodeType": "Return",
												"src": "6830:15:3"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "6504:238:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "6762:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6770:2:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "6804:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 722,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6804:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6803:15:3"
									},
									"scope": 2210,
									"src": "6753:100:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "6933:41:3",
										"statements": [
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 735,
														"name": "baseURI_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6944:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 736,
														"name": "_newBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "6955:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6944:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "6944:22:3"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 733,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 732,
												"name": "onlyOwner",
												"nameLocations": [
													"6923:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6923:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6923:9:3"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "6878:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "_newBaseURI",
												"nameLocation": "6903:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "6889:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6889:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6888:27:3"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6933:0:3"
									},
									"scope": 2210,
									"src": "6869:105:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "7054:41:3",
										"statements": [
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "uriSuffix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "7065:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 748,
														"name": "_uriSuffix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "7077:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7065:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "7065:22:3"
											}
										]
									},
									"functionSelector": "16ba10e0",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 745,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 744,
												"name": "onlyOwner",
												"nameLocations": [
													"7044:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7044:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "7044:9:3"
										}
									],
									"name": "setUriSuffix",
									"nameLocation": "6996:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "_uriSuffix",
												"nameLocation": "7023:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "7009:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7008:26:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7054:0:3"
									},
									"scope": 2210,
									"src": "6987:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "7169:75:3",
										"statements": [
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 759,
															"name": "onlyapprovedcontractaddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7189:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 761,
														"indexExpression": {
															"id": 760,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "7217:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7189:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7223:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7189:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "7189:38:3"
											}
										]
									},
									"functionSelector": "b6b285d9",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 756,
												"name": "onlyOwner",
												"nameLocations": [
													"7160:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7160:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "7160:9:3"
										}
									],
									"name": "setapprovedcontractaddress",
									"nameLocation": "7112:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "7147:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "7139:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7138:13:3"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7169:0:3"
									},
									"scope": 2210,
									"src": "7103:141:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "7342:153:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 774,
																	"name": "onlyapprovedcontractaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "7369:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 777,
																"indexExpression": {
																	"expression": {
																		"id": 775,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7397:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7401:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7397:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7369:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7411:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "7369:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206d696e74",
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7417:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
																"typeString": "literal_string \"you are not approved  to mint\""
															},
															"value": "you are not approved  to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
																"typeString": "literal_string \"you are not approved  to mint\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7361:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7361:88:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "7361:88:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 784,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "7467:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7472:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1851,
															1866
														],
														"referencedDeclaration": 1866,
														"src": "7457:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7457:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "7457:22:3"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "7266:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7289:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "7281:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7311:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "7303:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7303:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7270:64:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7342:0:3"
									},
									"scope": 2210,
									"src": "7257:238:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "7556:196:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 796,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "7583:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 795,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "7575:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7575:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 798,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7591:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7595:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7591:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7575:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7567:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7567:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "7567:35:3"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 803,
																"name": "_checkredemmedphysicalitem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "7613:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 807,
															"indexExpression": {
																"expression": {
																	"id": 804,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7640:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7644:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7640:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7613:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 808,
														"indexExpression": {
															"id": 806,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "7652:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7613:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7659:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7613:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "7613:50:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "7706:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 812,
																"name": "nftsredeemed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "7676:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 815,
															"indexExpression": {
																"expression": {
																	"id": 813,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7689:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7693:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7689:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7676:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7701:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7676:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7676:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "7676:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "7736:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1940,
															2093
														],
														"referencedDeclaration": 1940,
														"src": "7730:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7730:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "7730:12:3"
											}
										]
									},
									"functionSelector": "dc76668d",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemPhysicalItem",
									"nameLocation": "7518:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "7543:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "7537:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7537:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7536:13:3"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7556:0:3"
									},
									"scope": 2210,
									"src": "7509:243:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "7845:65:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 834,
															"name": "_checkredemmedphysicalitem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7864:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 836,
														"indexExpression": {
															"id": 835,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "7891:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7864:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 838,
													"indexExpression": {
														"id": 837,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "7896:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7864:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 833,
												"id": 839,
												"nodeType": "Return",
												"src": "7857:45:3"
											}
										]
									},
									"functionSelector": "8370d004",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkredemmedphysicalitem",
									"nameLocation": "7770:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "7801:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "7796:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7796:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "7816:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "7808:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7795:25:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "7840:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7840:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7839:6:3"
									},
									"scope": 2210,
									"src": "7760:150:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "8005:41:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 849,
														"name": "nftsredeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "8021:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 851,
													"indexExpression": {
														"id": 850,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "8034:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8021:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 848,
												"id": 852,
												"nodeType": "Return",
												"src": "8014:24:3"
											}
										]
									},
									"functionSelector": "bf1e5e9e",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkredeemednftid",
									"nameLocation": "7939:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "7966:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7958:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7957:13:3"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7990:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 845,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7990:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 846,
													"nodeType": "ArrayTypeName",
													"src": "7990:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7989:16:3"
									},
									"scope": 2210,
									"src": "7930:116:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										221
									],
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "8138:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 867,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "8191:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 866,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "8172:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8172:27:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8164:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 864,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "8164:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8164:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8156:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 862,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8156:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8156:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 861,
												"id": 871,
												"nodeType": "Return",
												"src": "8149:52:3"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "8066:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 858,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8111:8:3"
									},
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8082:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "8074:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8073:17:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "8129:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8128:9:3"
									},
									"scope": 2210,
									"src": "8057:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "8316:73:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 883,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "8372:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 882,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "8353:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8353:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8334:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$171_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8334:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 880,
												"id": 886,
												"nodeType": "Return",
												"src": "8327:54:3"
											}
										]
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "8232:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8253:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8245:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8245:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8244:17:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8293:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 877,
														"name": "TokenOwnership",
														"nameLocations": [
															"8293:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 171,
														"src": "8293:14:3"
													},
													"referencedDeclaration": 171,
													"src": "8293:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8292:23:3"
									},
									"scope": 2210,
									"src": "8223:166:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8494:70:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 897,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "8531:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 899,
															"indexExpression": {
																"id": 898,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "8549:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8531:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8512:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$171_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8512:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 895,
												"id": 901,
												"nodeType": "Return",
												"src": "8505:51:3"
											}
										]
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "8412:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8433:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8425:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8424:15:3"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8471:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 892,
														"name": "TokenOwnership",
														"nameLocations": [
															"8471:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 171,
														"src": "8471:14:3"
													},
													"referencedDeclaration": 171,
													"src": "8471:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8470:23:3"
									},
									"scope": 2210,
									"src": "8403:161:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "8663:55:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 910,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8681:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 912,
														"indexExpression": {
															"id": 911,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "8699:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8681:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8709:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8681:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 909,
												"id": 915,
												"nodeType": "Return",
												"src": "8674:36:3"
											}
										]
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "8587:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8619:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "8611:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8610:15:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "8657:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8657:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8656:6:3"
									},
									"scope": 2210,
									"src": "8578:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "8796:132:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 922,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8811:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 924,
														"indexExpression": {
															"id": 923,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "8829:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8811:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8811:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "8807:114:3",
												"trueBody": {
													"id": 935,
													"nodeType": "Block",
													"src": "8842:79:3",
													"statements": [
														{
															"expression": {
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 927,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "8857:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 929,
																	"indexExpression": {
																		"id": 928,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8875:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8857:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 931,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "8903:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 930,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "8884:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8884:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8857:52:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ExpressionStatement",
															"src": "8857:52:3"
														}
													]
												}
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "8741:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8772:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8764:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8763:15:3"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8796:0:3"
									},
									"scope": 2210,
									"src": "8732:196:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "9025:1113:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 945,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "9040:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9040:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 947,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "9059:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9040:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "9036:1037:3",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "9068:1005:3",
													"statements": [
														{
															"expression": {
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 949,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "9083:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 950,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "9092:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 952,
																	"indexExpression": {
																		"id": 951,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "9110:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9092:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9083:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "9083:35:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 955,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "9218:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9228:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9218:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 996,
															"nodeType": "IfStatement",
															"src": "9214:772:3",
															"trueBody": {
																"id": 995,
																"nodeType": "Block",
																"src": "9231:755:3",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 958,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "9254:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 959,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "9265:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9254:24:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 966,
																		"nodeType": "IfStatement",
																		"src": "9250:77:3",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 962,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 148,
																							"src": "9288:29:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 963,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9318:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "9288:38:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 961,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2209,
																					"src": "9280:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9280:47:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 965,
																			"nodeType": "ExpressionStatement",
																			"src": "9280:47:3"
																		}
																	},
																	{
																		"body": {
																			"id": 993,
																			"nodeType": "Block",
																			"src": "9373:598:3",
																			"statements": [
																				{
																					"id": 974,
																					"nodeType": "UncheckedBlock",
																					"src": "9396:98:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 972,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 967,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 943,
																									"src": "9433:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 968,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 433,
																										"src": "9442:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 971,
																									"indexExpression": {
																										"id": 970,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "9460:9:3",
																										"subExpression": {
																											"id": 969,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 940,
																											"src": "9462:7:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "9442:28:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "9433:37:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 973,
																							"nodeType": "ExpressionStatement",
																							"src": "9433:37:3"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 977,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 975,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 943,
																							"src": "9520:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 976,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9530:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9520:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 979,
																					"nodeType": "IfStatement",
																					"src": "9516:25:3",
																					"trueBody": {
																						"id": 978,
																						"nodeType": "Continue",
																						"src": "9533:8:3"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 984,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 982,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 980,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 943,
																								"src": "9568:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 981,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 366,
																								"src": "9577:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9568:24:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 983,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9596:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9568:29:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 987,
																					"nodeType": "IfStatement",
																					"src": "9564:48:3",
																					"trueBody": {
																						"expression": {
																							"id": 985,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 943,
																							"src": "9606:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 944,
																						"id": 986,
																						"nodeType": "Return",
																						"src": "9599:13:3"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 989,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 148,
																									"src": "9912:29:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 990,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "9942:8:3",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "9912:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 988,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2209,
																							"src": "9904:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9904:47:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 992,
																					"nodeType": "ExpressionStatement",
																					"src": "9904:47:3"
																				}
																			]
																		},
																		"id": 994,
																		"nodeType": "ForStatement",
																		"src": "9364:607:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 997,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "10017:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 998,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "10026:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10017:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10045:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10017:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "10013:48:3",
															"trueBody": {
																"expression": {
																	"id": 1002,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "10055:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 944,
																"id": 1003,
																"nodeType": "Return",
																"src": "10048:13:3"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1008,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "10091:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10121:8:3",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "10091:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1007,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "10083:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10083:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "10083:47:3"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "8951:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8978:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "8970:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8969:17:3"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "9017:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "9009:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9009:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9008:16:3"
									},
									"scope": 2210,
									"src": "8942:1196:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "10251:267:3",
										"statements": [
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1021,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "10262:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10272:4:3",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 164,
														"src": "10262:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1028,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "10295:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10287:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1026,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "10287:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10287:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10279:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1024,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10279:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10279:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10262:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "10262:41:3"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1033,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "10314:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10324:14:3",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 166,
														"src": "10314:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1038,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "10348:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1039,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "10358:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10348:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10341:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1036,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "10341:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10341:41:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "10314:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "10314:68:3"
											},
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1044,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "10393:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10403:6:3",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 168,
														"src": "10393:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "10412:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1048,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "10421:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10412:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10440:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10412:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10393:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "10393:48:3"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1054,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "10452:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10462:9:3",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 170,
														"src": "10452:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1059,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "10481:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1060,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "10491:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10481:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10474:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1057,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "10474:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10474:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "10452:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "10452:58:3"
											}
										]
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "10161:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "10188:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "10180:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10179:16:3"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "10240:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "10218:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "TokenOwnership",
														"nameLocations": [
															"10218:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 171,
														"src": "10218:14:3"
													},
													"referencedDeclaration": 171,
													"src": "10218:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10217:33:3"
									},
									"scope": 2210,
									"src": "10152:366:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "10628:354:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10648:327:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10760:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10773:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "10780:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "10760:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10891:73:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10904:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "10918:23:3"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "10943:9:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10943:11:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10914:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10914:41:3"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "10957:5:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10911:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10911:52:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10901:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10901:63:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10891:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 393,
														"isOffset": false,
														"isSlot": false,
														"src": "10780:16:3",
														"valueSize": 1
													},
													{
														"declaration": 361,
														"isOffset": false,
														"isSlot": false,
														"src": "10918:23:3",
														"valueSize": 1
													},
													{
														"declaration": 1070,
														"isOffset": false,
														"isSlot": false,
														"src": "10957:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1068,
														"isOffset": false,
														"isSlot": false,
														"src": "10760:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1068,
														"isOffset": false,
														"isSlot": false,
														"src": "10773:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1068,
														"isOffset": false,
														"isSlot": false,
														"src": "10904:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1073,
														"isOffset": false,
														"isSlot": false,
														"src": "10891:6:3",
														"valueSize": 1
													}
												],
												"id": 1075,
												"nodeType": "InlineAssembly",
												"src": "10639:336:3"
											}
										]
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10541:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10560:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "10583:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10575:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10575:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10559:30:3"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10620:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "10612:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10611:16:3"
									},
									"scope": 2210,
									"src": "10532:450:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "11081:238:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11167:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11245:56:3",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "11259:24:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "11288:8:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11298:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11285:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11285:15:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "11255:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11255:46:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11245:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 369,
														"isOffset": false,
														"isSlot": false,
														"src": "11259:24:3",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "11288:8:3",
														"valueSize": 1
													},
													{
														"declaration": 1082,
														"isOffset": false,
														"isSlot": false,
														"src": "11245:6:3",
														"valueSize": 1
													}
												],
												"id": 1084,
												"nodeType": "InlineAssembly",
												"src": "11158:154:3"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "11004:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "11033:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "11025:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11025:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11024:18:3"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11073:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "11065:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11065:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11064:16:3"
									},
									"scope": 2210,
									"src": "10995:324:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										257
									],
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "11411:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "11431:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "11435:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11444:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1094,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1880,
															1929
														],
														"referencedDeclaration": 1929,
														"src": "11422:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11422:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "11422:27:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "11342:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1092,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11402:8:3"
									},
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11358:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "11350:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11370:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "11362:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11362:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11349:29:3"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11411:0:3"
									},
									"scope": 2210,
									"src": "11333:124:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										271
									],
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "11556:142:3",
										"statements": [
											{
												"condition": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11571:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1110,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "11580:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1109,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "11572:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11572:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "11567:73:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1114,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "11598:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11631:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "11598:41:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1113,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "11590:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11590:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1117,
													"nodeType": "ExpressionStatement",
													"src": "11590:50:3"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1119,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "11660:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
																"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef storage ref)"
															}
														},
														"id": 1121,
														"indexExpression": {
															"id": 1120,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "11676:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11660:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage",
															"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef storage ref"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11685:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 332,
													"src": "11660:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1123,
												"nodeType": "Return",
												"src": "11653:37:3"
											}
										]
									},
									"functionSelector": "081812fc",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "11480:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11529:8:3"
									},
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11500:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "11492:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11492:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11491:17:3"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "11547:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11547:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11546:9:3"
									},
									"scope": 2210,
									"src": "11471:227:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										264
									],
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "11795:150:3",
										"statements": [
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1133,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "11806:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1137,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1134,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "11825:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11825:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11806:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1138,
														"indexExpression": {
															"id": 1136,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "11846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11806:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1139,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "11858:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11806:60:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "11806:60:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1143,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2191,
																"src": "11897:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11897:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "11918:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "11928:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1142,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "11882:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11882:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "EmitStatement",
												"src": "11877:60:3"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "11720:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11786:8:3"
									},
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11746:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "11738:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11761:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "11756:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11756:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11737:33:3"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11795:0:3"
									},
									"scope": 2210,
									"src": "11711:234:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										280
									],
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "12061:61:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1160,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "12079:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1162,
														"indexExpression": {
															"id": 1161,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "12098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12079:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1164,
													"indexExpression": {
														"id": 1163,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "12105:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12079:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1165,
												"nodeType": "Return",
												"src": "12072:42:3"
											}
										]
									},
									"functionSelector": "e985e9c5",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "11967:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1156,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12037:8:3"
									},
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11992:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "11984:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11984:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12007:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "11999:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11983:33:3"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "12055:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12055:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12054:6:3"
									},
									"scope": 2210,
									"src": "11958:164:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "12213:290:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1174,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "12228:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12228:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1176,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "12247:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12228:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1207,
												"nodeType": "IfStatement",
												"src": "12224:272:3",
												"trueBody": {
													"id": 1206,
													"nodeType": "Block",
													"src": "12256:240:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "12275:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1179,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "12285:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12275:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1205,
															"nodeType": "IfStatement",
															"src": "12271:214:3",
															"trueBody": {
																"id": 1204,
																"nodeType": "Block",
																"src": "12300:185:3",
																"statements": [
																	{
																		"assignments": [
																			1182
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1182,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "12327:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1204,
																				"src": "12319:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1181,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12319:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1183,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12319:14:3"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 1193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "12403:9:3",
																				"subExpression": {
																					"id": 1192,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1169,
																					"src": "12405:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1194,
																			"nodeType": "ExpressionStatement",
																			"src": "12403:9:3"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 1188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1184,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1182,
																							"src": "12360:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 1185,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 433,
																								"src": "12369:17:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 1187,
																							"indexExpression": {
																								"id": 1186,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1169,
																								"src": "12387:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "12369:26:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12360:35:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1189,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "12359:37:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12400:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12359:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1195,
																		"nodeType": "WhileStatement",
																		"src": "12352:60:3"
																	},
																	{
																		"expression": {
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1196,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1172,
																				"src": "12431:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1199,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1197,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1182,
																						"src": "12440:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 1198,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 366,
																						"src": "12449:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12440:24:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12468:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "12440:29:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12431:38:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1203,
																		"nodeType": "ExpressionStatement",
																		"src": "12431:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "12144:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12160:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "12152:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12151:17:3"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12205:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "12200:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12200:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12199:13:3"
									},
									"scope": 2210,
									"src": "12135:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "12679:497:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12699:470:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12811:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "12824:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "12831:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12820:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12820:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "12811:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12963:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "12980:9:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "12991:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12976:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12976:32:3"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "12963:9:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13092:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "13108:9:3"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "13119:5:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13105:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13105:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "13130:9:3"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "13141:15:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13127:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13127:30:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "13102:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13102:56:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13092:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 393,
														"isOffset": false,
														"isSlot": false,
														"src": "12831:16:3",
														"valueSize": 1
													},
													{
														"declaration": 393,
														"isOffset": false,
														"isSlot": false,
														"src": "12991:16:3",
														"valueSize": 1
													},
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": false,
														"src": "13141:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1215,
														"isOffset": false,
														"isSlot": false,
														"src": "12963:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1215,
														"isOffset": false,
														"isSlot": false,
														"src": "12980:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1215,
														"isOffset": false,
														"isSlot": false,
														"src": "13108:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1215,
														"isOffset": false,
														"isSlot": false,
														"src": "13130:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1213,
														"isOffset": false,
														"isSlot": false,
														"src": "12811:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1213,
														"isOffset": false,
														"isSlot": false,
														"src": "12824:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1213,
														"isOffset": false,
														"isSlot": false,
														"src": "13119:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1218,
														"isOffset": false,
														"isSlot": false,
														"src": "13092:6:3",
														"valueSize": 1
													}
												],
												"id": 1220,
												"nodeType": "InlineAssembly",
												"src": "12690:479:3"
											}
										]
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "12526:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "12569:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "12561:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12603:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "12595:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "12627:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "12619:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12550:93:3"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12671:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "12666:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12666:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12665:13:3"
									},
									"scope": 2210,
									"src": "12517:659:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "13350:324:3",
										"statements": [
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "13386:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "13361:38:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage_ptr",
															"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef"
														},
														"typeName": {
															"id": 1232,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1231,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"13361:16:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 333,
																"src": "13361:16:3"
															},
															"referencedDeclaration": 333,
															"src": "13361:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage_ptr",
																"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1237,
												"initialValue": {
													"baseExpression": {
														"id": 1234,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "13402:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
															"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef storage ref)"
														}
													},
													"id": 1236,
													"indexExpression": {
														"id": 1235,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "13418:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13402:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage",
														"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13361:65:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13541:126:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13556:41:3",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "13579:18:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "13556:19:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13611:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "13636:19:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "13630:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13630:26:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "13611:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1229,
														"isOffset": false,
														"isSlot": false,
														"src": "13611:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1227,
														"isOffset": false,
														"isSlot": false,
														"src": "13556:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1227,
														"isOffset": false,
														"isSlot": false,
														"src": "13636:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1233,
														"isOffset": false,
														"isSlot": true,
														"src": "13579:18:3",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1238,
												"nodeType": "InlineAssembly",
												"src": "13532:135:3"
											}
										]
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "13198:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13233:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "13225:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13225:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13224:17:3"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "13299:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "13291:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "13328:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "13320:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13320:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13290:54:3"
									},
									"scope": 2210,
									"src": "13189:485:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										250
									],
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "13818:2927:3",
										"statements": [
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "13837:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "13829:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13829:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1255,
												"initialValue": {
													"arguments": [
														{
															"id": 1253,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "13878:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "13859:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13859:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13829:57:3"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "13991:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1265,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1242,
																							"src": "14030:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1264,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14022:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 1263,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "14022:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14022:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14014:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1261,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14014:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14014:22:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 1268,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "14039:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14014:41:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14006:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1259,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14006:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14006:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13998:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1257,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13998:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13998:59:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13991:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "13991:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1278,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "14090:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14082:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1276,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14082:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14082:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14074:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1274,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14074:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14074:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1281,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "14115:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14074:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1288,
												"nodeType": "IfStatement",
												"src": "14070:95:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1284,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "14129:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14156:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "14129:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1283,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "14121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14121:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1287,
													"nodeType": "ExpressionStatement",
													"src": "14121:44:3"
												}
											},
											{
												"assignments": [
													1290,
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1290,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "14187:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "14179:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14179:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "14216:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "14208:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1291,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14208:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1294,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "14262:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1293,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "14235:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14235:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14178:92:3"
											},
											{
												"condition": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14369:69:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1298,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "14395:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1299,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "14412:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1300,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "14418:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14418:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1297,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "14370:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14370:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "14365:189:3",
												"trueBody": {
													"condition": {
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14457:44:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1305,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "14475:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1306,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2191,
																		"src": "14481:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14481:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1304,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "14458:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14458:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1315,
													"nodeType": "IfStatement",
													"src": "14453:101:3",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1311,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "14511:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14545:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14511:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1310,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "14503:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14503:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1314,
														"nodeType": "ExpressionStatement",
														"src": "14503:51:3"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1318,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "14589:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1319,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "14595:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "14599:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14608:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1317,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "14567:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14567:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "14567:43:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14685:186:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14719:141:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "14822:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14843:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "14815:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14815:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14815:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "14703:15:3"
															},
															"nodeType": "YulIf",
															"src": "14700:160:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1292,
														"isOffset": false,
														"isSlot": false,
														"src": "14703:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1290,
														"isOffset": false,
														"isSlot": false,
														"src": "14822:19:3",
														"valueSize": 1
													}
												],
												"id": 1324,
												"nodeType": "InlineAssembly",
												"src": "14676:195:3"
											},
											{
												"id": 1381,
												"nodeType": "UncheckedBlock",
												"src": "14891:1175:3",
												"statements": [
													{
														"expression": {
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "14986:26:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1325,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "14988:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1327,
																"indexExpression": {
																	"id": 1326,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "15007:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14988:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1329,
														"nodeType": "ExpressionStatement",
														"src": "14986:26:3"
													},
													{
														"expression": {
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "15055:24:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1330,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "15057:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1332,
																"indexExpression": {
																	"id": 1331,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "15076:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "15057:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1334,
														"nodeType": "ExpressionStatement",
														"src": "15055:24:3"
													},
													{
														"expression": {
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1335,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "15137:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1337,
																"indexExpression": {
																	"id": 1336,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "15155:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "15137:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1339,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "15203:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1340,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 374,
																			"src": "15224:25:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1342,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1242,
																					"src": "15267:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1343,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1244,
																					"src": "15273:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1344,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "15277:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1341,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "15252:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15252:45:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15224:73:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1338,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "15166:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15166:146:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15137:175:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1349,
														"nodeType": "ExpressionStatement",
														"src": "15137:175:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "15432:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1351,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "15454:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15432:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15483:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15432:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1380,
														"nodeType": "IfStatement",
														"src": "15428:627:3",
														"trueBody": {
															"id": 1379,
															"nodeType": "Block",
															"src": "15486:569:3",
															"statements": [
																{
																	"assignments": [
																		1356
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1356,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "15513:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1379,
																			"src": "15505:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1355,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15505:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1360,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1357,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1246,
																			"src": "15527:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15537:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15527:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15505:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1361,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 433,
																				"src": "15660:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1363,
																			"indexExpression": {
																				"id": 1362,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1356,
																				"src": "15678:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15660:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15694:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15660:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1378,
																	"nodeType": "IfStatement",
																	"src": "15656:384:3",
																	"trueBody": {
																		"id": 1377,
																		"nodeType": "Block",
																		"src": "15697:343:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1368,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1366,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1356,
																						"src": "15783:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1367,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 401,
																						"src": "15798:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15783:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1376,
																				"nodeType": "IfStatement",
																				"src": "15779:242:3",
																				"trueBody": {
																					"id": 1375,
																					"nodeType": "Block",
																					"src": "15813:208:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 1373,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1369,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 433,
																										"src": "15945:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1371,
																									"indexExpression": {
																										"id": 1370,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1356,
																										"src": "15963:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "15945:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1372,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1251,
																									"src": "15978:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15945:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1374,
																							"nodeType": "ExpressionStatement",
																							"src": "15945:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "16176:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "16168:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16168:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1388,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "16203:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16195:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1386,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "16195:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16195:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16187:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1384,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16187:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16187:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1391,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "16210:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16187:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16168:58:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16246:368:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16327:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16384:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "16439:25:3"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "16497:4:3"
																	},
																	{
																		"name": "toMasked",
																		"nodeType": "YulIdentifier",
																		"src": "16531:8:3"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "16567:7:3"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nodeType": "YulIdentifier",
																	"src": "16304:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16304:299:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16304:299:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 399,
														"isOffset": false,
														"isSlot": false,
														"src": "16439:25:3",
														"valueSize": 1
													},
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "16497:4:3",
														"valueSize": 1
													},
													{
														"declaration": 1383,
														"isOffset": false,
														"isSlot": false,
														"src": "16531:8:3",
														"valueSize": 1
													},
													{
														"declaration": 1246,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:7:3",
														"valueSize": 1
													}
												],
												"id": 1394,
												"nodeType": "InlineAssembly",
												"src": "16237:377:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1395,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "16628:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16640:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16628:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "16624:58:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1399,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "16651:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16673:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "16651:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1398,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "16643:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16643:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1402,
													"nodeType": "ExpressionStatement",
													"src": "16643:39:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "16716:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "16722:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "16726:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16735:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1404,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "16695:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16695:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "16695:42:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13696:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13809:8:3"
									},
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13727:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "13719:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13750:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "13742:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13771:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "13763:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13763:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13708:77:3"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13818:0:3"
									},
									"scope": 2210,
									"src": "13687:3058:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										241
									],
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "16976:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "17004:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1425,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "17010:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "17014:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17023:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1423,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1431,
															1470
														],
														"referencedDeclaration": 1470,
														"src": "16987:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16987:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "16987:39:3"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "16753:82:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16850:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1421,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16967:8:3"
									},
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16885:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "16877:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16877:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16908:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "16900:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16929:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "16921:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16921:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16866:77:3"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16976:0:3"
									},
									"scope": 2210,
									"src": "16841:193:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										232
									],
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "17212:252:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1444,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "17236:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "17242:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "17246:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1443,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "17223:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17223:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "17223:31:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1449,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "17269:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17272:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17277:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17269:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17287:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17269:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "17265:192:3",
												"trueBody": {
													"condition": {
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "17307:57:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1455,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "17339:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1456,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "17345:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1457,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "17349:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1458,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "17358:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1454,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "17308:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17308:56:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1467,
													"nodeType": "IfStatement",
													"src": "17303:154:3",
													"trueBody": {
														"id": 1466,
														"nodeType": "Block",
														"src": "17366:91:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1462,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 154,
																				"src": "17393:38:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "17432:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "17393:47:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1461,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "17385:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17385:56:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1465,
																"nodeType": "ExpressionStatement",
																"src": "17385:56:3"
															}
														]
													}
												}
											}
										]
									},
									"functionSelector": "b88d4fde",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "17057:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17203:8:3"
									},
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17092:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "17084:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17084:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17115:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "17107:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17107:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17136:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "17128:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17128:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17167:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "17154:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17154:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17073:106:3"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17212:0:3"
									},
									"scope": 2210,
									"src": "17048:416:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "17635:2:3",
										"statements": []
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "17487:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17527:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "17519:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17519:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17550:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "17542:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "17571:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "17563:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17602:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "17594:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17508:109:3"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17635:0:3"
									},
									"scope": 2210,
									"src": "17478:159:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "17806:2:3",
										"statements": []
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "17659:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17698:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "17690:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17721:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "17713:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "17742:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "17734:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17773:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "17765:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17679:109:3"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17806:0:3"
									},
									"scope": 2210,
									"src": "17650:158:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "17990:522:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1528,
															"nodeType": "Block",
															"src": "18142:98:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1520,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "18164:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1522,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1498,
																							"src": "18199:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1521,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "18174:24:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$326_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18174:28:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$326",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "18203:16:3",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 325,
																				"src": "18174:45:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18220:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18174:54:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "18164:64:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1506,
																	"id": 1527,
																	"nodeType": "Return",
																	"src": "18157:71:3"
																}
															]
														},
														"errorName": "",
														"id": 1529,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1519,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1518,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "18124:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1529,
																	"src": "18117:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1517,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "18117:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "18102:39:3"
														},
														"src": "18094:146:3"
													},
													{
														"block": {
															"id": 1545,
															"nodeType": "Block",
															"src": "18269:236:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1533,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1531,
																				"src": "18288:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18295:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "18288:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18305:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "18288:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1543,
																	"nodeType": "IfStatement",
																	"src": "18284:115:3",
																	"trueBody": {
																		"id": 1542,
																		"nodeType": "Block",
																		"src": "18308:91:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1538,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 154,
																								"src": "18335:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1539,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "18374:8:3",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "18335:47:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1537,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2209,
																						"src": "18327:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1540,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18327:56:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1541,
																				"nodeType": "ExpressionStatement",
																				"src": "18327:56:3"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "18422:72:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18452:2:3",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "18456:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18448:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18448:15:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "18471:6:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "18465:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18465:13:3"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "18441:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18441:38:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18441:38:3"
																			}
																		]
																	},
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1531,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "18456:6:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1531,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "18471:6:3",
																			"valueSize": 1
																		}
																	],
																	"id": 1544,
																	"nodeType": "InlineAssembly",
																	"src": "18413:81:3"
																}
															]
														},
														"errorName": "",
														"id": 1546,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1532,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1531,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "18261:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1546,
																	"src": "18248:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "18248:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "18247:21:3"
														},
														"src": "18241:264:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1511,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2191,
																"src": "18051:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18051:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "18072:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "18078:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1515,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "18087:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1508,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "18030:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1507,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "18005:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$326_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18005:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$326",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18034:16:3",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 325,
														"src": "18005:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18005:88:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1547,
												"nodeType": "TryStatement",
												"src": "18001:504:3"
											}
										]
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "17830:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17879:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "17871:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17871:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17902:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "17894:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17894:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "17915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "17941:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17941:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17860:106:3"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "17984:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17984:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17983:6:3"
									},
									"scope": 2210,
									"src": "17821:691:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "18588:2243:3",
										"statements": [
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "18607:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1666,
														"src": "18599:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18599:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1559,
												"initialValue": {
													"id": 1558,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "18622:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18599:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1560,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "18650:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18662:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18650:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1568,
												"nodeType": "IfStatement",
												"src": "18646:53:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1564,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "18673:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18690:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "18673:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1563,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "18665:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18665:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1567,
													"nodeType": "ExpressionStatement",
													"src": "18665:34:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18742:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18734:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18734:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18734:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "18746:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "18750:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1576,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "18764:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "18712:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18712:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "18712:61:3"
											},
											{
												"id": 1655,
												"nodeType": "UncheckedBlock",
												"src": "18961:1792:3",
												"statements": [
													{
														"expression": {
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1579,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "19212:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1581,
																"indexExpression": {
																	"id": 1580,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "19230:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19212:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "19283:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1585,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1553,
																					"src": "19325:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1584,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "19304:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19304:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1590,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19360:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19352:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1588,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "19352:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1591,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19352:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1592,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1551,
																					"src": "19364:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19368:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1587,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "19337:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19337:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19304:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1582,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "19246:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19246:139:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19212:173:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1598,
														"nodeType": "ExpressionStatement",
														"src": "19212:173:3"
													},
													{
														"expression": {
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1599,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "19603:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1601,
																"indexExpression": {
																	"id": 1600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "19622:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19603:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1602,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "19629:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1605,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1603,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19642:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1604,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 344,
																							"src": "19647:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19642:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1606,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19641:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19672:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "19641:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1609,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19640:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19629:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19603:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1612,
														"nodeType": "ExpressionStatement",
														"src": "19603:71:3"
													},
													{
														"assignments": [
															1614
														],
														"declarations": [
															{
																"constant": false,
																"id": 1614,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "19793:8:3",
																"nodeType": "VariableDeclaration",
																"scope": 1655,
																"src": "19785:16:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1613,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19785:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1624,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1619,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "19820:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19812:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1617,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "19812:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19812:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19804:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "19804:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19804:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1622,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "19827:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19804:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19785:58:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1625,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "19864:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19876:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19864:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1633,
														"nodeType": "IfStatement",
														"src": "19860:54:3",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1629,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 144,
																			"src": "19887:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19905:8:3",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "19887:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1628,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "19879:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19879:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1632,
															"nodeType": "ExpressionStatement",
															"src": "19879:35:3"
														}
													},
													{
														"assignments": [
															1635
														],
														"declarations": [
															{
																"constant": false,
																"id": 1635,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "19939:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 1655,
																"src": "19931:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1634,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19931:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1639,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1636,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "19945:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1637,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "19960:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19945:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19931:37:3"
													},
													{
														"assignments": [
															1641
														],
														"declarations": [
															{
																"constant": false,
																"id": 1641,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "19991:7:3",
																"nodeType": "VariableDeclaration",
																"scope": 1655,
																"src": "19983:15:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1640,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19983:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1643,
														"initialValue": {
															"id": 1642,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "20001:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19983:30:3"
													},
													{
														"body": {
															"id": 1645,
															"nodeType": "Block",
															"src": "20033:647:3",
															"statements": [
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "20061:451:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20166:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20231:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "20294:25:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20360:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "20405:8:3"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "20449:7:3"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "20135:4:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20135:358:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20135:358:3"
																			}
																		]
																	},
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 399,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "20294:25:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1614,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "20405:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1641,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "20449:7:3",
																			"valueSize": 1
																		}
																	],
																	"id": 1644,
																	"nodeType": "InlineAssembly",
																	"src": "20052:460:3"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "20688:9:3",
																"subExpression": {
																	"id": 1646,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "20690:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1648,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1635,
																"src": "20701:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20688:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1650,
														"nodeType": "DoWhileStatement",
														"src": "20030:676:3"
													},
													{
														"expression": {
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1651,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "20722:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1652,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1635,
																"src": "20738:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20722:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1654,
														"nodeType": "ExpressionStatement",
														"src": "20722:19:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20792:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20784:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1657,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20784:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20784:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1661,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "20796:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1662,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "20800:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1663,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "20814:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1656,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "20763:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20763:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "20763:60:3"
											}
										]
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18535:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18549:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "18541:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18541:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "18561:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "18553:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18553:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18540:30:3"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18588:0:3"
									},
									"scope": 2210,
									"src": "18526:2305:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "20912:1220:3",
										"statements": [
											{
												"assignments": [
													1675
												],
												"declarations": [
													{
														"constant": false,
														"id": 1675,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "20931:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1783,
														"src": "20923:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20923:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1677,
												"initialValue": {
													"id": 1676,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "20946:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20923:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1678,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "20974:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20988:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20980:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1679,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20980:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20980:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20974:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "IfStatement",
												"src": "20970:57:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1685,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "21000:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21018:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "21000:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1684,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "20992:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20992:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1688,
													"nodeType": "ExpressionStatement",
													"src": "20992:35:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1690,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "21042:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21054:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21042:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "21038:53:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1694,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "21065:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21082:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "21065:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1693,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "21057:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21057:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1697,
													"nodeType": "ExpressionStatement",
													"src": "21057:34:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1699,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "21106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1700,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "21117:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21106:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1707,
												"nodeType": "IfStatement",
												"src": "21102:98:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1703,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "21159:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21191:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "21159:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1702,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "21151:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21151:49:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1706,
													"nodeType": "ExpressionStatement",
													"src": "21151:49:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1709,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "21247:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1714,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "21251:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1715,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "21265:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1708,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "21213:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21213:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "21213:61:3"
											},
											{
												"id": 1772,
												"nodeType": "UncheckedBlock",
												"src": "21386:668:3",
												"statements": [
													{
														"expression": {
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1718,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "21612:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1720,
																"indexExpression": {
																	"id": 1719,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "21631:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21612:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1721,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "21638:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1724,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1722,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "21651:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1723,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 344,
																							"src": "21656:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "21651:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1725,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "21650:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21681:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "21650:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1728,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21649:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21638:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21612:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1731,
														"nodeType": "ExpressionStatement",
														"src": "21612:71:3"
													},
													{
														"expression": {
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1732,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "21713:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1734,
																"indexExpression": {
																	"id": 1733,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "21731:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21713:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1736,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "21784:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1738,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1671,
																					"src": "21826:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1737,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "21805:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21805:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1743,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "21861:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1742,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21853:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1741,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "21853:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1744,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "21853:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1745,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1669,
																					"src": "21865:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1746,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "21869:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1740,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "21838:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21838:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21805:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1735,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "21747:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21747:139:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21713:173:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1751,
														"nodeType": "ExpressionStatement",
														"src": "21713:173:3"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1753,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "21928:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1754,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1675,
																			"src": "21942:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1755,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "21957:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21942:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21968:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "21942:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21979:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21971:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1759,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21971:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21971:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1763,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "21983:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1752,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "21908:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21908:78:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1765,
														"nodeType": "EmitStatement",
														"src": "21903:83:3"
													},
													{
														"expression": {
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1766,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "22003:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1767,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "22019:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1768,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "22034:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22019:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22003:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1771,
														"nodeType": "ExpressionStatement",
														"src": "22003:39:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22093:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22085:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1774,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22085:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22085:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "22097:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1779,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "22101:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1780,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "22115:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1773,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "22064:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22064:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "22064:60:3"
											}
										]
									},
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "20852:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20873:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "20865:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "20885:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "20877:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20877:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20864:30:3"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20912:0:3"
									},
									"scope": 2210,
									"src": "20843:1289:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "22265:588:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1794,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "22282:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1795,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "22286:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1793,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "22276:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22276:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "22276:19:3"
											},
											{
												"id": 1849,
												"nodeType": "UncheckedBlock",
												"src": "22308:538:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1798,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1786,
																		"src": "22337:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22340:4:3",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "22337:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22345:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "22337:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22355:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22337:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1848,
														"nodeType": "IfStatement",
														"src": "22333:502:3",
														"trueBody": {
															"id": 1847,
															"nodeType": "Block",
															"src": "22358:477:3",
															"statements": [
																{
																	"assignments": [
																		1804
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1804,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "22385:3:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1847,
																			"src": "22377:11:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1803,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22377:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1806,
																	"initialValue": {
																		"id": 1805,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "22391:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22377:27:3"
																},
																{
																	"assignments": [
																		1808
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1808,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "22431:5:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1847,
																			"src": "22423:13:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1807,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22423:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1812,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1809,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "22439:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1810,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "22445:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22439:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22423:30:3"
																},
																{
																	"body": {
																		"id": 1831,
																		"nodeType": "Block",
																		"src": "22475:218:3",
																		"statements": [
																			{
																				"condition": {
																					"id": 1823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "22502:63:3",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1816,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "22542:1:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1815,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "22534:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1814,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "22534:7:3",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1817,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "22534:10:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1818,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1786,
																								"src": "22546:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1820,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "22550:7:3",
																								"subExpression": {
																									"id": 1819,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1808,
																									"src": "22550:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1821,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1790,
																								"src": "22559:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1813,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1549,
																							"src": "22503:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1822,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "22503:62:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1830,
																				"nodeType": "IfStatement",
																				"src": "22498:176:3",
																				"trueBody": {
																					"id": 1829,
																					"nodeType": "Block",
																					"src": "22567:107:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1825,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 154,
																											"src": "22602:38:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1826,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "22641:8:3",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "22602:47:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1824,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2209,
																									"src": "22594:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1827,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "22594:56:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1828,
																							"nodeType": "ExpressionStatement",
																							"src": "22594:56:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1832,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1808,
																			"src": "22701:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1833,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "22709:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22701:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1835,
																	"nodeType": "DoWhileStatement",
																	"src": "22472:242:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1836,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "22779:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1837,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "22796:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22779:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1846,
																	"nodeType": "IfStatement",
																	"src": "22775:44:3",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1842,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "22816:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1841,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "22809:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1840,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "22809:6:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1843,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22809:9:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1839,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2209,
																				"src": "22801:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22801:18:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1845,
																		"nodeType": "ExpressionStatement",
																		"src": "22801:18:3"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "22154:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22182:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "22174:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22174:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "22203:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "22195:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22195:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "22235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "22222:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22222:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22163:84:3"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22265:0:3"
									},
									"scope": 2210,
									"src": "22145:708:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "23003:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1860,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "23024:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1861,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "23028:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23038:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1859,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1851,
															1866
														],
														"referencedDeclaration": 1851,
														"src": "23014:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23014:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "23014:27:3"
											}
										]
									},
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "22861:70:3",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "22946:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22964:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "22956:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22956:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "22976:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "22968:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22968:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22955:30:3"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23003:0:3"
									},
									"scope": 2210,
									"src": "22937:112:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "23125:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1874,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "23145:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1875,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "23149:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1873,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1880,
															1929
														],
														"referencedDeclaration": 1929,
														"src": "23136:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23136:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "23136:28:3"
											}
										]
									},
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "23070:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23087:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "23079:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23099:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "23091:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23078:29:3"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23125:0:3"
									},
									"scope": 2210,
									"src": "23061:111:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "23298:356:3",
										"statements": [
											{
												"assignments": [
													1890
												],
												"declarations": [
													{
														"constant": false,
														"id": 1890,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "23317:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1928,
														"src": "23309:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1889,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23309:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1894,
												"initialValue": {
													"arguments": [
														{
															"id": 1892,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "23333:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1891,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "23325:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23325:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23309:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1895,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "23358:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1896,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2191,
																"src": "23375:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23375:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1898,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "23398:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23375:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23358:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1914,
												"nodeType": "IfStatement",
												"src": "23354:201:3",
												"trueBody": {
													"condition": {
														"id": 1906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23422:45:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1902,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "23440:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1903,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2191,
																		"src": "23447:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23447:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1901,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "23423:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23423:44:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1913,
													"nodeType": "IfStatement",
													"src": "23418:137:3",
													"trueBody": {
														"id": 1912,
														"nodeType": "Block",
														"src": "23469:86:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1908,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "23496:33:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "23530:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "23496:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1907,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "23488:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23488:51:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1911,
																"nodeType": "ExpressionStatement",
																"src": "23488:51:3"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1915,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "23567:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
																	"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef storage ref)"
																}
															},
															"id": 1917,
															"indexExpression": {
																"id": 1916,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "23583:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23567:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage",
																"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef storage ref"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "23592:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 332,
														"src": "23567:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1919,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "23600:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23567:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "23567:35:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1923,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "23627:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "23634:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "23638:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1922,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "23618:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23618:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "EmitStatement",
												"src": "23613:33:3"
											}
										]
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "23189:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23216:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "23208:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23208:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23237:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "23229:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23229:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "23260:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "23255:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23255:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23197:83:3"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23298:0:3"
									},
									"scope": 2210,
									"src": "23180:474:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "23716:40:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1935,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "23733:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23742:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1934,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1940,
															2093
														],
														"referencedDeclaration": 2093,
														"src": "23727:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23727:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "23727:21:3"
											}
										]
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "23676:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23690:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "23682:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23681:17:3"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23716:0:3"
									},
									"scope": 2210,
									"src": "23667:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "23838:2770:3",
										"statements": [
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "23857:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "23849:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23849:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"arguments": [
														{
															"id": 1950,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "23898:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1949,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "23879:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23879:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23849:57:3"
											},
											{
												"assignments": [
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "23927:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "23919:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1953,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23919:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1959,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "23950:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23942:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1957,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "23942:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23942:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "23934:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1955,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23934:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23934:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23919:52:3"
											},
											{
												"assignments": [
													1964,
													1966
												],
												"declarations": [
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "23993:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "23985:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23985:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "24022:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "24014:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1965,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24014:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1970,
												"initialValue": {
													"arguments": [
														{
															"id": 1968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "24068:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1967,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "24041:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24041:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23984:92:3"
											},
											{
												"condition": {
													"id": 1971,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1944,
													"src": "24093:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1993,
												"nodeType": "IfStatement",
												"src": "24089:325:3",
												"trueBody": {
													"id": 1992,
													"nodeType": "Block",
													"src": "24108:306:3",
													"statements": [
														{
															"condition": {
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "24213:69:3",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1973,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1966,
																			"src": "24239:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1974,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1954,
																			"src": "24256:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1975,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2191,
																				"src": "24262:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24262:19:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1972,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "24214:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24214:68:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1991,
															"nodeType": "IfStatement",
															"src": "24209:193:3",
															"trueBody": {
																"condition": {
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "24305:44:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1980,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1954,
																				"src": "24323:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1981,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2191,
																					"src": "24329:17:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24329:19:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1979,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "24306:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24306:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1990,
																"nodeType": "IfStatement",
																"src": "24301:101:3",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1986,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 150,
																					"src": "24359:33:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "24393:8:3",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "24359:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1985,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "24351:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24351:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1989,
																	"nodeType": "ExpressionStatement",
																	"src": "24351:51:3"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1995,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "24448:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24462:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24454:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1996,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24454:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24454:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2000,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "24466:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24475:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1994,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "24426:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24426:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "24426:51:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "24552:186:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24586:141:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "24689:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24710:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "24682:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24682:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24682:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "24570:15:3"
															},
															"nodeType": "YulIf",
															"src": "24567:160:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1966,
														"isOffset": false,
														"isSlot": false,
														"src": "24570:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1964,
														"isOffset": false,
														"isSlot": false,
														"src": "24689:19:3",
														"valueSize": 1
													}
												],
												"id": 2004,
												"nodeType": "InlineAssembly",
												"src": "24543:195:3"
											},
											{
												"id": 2068,
												"nodeType": "UncheckedBlock",
												"src": "24759:1576:3",
												"statements": [
													{
														"expression": {
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2005,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "25078:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2007,
																"indexExpression": {
																	"id": 2006,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "25097:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "25078:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25107:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2009,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "25112:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25107:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2011,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25106:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25137:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25106:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25078:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2015,
														"nodeType": "ExpressionStatement",
														"src": "25078:60:3"
													},
													{
														"expression": {
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2016,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "25376:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2018,
																"indexExpression": {
																	"id": 2017,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "25394:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "25376:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2020,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1954,
																		"src": "25442:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2021,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 366,
																						"src": "25466:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2022,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "25484:25:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25466:43:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2024,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "25465:45:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2026,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "25528:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2029,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "25542:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2028,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "25534:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2027,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "25534:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "25534:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2031,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1948,
																					"src": "25546:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2025,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "25513:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25513:53:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25465:101:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2019,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "25405:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25405:176:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25376:205:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2036,
														"nodeType": "ExpressionStatement",
														"src": "25376:205:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2037,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "25701:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2038,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "25723:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25701:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25752:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25701:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2067,
														"nodeType": "IfStatement",
														"src": "25697:627:3",
														"trueBody": {
															"id": 2066,
															"nodeType": "Block",
															"src": "25755:569:3",
															"statements": [
																{
																	"assignments": [
																		2043
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2043,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "25782:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2066,
																			"src": "25774:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2042,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "25774:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2047,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2044,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "25796:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25806:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "25796:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "25774:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2048,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 433,
																				"src": "25929:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2050,
																			"indexExpression": {
																				"id": 2049,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2043,
																				"src": "25947:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "25929:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25963:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25929:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2065,
																	"nodeType": "IfStatement",
																	"src": "25925:384:3",
																	"trueBody": {
																		"id": 2064,
																		"nodeType": "Block",
																		"src": "25966:343:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2055,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2053,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2043,
																						"src": "26052:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2054,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 401,
																						"src": "26067:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26052:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2063,
																				"nodeType": "IfStatement",
																				"src": "26048:242:3",
																				"trueBody": {
																					"id": 2062,
																					"nodeType": "Block",
																					"src": "26082:208:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 2060,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2056,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 433,
																										"src": "26214:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2058,
																									"indexExpression": {
																										"id": 2057,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2043,
																										"src": "26232:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "26214:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2059,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1948,
																									"src": "26247:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "26214:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2061,
																							"nodeType": "ExpressionStatement",
																							"src": "26214:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2070,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "26361:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26375:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26367:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2071,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26367:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26367:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2075,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "26379:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2069,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "26352:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26352:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "EmitStatement",
												"src": "26347:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2079,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "26419:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26433:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26425:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2080,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26425:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26425:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2084,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "26437:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26446:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2078,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "26398:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26398:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "26398:50:3"
											},
											{
												"id": 2091,
												"nodeType": "UncheckedBlock",
												"src": "26550:51:3",
												"statements": [
													{
														"expression": {
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "26575:14:3",
															"subExpression": {
																"id": 2088,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "26575:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2090,
														"nodeType": "ExpressionStatement",
														"src": "26575:14:3"
													}
												]
											}
										]
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "23778:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23792:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "23784:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23784:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "23806:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "23801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23801:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23783:37:3"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23838:0:3"
									},
									"scope": 2210,
									"src": "23769:2839:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "26696:466:3",
										"statements": [
											{
												"assignments": [
													2101
												],
												"declarations": [
													{
														"constant": false,
														"id": 2101,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "26715:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "26707:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26707:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2105,
												"initialValue": {
													"baseExpression": {
														"id": 2102,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "26724:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2104,
													"indexExpression": {
														"id": 2103,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "26742:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26724:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26707:41:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2106,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "26763:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26773:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26763:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2114,
												"nodeType": "IfStatement",
												"src": "26759:70:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 2110,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "26784:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26820:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "26784:44:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 2109,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "26776:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26776:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2113,
													"nodeType": "ExpressionStatement",
													"src": "26776:53:3"
												}
											},
											{
												"assignments": [
													2116
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "26848:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "26840:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2117,
												"nodeType": "VariableDeclarationStatement",
												"src": "26840:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "26954:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26969:28:3",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "26988:9:3"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "26969:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2097,
														"isOffset": false,
														"isSlot": false,
														"src": "26988:9:3",
														"valueSize": 1
													},
													{
														"declaration": 2116,
														"isOffset": false,
														"isSlot": false,
														"src": "26969:15:3",
														"valueSize": 1
													}
												],
												"id": 2118,
												"nodeType": "InlineAssembly",
												"src": "26945:63:3"
											},
											{
												"expression": {
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2119,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "27018:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2120,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "27028:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2121,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "27037:30:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27028:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2123,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "27027:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2124,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "27072:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2125,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "27091:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27072:37:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2127,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "27071:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27027:83:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27018:92:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "27018:92:3"
											},
											{
												"expression": {
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2131,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "27121:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2133,
														"indexExpression": {
															"id": 2132,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "27139:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27121:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2134,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "27148:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27121:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2136,
												"nodeType": "ExpressionStatement",
												"src": "27121:33:3"
											}
										]
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "26630:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "26654:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "26646:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26646:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "26668:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "26661:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2096,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "26661:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26645:33:3"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26696:0:3"
									},
									"scope": 2210,
									"src": "26621:541:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "27321:2:3",
										"statements": []
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "27185:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27214:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "27206:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27237:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "27229:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27229:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "27257:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "27250:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2143,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "27250:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27195:86:3"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "27313:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2146,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "27313:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27312:8:3"
									},
									"scope": 2210,
									"src": "27176:147:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "27481:167:3",
										"statements": [
											{
												"assignments": [
													2162
												],
												"declarations": [
													{
														"constant": false,
														"id": 2162,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "27499:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 2181,
														"src": "27492:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2161,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "27492:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2165,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "27518:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2166,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "27541:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "27511:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2163,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "27511:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27511:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27492:68:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2173,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2152,
																		"src": "27597:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2174,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "27603:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2175,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "27607:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2172,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "27586:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27586:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27578:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2170,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27578:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27578:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2178,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "27622:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27578:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2160,
												"id": 2180,
												"nodeType": "Return",
												"src": "27571:69:3"
											}
										]
									},
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "27346:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27379:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "27371:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27371:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27402:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "27394:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27394:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "27423:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "27415:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27415:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27360:89:3"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "27472:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27471:9:3"
									},
									"scope": 2210,
									"src": "27337:311:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2190,
										"nodeType": "Block",
										"src": "27731:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2187,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "27749:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27753:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "27749:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2186,
												"id": 2189,
												"nodeType": "Return",
												"src": "27742:17:3"
											}
										]
									},
									"id": 2191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "27671:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27688:2:3"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "27722:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27722:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27721:9:3"
									},
									"scope": 2210,
									"src": "27662:105:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "27953:1661:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "27973:1634:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28342:31:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28361:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "28355:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28355:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28368:4:3",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28351:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28351:22:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "28346:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28454:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "28460:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28447:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28447:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28447:15:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28521:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "28532:1:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28535:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "28528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28528:12:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "28521:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "28612:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28617:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28605:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28605:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28605:14:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28710:14:3",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "28721:3:3"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "28714:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28973:397:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "28992:18:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "29003:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29008:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "28999:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28999:11:3"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "28992:3:3"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "29156:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29165:2:3",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "29173:4:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "29179:2:3",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "29169:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "29169:13:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29161:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29161:22:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "29148:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29148:36:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29148:36:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "29255:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "29267:4:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29273:2:3",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "29263:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29263:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "29255:4:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "29346:9:3",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "29348:5:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "29340:4:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "29333:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29333:12:3"
																		},
																		"nodeType": "YulIf",
																		"src": "29330:25:3"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "28968:1:3",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "28970:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "28946:21:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "28948:17:3",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "28960:5:3"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "28952:4:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "28942:428:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29386:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "29404:3:3"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "29409:3:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29400:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29390:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29508:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "29519:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29524:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29515:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29515:14:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "29508:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "29584:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29589:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29577:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29577:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29577:19:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "28521:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "28612:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "28721:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "28992:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "29003:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "29156:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "29409:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "29508:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "29519:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2197,
														"isOffset": false,
														"isSlot": false,
														"src": "29584:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2194,
														"isOffset": false,
														"isSlot": false,
														"src": "28960:5:3",
														"valueSize": 1
													}
												],
												"id": 2199,
												"nodeType": "InlineAssembly",
												"src": "27964:1643:3"
											}
										]
									},
									"documentation": {
										"id": 2192,
										"nodeType": "StructuredDocumentation",
										"src": "27775:88:3",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "27878:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27896:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "27888:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27888:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27887:15:3"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "27948:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "27934:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27934:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27933:19:3"
									},
									"scope": 2210,
									"src": "27869:1745:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "29734:112:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29754:85:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29776:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nodeType": "YulIdentifier",
																		"src": "29782:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29769:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29769:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29769:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29817:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29823:4:3",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29810:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29810:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29810:18:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2204,
														"isOffset": false,
														"isSlot": false,
														"src": "29782:13:3",
														"valueSize": 1
													}
												],
												"id": 2207,
												"nodeType": "InlineAssembly",
												"src": "29745:94:3"
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "29622:53:3",
										"text": " @dev For more efficient reverts."
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "29690:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "29705:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "29698:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2203,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29698:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29697:22:3"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29734:0:3"
									},
									"scope": 2210,
									"src": "29681:165:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2211,
							"src": "421:29428:3",
							"usedErrors": [
								138,
								140,
								142,
								144,
								146,
								148,
								150,
								152,
								154,
								156,
								158,
								160,
								162
							]
						}
					],
					"src": "2:29847:3"
				},
				"id": 3
			}
		}
	}
}