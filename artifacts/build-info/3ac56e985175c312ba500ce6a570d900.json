{
	"id": "3ac56e985175c312ba500ce6a570d900",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"chestNft.sol": {
				"content": "\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n\r\ncontract KleptoGnomeLootChest is IERC721A,Ownable {\r\n    \r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n   \r\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant _BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n   \r\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n  \r\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\r\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\r\n\r\n \r\n    // The next token ID to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    string public baseURI_;\r\n    string public uriSuffix = \"\";\r\n    mapping (address=>uint[]) nftsredeemed;\r\n    uint counter;\r\n    mapping (address =>bool) onlyapprovedcontractaddress;\r\n    mapping(address => mapping(uint => bool)) private _checkredemmedphysicalitem;\r\n    \r\n\r\n    \r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n   \r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n  \r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n   \r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    \r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n  \r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        \r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    \r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n   \r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n   \r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    \r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    \r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\r\n    }\r\n\r\n    \r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    \r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        \r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n   \r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    \r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    \r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '';\r\n    }\r\n\r\n \r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n   \r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return baseURI_;\r\n    }\r\n\r\n     \r\n     function setBaseURI(string memory _newBaseURI) public onlyOwner {\r\n        baseURI_ = _newBaseURI;\r\n    }\r\n    \r\n     function setUriSuffix(string memory _uriSuffix) external onlyOwner {\r\n        uriSuffix = _uriSuffix;\r\n    }\r\n\r\n    function setapprovedcontractaddress(address add)external {\r\n       \r\n        onlyapprovedcontractaddress[add] =true;\r\n       \r\n    }\r\n     \r\n    function mint(\r\n        address _to,\r\n        uint256 amount\r\n        \r\n    ) public {\r\n         \r\n     require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\");\r\n     _safeMint(_to, amount);\r\n      \r\n    }\r\n\r\n    \r\n    function redeemPhysicalItem(uint  nftId)public {\r\n        require(ownerOf(nftId)==msg.sender);\r\n        _checkredemmedphysicalitem[msg.sender][nftId]=true; \r\n         nftsredeemed[msg.sender].push(nftId);\r\n   \r\n\r\n        _burn(nftId);  \r\n    }\r\n\r\n    function  checkredemmedphysicalitem(uint nftId)public view returns(bool){\r\n         return _checkredemmedphysicalitem[msg.sender][nftId];\r\n    }\r\n\r\n     \r\n\r\n\r\n     function checkredeemednftid()public view returns(uint[] memory ){\r\n      return nftsredeemed[msg.sender];\r\n    }\r\n   \r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    \r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    \r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    \r\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\r\n        return _packedOwnerships[index] != 0;\r\n    }\r\n\r\n    \r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    \r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\r\n        if (_startTokenId() <= tokenId) {\r\n            packed = _packedOwnerships[tokenId];\r\n            // If the data at the starting slot does not exist, start the scan.\r\n            if (packed == 0) {\r\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\r\n                \r\n                for (;;) {\r\n                    unchecked {\r\n                        packed = _packedOwnerships[--tokenId];\r\n                    }\r\n                    if (packed == 0) continue;\r\n                    if (packed & _BITMASK_BURNED == 0) return packed;\r\n                    // Otherwise, the token is burned, and we must revert.\r\n                    // This handles the case of batch burned tokens, where only the burned bit\r\n                    // of the starting slot is set, and remaining slots are left uninitialized.\r\n                    _revert(OwnerQueryForNonexistentToken.selector);\r\n                }\r\n            }\r\n           \r\n            if (packed & _BITMASK_BURNED == 0) return packed;\r\n        }\r\n        _revert(OwnerQueryForNonexistentToken.selector);\r\n    }\r\n\r\n    \r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & _BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    \r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n   \r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    \r\n    function approve(address to, uint256 tokenId) public payable virtual override {\r\n        _approve(to, tokenId, true);\r\n    }\r\n\r\n    \r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n   \r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n   \r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n   \r\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\r\n        if (_startTokenId() <= tokenId) {\r\n            if (tokenId < _currentIndex) {\r\n                uint256 packed;\r\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\r\n                result = packed & _BITMASK_BURNED == 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    function _isSenderApprovedOrOwner(\r\n        address approvedAddress,\r\n        address owner,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\r\n            // `msgSender == owner || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n   \r\n    function _getApprovedSlotAndAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n   \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n      \r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n           \r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\r\n        assembly {\r\n            // Emit the `Transfer` event.\r\n            log4(\r\n                0, // Start of data (0, since no data).\r\n                0, // End of data (0, since no data).\r\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                from, // `from`.\r\n                toMasked, // `to`.\r\n                tokenId // `tokenId`.\r\n            )\r\n        }\r\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\r\n\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public payable virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\r\n            }\r\n    }\r\n\r\n    \r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n   \r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n   \r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\r\n            }\r\n            assembly {\r\n                revert(add(32, reason), mload(reason))\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\r\n\r\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\r\n\r\n            uint256 end = startTokenId + quantity;\r\n            uint256 tokenId = startTokenId;\r\n\r\n            do {\r\n                assembly {\r\n                    // Emit the `Transfer` event.\r\n                    log4(\r\n                        0, // Start of data (0, since no data).\r\n                        0, // End of data (0, since no data).\r\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                        0, // `address(0)`.\r\n                        toMasked, // `to`.\r\n                        tokenId // `tokenId`.\r\n                    )\r\n                }\r\n                // The `!=` check ensures that large values of `quantity`\r\n                // that overflows uint256 will make the loop run out of gas.\r\n            } while (++tokenId != end);\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n  \r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\r\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\r\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n           \r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n   \r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) _revert(bytes4(0));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n  \r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _approve(to, tokenId, false);\r\n    }\r\n\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        bool approvalCheck\r\n    ) internal virtual {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (approvalCheck && _msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n   \r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n   \r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n       \r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n   \r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    \r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    \r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    \r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a uint256 to its ASCII string decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\r\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\r\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\r\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\r\n            let m := add(mload(0x40), 0xa0)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, m)\r\n            // Assign the `str` to the end.\r\n            str := sub(m, 0x20)\r\n            // Zeroize the slot after the string.\r\n            mstore(str, 0)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := str\r\n\r\n            // We write the string from rightmost digit to leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // prettier-ignore\r\n            for { let temp := value } 1 {} {\r\n                str := sub(str, 1)\r\n                // Write the character to the pointer.\r\n                // The ASCII index of the '0' character is 48.\r\n                mstore8(str, add(48, mod(temp, 10)))\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n                // prettier-ignore\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, str)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            str := sub(str, 0x20)\r\n            // Store the length.\r\n            mstore(str, length)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev For more efficient reverts.\r\n     */\r\n    function _revert(bytes4 errorSelector) internal pure {\r\n        assembly {\r\n            mstore(0x00, errorSelector)\r\n            revert(0x00, 0x04)\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"IERC721A.sol": {
				"content": "\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\ninterface IERC721A {\r\n   \r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    \r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n   \r\n    error BalanceQueryForZeroAddress();\r\n\r\n   \r\n    error MintToZeroAddress();\r\n\r\n    \r\n    error MintZeroQuantity();\r\n\r\n   \r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    \r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    \r\n    error TransferFromIncorrectOwner();\r\n\r\n    \r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n  \r\n    error TransferToZeroAddress();\r\n\r\n   \r\n    error URIQueryForNonexistentToken();\r\n\r\n   \r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    \r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n \r\n\r\n    struct TokenOwnership {\r\n        \r\n        address addr;\r\n        \r\n        uint64 startTimestamp;\r\n       \r\n        bool burned;\r\n        \r\n        uint24 extraData;\r\n    }\r\n\r\n   \r\n    function totalSupply() external view returns (uint256);\r\n\r\n  \r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n   \r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n   \r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n \r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n   \r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n  \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external payable;\r\n\r\n    \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n   \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n   \r\n    function approve(address to, uint256 tokenId) external payable;\r\n\r\n  \r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n   \r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n   \r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n   \r\n    function name() external view returns (string memory);\r\n\r\n    \r\n    function symbol() external view returns (string memory);\r\n\r\n   \r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n   \r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0x93ac89d27a12c97f51960001724c5adb638424ac67ffc02264ab7f7d16865ad8\",\"urls\":[\"bzz-raw://a914beb3cdcede29abf7714738a6c50e2c0e2108b07b79b954cb6a48d13c7ced\",\"dweb:/ipfs/QmSUer9R6GbPgzWQsNhE5Hq2xZBaX63dh2D1YDbTfkRrwK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"chestNft.sol": {
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"chestNft.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC721A.sol\":{\"keccak256\":\"0x93ac89d27a12c97f51960001724c5adb638424ac67ffc02264ab7f7d16865ad8\",\"urls\":[\"bzz-raw://a914beb3cdcede29abf7714738a6c50e2c0e2108b07b79b954cb6a48d13c7ced\",\"dweb:/ipfs/QmSUer9R6GbPgzWQsNhE5Hq2xZBaX63dh2D1YDbTfkRrwK\"]},\"chestNft.sol\":{\"keccak256\":\"0x07bdbafbd709ea5f5ad9296ae7733b1464abcfbb9606cc39382928bc92ec5ac1\",\"urls\":[\"bzz-raw://4489b8d8aa62b54b62ab7db8ce03ba9b2c62a502d3e6a88fed9757f6f8e083e3\",\"dweb:/ipfs/QmcLhrW4ptB5su8Bp1pqjcmXc8NwR2TpZzfeB6i3pBxkDq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"KleptoGnomeLootChest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseURI_",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkredeemednftid",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "checkredemmedphysicalitem",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "redeemPhysicalItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_uriSuffix",
									"type": "string"
								}
							],
							"name": "setUriSuffix",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "setapprovedcontractaddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uriSuffix",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"chestNft.sol\":329:29738  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"chestNft.sol\":2500:2528  string public uriSuffix = \"\" */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  0x06\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"chestNft.sol\":3138:3296  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"chestNft.sol\":3213:3218  name_ */\n  dup2\n    /* \"chestNft.sol\":3205:3210  _name */\n  0x03\n    /* \"chestNft.sol\":3205:3218  _name = name_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_14:\n  pop\n    /* \"chestNft.sol\":3239:3246  symbol_ */\n  dup1\n    /* \"chestNft.sol\":3229:3236  _symbol */\n  0x04\n    /* \"chestNft.sol\":3229:3246  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_15\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_15:\n  pop\n    /* \"chestNft.sol\":3273:3288  _startTokenId() */\n  tag_16\n    /* \"chestNft.sol\":3273:3286  _startTokenId */\n  shl(0x20, tag_17)\n    /* \"chestNft.sol\":3273:3288  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"chestNft.sol\":3257:3270  _currentIndex */\n  0x01\n    /* \"chestNft.sol\":3257:3288  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"chestNft.sol\":3138:3296  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"chestNft.sol\":329:29738  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"chestNft.sol\":3309:3401  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_17:\n    /* \"chestNft.sol\":3365:3372  uint256 */\n  0x00\n    /* \"chestNft.sol\":3309:3401  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_22:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_23:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_24:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_25:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_59:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_61\n  tag_24\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":714:798   */\ntag_60:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_26:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_27:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_28:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_29:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_66\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_28\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1429:1468   */\n  tag_67\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_28\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_30:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_31:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_32:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_71\n    /* \"#utility.yul\":1818:1852   */\n  tag_72\n    /* \"#utility.yul\":1827:1851   */\n  tag_73\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_30\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1818:1852   */\n  tag_31\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1800:1853   */\n  tag_30\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_33:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_34:\n    /* \"#utility.yul\":2056:2095   */\n  tag_76\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_32\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2117:2208   */\n  tag_77\n    /* \"#utility.yul\":2166:2207   */\n  tag_78\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_33\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_29\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_35:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_36:\n    /* \"#utility.yul\":2377:2409   */\n  tag_81\n  tag_35\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2418:2483   */\n  tag_82\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_34\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_37:\n    /* \"#utility.yul\":2555:2675   */\ntag_84:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_87\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_36\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_38:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_90\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_26\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2906:2935   */\n  tag_91\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_27\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_92:\n    /* \"#utility.yul\":3133:3213   */\n  tag_93\n    /* \"#utility.yul\":3189:3211   */\n  tag_94\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_27\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_37\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_89:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_39:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_40:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_97\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_39\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_41:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_99\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_40\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_101\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_22\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_103\n  tag_23\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4038:4094   */\ntag_102:\n    /* \"#utility.yul\":4118:4156   */\n  tag_104\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_25\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4203:4270   */\n  tag_105\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_107\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_108:\n    /* \"#utility.yul\":5144:5211   */\n  tag_109\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_41\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_106)\n    /* \"#utility.yul\":4365:4983   */\ntag_107:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_110\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_26\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_111:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_115\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_40\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_114:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_106:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5309   */\ntag_42:\n    /* \"#utility.yul\":5267:5273   */\n  0x00\n    /* \"#utility.yul\":5300:5302   */\n  0x40\n    /* \"#utility.yul\":5294:5303   */\n  mload\n    /* \"#utility.yul\":5284:5303   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5309   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5315:5432   */\ntag_43:\n    /* \"#utility.yul\":5424:5425   */\n  0x00\n    /* \"#utility.yul\":5421:5422   */\n  dup1\n    /* \"#utility.yul\":5414:5426   */\n  revert\n    /* \"#utility.yul\":5438:5555   */\ntag_44:\n    /* \"#utility.yul\":5547:5548   */\n  0x00\n    /* \"#utility.yul\":5544:5545   */\n  dup1\n    /* \"#utility.yul\":5537:5549   */\n  revert\n    /* \"#utility.yul\":5561:5678   */\ntag_45:\n    /* \"#utility.yul\":5670:5671   */\n  0x00\n    /* \"#utility.yul\":5667:5668   */\n  dup1\n    /* \"#utility.yul\":5660:5672   */\n  revert\n    /* \"#utility.yul\":5684:5801   */\ntag_46:\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5790:5791   */\n  dup1\n    /* \"#utility.yul\":5783:5795   */\n  revert\n    /* \"#utility.yul\":5807:5909   */\ntag_47:\n    /* \"#utility.yul\":5848:5854   */\n  0x00\n    /* \"#utility.yul\":5899:5901   */\n  0x1f\n    /* \"#utility.yul\":5895:5902   */\n  not\n    /* \"#utility.yul\":5890:5892   */\n  0x1f\n    /* \"#utility.yul\":5883:5888   */\n  dup4\n    /* \"#utility.yul\":5879:5893   */\n  add\n    /* \"#utility.yul\":5875:5903   */\n  and\n    /* \"#utility.yul\":5865:5903   */\n  swap1\n  pop\n    /* \"#utility.yul\":5807:5909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5915:6196   */\ntag_48:\n    /* \"#utility.yul\":5998:6025   */\n  tag_123\n    /* \"#utility.yul\":6020:6024   */\n  dup3\n    /* \"#utility.yul\":5998:6025   */\n  tag_47\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5990:5996   */\n  dup2\n    /* \"#utility.yul\":5986:6026   */\n  add\n    /* \"#utility.yul\":6128:6134   */\n  dup2\n    /* \"#utility.yul\":6116:6126   */\n  dup2\n    /* \"#utility.yul\":6113:6135   */\n  lt\n    /* \"#utility.yul\":6092:6110   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6080:6090   */\n  dup3\n    /* \"#utility.yul\":6077:6111   */\n  gt\n    /* \"#utility.yul\":6074:6136   */\n  or\n    /* \"#utility.yul\":6071:6159   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6139:6157   */\n  tag_125\n  tag_23\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6071:6159   */\ntag_124:\n    /* \"#utility.yul\":6179:6189   */\n  dup1\n    /* \"#utility.yul\":6175:6177   */\n  0x40\n    /* \"#utility.yul\":6168:6190   */\n  mstore\n    /* \"#utility.yul\":5958:6196   */\n  pop\n    /* \"#utility.yul\":5915:6196   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6331   */\ntag_49:\n    /* \"#utility.yul\":6236:6242   */\n  0x00\n    /* \"#utility.yul\":6263:6283   */\n  tag_127\n  tag_42\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6253:6283   */\n  swap1\n  pop\n    /* \"#utility.yul\":6292:6325   */\n  tag_128\n    /* \"#utility.yul\":6320:6324   */\n  dup3\n    /* \"#utility.yul\":6312:6318   */\n  dup3\n    /* \"#utility.yul\":6292:6325   */\n  tag_48\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6202:6331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6337:6645   */\ntag_50:\n    /* \"#utility.yul\":6399:6403   */\n  0x00\n    /* \"#utility.yul\":6489:6507   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6481:6487   */\n  dup3\n    /* \"#utility.yul\":6478:6508   */\n  gt\n    /* \"#utility.yul\":6475:6531   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6511:6529   */\n  tag_131\n  tag_23\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6475:6531   */\ntag_130:\n    /* \"#utility.yul\":6549:6578   */\n  tag_132\n    /* \"#utility.yul\":6571:6577   */\n  dup3\n    /* \"#utility.yul\":6549:6578   */\n  tag_47\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6541:6578   */\n  swap1\n  pop\n    /* \"#utility.yul\":6633:6637   */\n  0x20\n    /* \"#utility.yul\":6627:6631   */\n  dup2\n    /* \"#utility.yul\":6623:6638   */\n  add\n    /* \"#utility.yul\":6615:6638   */\n  swap1\n  pop\n    /* \"#utility.yul\":6337:6645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6651:6897   */\ntag_51:\n    /* \"#utility.yul\":6732:6733   */\n  0x00\n    /* \"#utility.yul\":6742:6855   */\ntag_134:\n    /* \"#utility.yul\":6756:6762   */\n  dup4\n    /* \"#utility.yul\":6753:6754   */\n  dup2\n    /* \"#utility.yul\":6750:6763   */\n  lt\n    /* \"#utility.yul\":6742:6855   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6841:6842   */\n  dup1\n    /* \"#utility.yul\":6836:6839   */\n  dup3\n    /* \"#utility.yul\":6832:6843   */\n  add\n    /* \"#utility.yul\":6826:6844   */\n  mload\n    /* \"#utility.yul\":6822:6823   */\n  dup2\n    /* \"#utility.yul\":6817:6820   */\n  dup5\n    /* \"#utility.yul\":6813:6824   */\n  add\n    /* \"#utility.yul\":6806:6845   */\n  mstore\n    /* \"#utility.yul\":6778:6780   */\n  0x20\n    /* \"#utility.yul\":6775:6776   */\n  dup2\n    /* \"#utility.yul\":6771:6781   */\n  add\n    /* \"#utility.yul\":6766:6781   */\n  swap1\n  pop\n    /* \"#utility.yul\":6742:6855   */\n  jump(tag_134)\ntag_136:\n    /* \"#utility.yul\":6889:6890   */\n  0x00\n    /* \"#utility.yul\":6880:6886   */\n  dup5\n    /* \"#utility.yul\":6875:6878   */\n  dup5\n    /* \"#utility.yul\":6871:6887   */\n  add\n    /* \"#utility.yul\":6864:6891   */\n  mstore\n    /* \"#utility.yul\":6713:6897   */\n  pop\n    /* \"#utility.yul\":6651:6897   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6903:7337   */\ntag_52:\n    /* \"#utility.yul\":6992:6997   */\n  0x00\n    /* \"#utility.yul\":7017:7083   */\n  tag_138\n    /* \"#utility.yul\":7033:7082   */\n  tag_139\n    /* \"#utility.yul\":7075:7081   */\n  dup5\n    /* \"#utility.yul\":7033:7082   */\n  tag_50\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7017:7083   */\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7008:7083   */\n  swap1\n  pop\n    /* \"#utility.yul\":7106:7112   */\n  dup3\n    /* \"#utility.yul\":7099:7104   */\n  dup2\n    /* \"#utility.yul\":7092:7113   */\n  mstore\n    /* \"#utility.yul\":7144:7148   */\n  0x20\n    /* \"#utility.yul\":7137:7142   */\n  dup2\n    /* \"#utility.yul\":7133:7149   */\n  add\n    /* \"#utility.yul\":7182:7185   */\n  dup5\n    /* \"#utility.yul\":7173:7179   */\n  dup5\n    /* \"#utility.yul\":7168:7171   */\n  dup5\n    /* \"#utility.yul\":7164:7180   */\n  add\n    /* \"#utility.yul\":7161:7186   */\n  gt\n    /* \"#utility.yul\":7158:7270   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7189:7268   */\n  tag_141\n  tag_46\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7158:7270   */\ntag_140:\n    /* \"#utility.yul\":7279:7331   */\n  tag_142\n    /* \"#utility.yul\":7324:7330   */\n  dup5\n    /* \"#utility.yul\":7319:7322   */\n  dup3\n    /* \"#utility.yul\":7314:7317   */\n  dup6\n    /* \"#utility.yul\":7279:7331   */\n  tag_51\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6998:7337   */\n  pop\n    /* \"#utility.yul\":6903:7337   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7357:7712   */\ntag_53:\n    /* \"#utility.yul\":7424:7429   */\n  0x00\n    /* \"#utility.yul\":7473:7476   */\n  dup3\n    /* \"#utility.yul\":7466:7470   */\n  0x1f\n    /* \"#utility.yul\":7458:7464   */\n  dup4\n    /* \"#utility.yul\":7454:7471   */\n  add\n    /* \"#utility.yul\":7450:7477   */\n  slt\n    /* \"#utility.yul\":7440:7562   */\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7481:7560   */\n  tag_145\n  tag_45\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7440:7562   */\ntag_144:\n    /* \"#utility.yul\":7591:7597   */\n  dup2\n    /* \"#utility.yul\":7585:7598   */\n  mload\n    /* \"#utility.yul\":7616:7706   */\n  tag_146\n    /* \"#utility.yul\":7702:7705   */\n  dup5\n    /* \"#utility.yul\":7694:7700   */\n  dup3\n    /* \"#utility.yul\":7687:7691   */\n  0x20\n    /* \"#utility.yul\":7679:7685   */\n  dup7\n    /* \"#utility.yul\":7675:7692   */\n  add\n    /* \"#utility.yul\":7616:7706   */\n  tag_52\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7607:7706   */\n  swap2\n  pop\n    /* \"#utility.yul\":7430:7712   */\n  pop\n    /* \"#utility.yul\":7357:7712   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7718:8571   */\ntag_5:\n    /* \"#utility.yul\":7817:7823   */\n  0x00\n    /* \"#utility.yul\":7825:7831   */\n  dup1\n    /* \"#utility.yul\":7874:7876   */\n  0x40\n    /* \"#utility.yul\":7862:7871   */\n  dup4\n    /* \"#utility.yul\":7853:7860   */\n  dup6\n    /* \"#utility.yul\":7849:7872   */\n  sub\n    /* \"#utility.yul\":7845:7877   */\n  slt\n    /* \"#utility.yul\":7842:7961   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":7880:7959   */\n  tag_149\n  tag_43\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7842:7961   */\ntag_148:\n    /* \"#utility.yul\":8021:8022   */\n  0x00\n    /* \"#utility.yul\":8010:8019   */\n  dup4\n    /* \"#utility.yul\":8006:8023   */\n  add\n    /* \"#utility.yul\":8000:8024   */\n  mload\n    /* \"#utility.yul\":8051:8069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8043:8049   */\n  dup2\n    /* \"#utility.yul\":8040:8070   */\n  gt\n    /* \"#utility.yul\":8037:8154   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":8073:8152   */\n  tag_151\n  tag_44\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8037:8154   */\ntag_150:\n    /* \"#utility.yul\":8178:8252   */\n  tag_152\n    /* \"#utility.yul\":8244:8251   */\n  dup6\n    /* \"#utility.yul\":8235:8241   */\n  dup3\n    /* \"#utility.yul\":8224:8233   */\n  dup7\n    /* \"#utility.yul\":8220:8242   */\n  add\n    /* \"#utility.yul\":8178:8252   */\n  tag_53\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":8168:8252   */\n  swap3\n  pop\n    /* \"#utility.yul\":7971:8262   */\n  pop\n    /* \"#utility.yul\":8322:8324   */\n  0x20\n    /* \"#utility.yul\":8311:8320   */\n  dup4\n    /* \"#utility.yul\":8307:8325   */\n  add\n    /* \"#utility.yul\":8301:8326   */\n  mload\n    /* \"#utility.yul\":8353:8371   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8345:8351   */\n  dup2\n    /* \"#utility.yul\":8342:8372   */\n  gt\n    /* \"#utility.yul\":8339:8456   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8375:8454   */\n  tag_154\n  tag_44\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8339:8456   */\ntag_153:\n    /* \"#utility.yul\":8480:8554   */\n  tag_155\n    /* \"#utility.yul\":8546:8553   */\n  dup6\n    /* \"#utility.yul\":8537:8543   */\n  dup3\n    /* \"#utility.yul\":8526:8535   */\n  dup7\n    /* \"#utility.yul\":8522:8544   */\n  add\n    /* \"#utility.yul\":8480:8554   */\n  tag_53\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8470:8554   */\n  swap2\n  pop\n    /* \"#utility.yul\":8272:8564   */\n  pop\n    /* \"#utility.yul\":7718:8571   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"chestNft.sol\":329:29738  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"chestNft.sol\":329:29738  contract KleptoGnomeLootChest is IERC721A,Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf0c7b3aa\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf259a29e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdc76668d\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb6b285d9\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x50caa341\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x50caa341\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5503a0e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x16ba10e0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"chestNft.sol\":5455:5817  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":5830:5930  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":11360:11587  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":11222:11346  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"chestNft.sol\":6895:7003  function setUriSuffix(string memory _uriSuffix) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"chestNft.sol\":3530:3853  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":13576:16634  function transferFrom(... */\n    tag_8:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"chestNft.sol\":7156:7394  function mint(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"chestNft.sol\":16730:16923  function safeTransferFrom(... */\n    tag_10:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"chestNft.sol\":7823:7935  function checkredeemednftid()public view returns(uint[] memory ){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":2500:2528  string public uriSuffix = \"\" */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":6777:6882  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"chestNft.sol\":7946:8098  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":4247:4489  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":5944:6048  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":11600:11834  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"chestNft.sol\":7011:7143  function setapprovedcontractaddress(address add)external {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"chestNft.sol\":16937:17353  function safeTransferFrom(... */\n    tag_21:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      stop\n        /* \"chestNft.sol\":6062:6399  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":7408:7651  function redeemPhysicalItem(uint  nftId)public {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"chestNft.sol\":11847:12011  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":7659:7803  function  checkredemmedphysicalitem(uint nftId)public view returns(bool){... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"chestNft.sol\":2471:2493  string public baseURI_ */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      stop\n        /* \"chestNft.sol\":5455:5817  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_37:\n        /* \"chestNft.sol\":5540:5544  bool */\n      0x00\n        /* \"chestNft.sol\":5602:5612  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"chestNft.sol\":5587:5612  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"chestNft.sol\":5587:5598  interfaceId */\n      dup3\n        /* \"chestNft.sol\":5587:5612  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"chestNft.sol\":5587:5689  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_154\n      jumpi\n      pop\n        /* \"chestNft.sol\":5679:5689  0x80ac58cd */\n      0x80ac58cd\n        /* \"chestNft.sol\":5664:5689  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"chestNft.sol\":5664:5675  interfaceId */\n      dup3\n        /* \"chestNft.sol\":5664:5689  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"chestNft.sol\":5587:5689  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_154:\n        /* \"chestNft.sol\":5587:5766  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_155\n      jumpi\n      pop\n        /* \"chestNft.sol\":5756:5766  0x5b5e139f */\n      0x5b5e139f\n        /* \"chestNft.sol\":5741:5766  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"chestNft.sol\":5741:5752  interfaceId */\n      dup3\n        /* \"chestNft.sol\":5741:5766  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"chestNft.sol\":5587:5766  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_155:\n        /* \"chestNft.sol\":5567:5766  return... */\n      swap1\n      pop\n        /* \"chestNft.sol\":5455:5817  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":5830:5930  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"chestNft.sol\":5884:5897  string memory */\n      0x60\n        /* \"chestNft.sol\":5917:5922  _name */\n      0x03\n        /* \"chestNft.sol\":5910:5922  return _name */\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_158\n      jump\t// in\n    tag_159:\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_161\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_160)\n    tag_161:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_162:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_162\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"chestNft.sol\":5830:5930  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":11360:11587  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"chestNft.sol\":11436:11443  address */\n      0x00\n        /* \"chestNft.sol\":11461:11477  _exists(tokenId) */\n      tag_164\n        /* \"chestNft.sol\":11469:11476  tokenId */\n      dup3\n        /* \"chestNft.sol\":11461:11468  _exists */\n      tag_165\n        /* \"chestNft.sol\":11461:11477  _exists(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"chestNft.sol\":11456:11529  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_166\n      jumpi\n        /* \"chestNft.sol\":11479:11529  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_167\n        /* \"chestNft.sol\":11487:11528  ApprovalQueryForNonexistentToken.selector */\n      shl(0xe0, 0xcf4700e4)\n        /* \"chestNft.sol\":11479:11486  _revert */\n      tag_168\n        /* \"chestNft.sol\":11479:11529  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_167:\n        /* \"chestNft.sol\":11456:11529  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n    tag_166:\n        /* \"chestNft.sol\":11549:11564  _tokenApprovals */\n      0x0d\n        /* \"chestNft.sol\":11549:11573  _tokenApprovals[tokenId] */\n      0x00\n        /* \"chestNft.sol\":11565:11572  tokenId */\n      dup4\n        /* \"chestNft.sol\":11549:11573  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":11549:11579  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":11542:11579  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"chestNft.sol\":11360:11587  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":11222:11346  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_55:\n        /* \"chestNft.sol\":11311:11338  _approve(to, tokenId, true) */\n      tag_170\n        /* \"chestNft.sol\":11320:11322  to */\n      dup3\n        /* \"chestNft.sol\":11324:11331  tokenId */\n      dup3\n        /* \"chestNft.sol\":11333:11337  true */\n      0x01\n        /* \"chestNft.sol\":11311:11319  _approve */\n      tag_171\n        /* \"chestNft.sol\":11311:11338  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_170:\n        /* \"chestNft.sol\":11222:11346  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":6895:7003  function setUriSuffix(string memory _uriSuffix) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"chestNft.sol\":6985:6995  _uriSuffix */\n      dup1\n        /* \"chestNft.sol\":6973:6982  uriSuffix */\n      0x06\n        /* \"chestNft.sol\":6973:6995  uriSuffix = _uriSuffix */\n      swap1\n      dup2\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      pop\n        /* \"chestNft.sol\":6895:7003  function setUriSuffix(string memory _uriSuffix) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":3530:3853  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"chestNft.sol\":3591:3598  uint256 */\n      0x00\n        /* \"chestNft.sol\":3819:3834  _startTokenId() */\n      tag_179\n        /* \"chestNft.sol\":3819:3832  _startTokenId */\n      tag_180\n        /* \"chestNft.sol\":3819:3834  _startTokenId() */\n      jump\t// in\n    tag_179:\n        /* \"chestNft.sol\":3804:3816  _burnCounter */\n      sload(0x02)\n        /* \"chestNft.sol\":3788:3801  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":3788:3816  _currentIndex - _burnCounter */\n      sub\n        /* \"chestNft.sol\":3788:3834  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"chestNft.sol\":3781:3834  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"chestNft.sol\":3530:3853  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":13576:16634  function transferFrom(... */\n    tag_69:\n        /* \"chestNft.sol\":13718:13745  uint256 prevOwnershipPacked */\n      0x00\n        /* \"chestNft.sol\":13748:13775  _packedOwnershipOf(tokenId) */\n      tag_182\n        /* \"chestNft.sol\":13767:13774  tokenId */\n      dup3\n        /* \"chestNft.sol\":13748:13766  _packedOwnershipOf */\n      tag_183\n        /* \"chestNft.sol\":13748:13775  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"chestNft.sol\":13718:13775  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"chestNft.sol\":1974:1988  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"chestNft.sol\":13919:13923  from */\n      dup5\n        /* \"chestNft.sol\":13903:13925  uint256(uint160(from)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":13903:13944  uint256(uint160(from)) & _BITMASK_ADDRESS */\n      and\n        /* \"chestNft.sol\":13880:13946  from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS)) */\n      swap4\n      pop\n        /* \"chestNft.sol\":14004:14008  from */\n      dup4\n        /* \"chestNft.sol\":13963:14008  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":13979:13998  prevOwnershipPacked */\n      dup2\n        /* \"chestNft.sol\":13963:14008  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"chestNft.sol\":13959:14054  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_184\n      jumpi\n        /* \"chestNft.sol\":14010:14054  _revert(TransferFromIncorrectOwner.selector) */\n      tag_185\n        /* \"chestNft.sol\":14018:14053  TransferFromIncorrectOwner.selector */\n      shl(0xe0, 0xa1148100)\n        /* \"chestNft.sol\":14010:14017  _revert */\n      tag_168\n        /* \"chestNft.sol\":14010:14054  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_185:\n        /* \"chestNft.sol\":13959:14054  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n    tag_184:\n        /* \"chestNft.sol\":14068:14095  uint256 approvedAddressSlot */\n      0x00\n        /* \"chestNft.sol\":14097:14120  address approvedAddress */\n      dup1\n        /* \"chestNft.sol\":14124:14159  _getApprovedSlotAndAddress(tokenId) */\n      tag_186\n        /* \"chestNft.sol\":14151:14158  tokenId */\n      dup5\n        /* \"chestNft.sol\":14124:14150  _getApprovedSlotAndAddress */\n      tag_187\n        /* \"chestNft.sol\":14124:14159  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_186:\n        /* \"chestNft.sol\":14067:14159  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"chestNft.sol\":14259:14327  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_188\n        /* \"chestNft.sol\":14284:14299  approvedAddress */\n      dup2\n        /* \"chestNft.sol\":14301:14305  from */\n      dup8\n        /* \"chestNft.sol\":14307:14326  _msgSenderERC721A() */\n      tag_189\n        /* \"chestNft.sol\":14307:14324  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":14307:14326  _msgSenderERC721A() */\n      jump\t// in\n    tag_189:\n        /* \"chestNft.sol\":14259:14283  _isSenderApprovedOrOwner */\n      tag_191\n        /* \"chestNft.sol\":14259:14327  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_188:\n        /* \"chestNft.sol\":14254:14443  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_192\n      jumpi\n        /* \"chestNft.sol\":14347:14390  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_193\n        /* \"chestNft.sol\":14364:14368  from */\n      dup7\n        /* \"chestNft.sol\":14370:14389  _msgSenderERC721A() */\n      tag_194\n        /* \"chestNft.sol\":14370:14387  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":14370:14389  _msgSenderERC721A() */\n      jump\t// in\n    tag_194:\n        /* \"chestNft.sol\":14347:14363  isApprovedForAll */\n      tag_138\n        /* \"chestNft.sol\":14347:14390  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_193:\n        /* \"chestNft.sol\":14342:14443  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_195\n      jumpi\n        /* \"chestNft.sol\":14392:14443  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_196\n        /* \"chestNft.sol\":14400:14442  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"chestNft.sol\":14392:14399  _revert */\n      tag_168\n        /* \"chestNft.sol\":14392:14443  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_196:\n        /* \"chestNft.sol\":14342:14443  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_195:\n        /* \"chestNft.sol\":14254:14443  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_192:\n        /* \"chestNft.sol\":14456:14499  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_197\n        /* \"chestNft.sol\":14478:14482  from */\n      dup7\n        /* \"chestNft.sol\":14484:14486  to */\n      dup7\n        /* \"chestNft.sol\":14488:14495  tokenId */\n      dup7\n        /* \"chestNft.sol\":14497:14498  1 */\n      0x01\n        /* \"chestNft.sol\":14456:14477  _beforeTokenTransfers */\n      tag_198\n        /* \"chestNft.sol\":14456:14499  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_197:\n        /* \"chestNft.sol\":14592:14607  approvedAddress */\n      dup1\n        /* \"chestNft.sol\":14589:14749  if approvedAddress {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"chestNft.sol\":14732:14733  0 */\n      0x00\n        /* \"chestNft.sol\":14711:14730  approvedAddressSlot */\n      dup3\n        /* \"chestNft.sol\":14704:14734  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"chestNft.sol\":14589:14749  if approvedAddress {... */\n    tag_199:\n        /* \"chestNft.sol\":14877:14895  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":14877:14901  _packedAddressData[from] */\n      0x00\n        /* \"chestNft.sol\":14896:14900  from */\n      dup8\n        /* \"chestNft.sol\":14877:14901  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"chestNft.sol\":14875:14901  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":14946:14964  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":14946:14968  _packedAddressData[to] */\n      0x00\n        /* \"chestNft.sol\":14965:14967  to */\n      dup7\n        /* \"chestNft.sol\":14946:14968  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"chestNft.sol\":14944:14968  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":15055:15201  _packOwnershipData(... */\n      tag_200\n        /* \"chestNft.sol\":15092:15094  to */\n      dup6\n        /* \"chestNft.sol\":15141:15186  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_201\n        /* \"chestNft.sol\":15156:15160  from */\n      dup9\n        /* \"chestNft.sol\":15162:15164  to */\n      dup9\n        /* \"chestNft.sol\":15166:15185  prevOwnershipPacked */\n      dup8\n        /* \"chestNft.sol\":15141:15155  _nextExtraData */\n      tag_202\n        /* \"chestNft.sol\":15141:15186  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_201:\n        /* \"chestNft.sol\":1572:1580  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":15113:15186  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"chestNft.sol\":15055:15073  _packOwnershipData */\n      tag_203\n        /* \"chestNft.sol\":15055:15201  _packOwnershipData(... */\n      jump\t// in\n    tag_200:\n        /* \"chestNft.sol\":15026:15043  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":15026:15052  _packedOwnerships[tokenId] */\n      0x00\n        /* \"chestNft.sol\":15044:15051  tokenId */\n      dup7\n        /* \"chestNft.sol\":15026:15052  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":15026:15201  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":15372:15373  0 */\n      0x00\n        /* \"chestNft.sol\":1572:1580  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":15321:15340  prevOwnershipPacked */\n      dup5\n        /* \"chestNft.sol\":15321:15368  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"chestNft.sol\":15321:15373  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"chestNft.sol\":15317:15944  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_204\n      jumpi\n        /* \"chestNft.sol\":15394:15413  uint256 nextTokenId */\n      0x00\n        /* \"chestNft.sol\":15426:15427  1 */\n      0x01\n        /* \"chestNft.sol\":15416:15423  tokenId */\n      dup6\n        /* \"chestNft.sol\":15416:15427  tokenId + 1 */\n      add\n        /* \"chestNft.sol\":15394:15427  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"chestNft.sol\":15583:15584  0 */\n      0x00\n        /* \"chestNft.sol\":15549:15566  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":15549:15579  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"chestNft.sol\":15567:15578  nextTokenId */\n      dup4\n        /* \"chestNft.sol\":15549:15579  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"chestNft.sol\":15549:15584  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"chestNft.sol\":15545:15929  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_205\n      jumpi\n        /* \"chestNft.sol\":15687:15700  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":15672:15683  nextTokenId */\n      dup2\n        /* \"chestNft.sol\":15672:15700  nextTokenId != _currentIndex */\n      eq\n        /* \"chestNft.sol\":15668:15910  if (nextTokenId != _currentIndex) {... */\n      tag_206\n      jumpi\n        /* \"chestNft.sol\":15867:15886  prevOwnershipPacked */\n      dup4\n        /* \"chestNft.sol\":15834:15851  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":15834:15864  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"chestNft.sol\":15852:15863  nextTokenId */\n      dup4\n        /* \"chestNft.sol\":15834:15864  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":15834:15886  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":15668:15910  if (nextTokenId != _currentIndex) {... */\n    tag_206:\n        /* \"chestNft.sol\":15545:15929  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_205:\n        /* \"chestNft.sol\":15375:15944  {... */\n      pop\n        /* \"chestNft.sol\":15317:15944  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_204:\n        /* \"chestNft.sol\":16057:16073  uint256 toMasked */\n      0x00\n        /* \"chestNft.sol\":1974:1988  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"chestNft.sol\":16092:16094  to */\n      dup7\n        /* \"chestNft.sol\":16076:16096  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":16076:16115  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"chestNft.sol\":16057:16115  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"chestNft.sol\":16456:16463  tokenId */\n      dup5\n        /* \"chestNft.sol\":16420:16428  toMasked */\n      dup2\n        /* \"chestNft.sol\":16386:16390  from */\n      dup9\n        /* \"chestNft.sol\":16328:16353  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"chestNft.sol\":16273:16274  0 */\n      0x00\n        /* \"chestNft.sol\":16216:16217  0 */\n      dup1\n        /* \"chestNft.sol\":16193:16492  log4(... */\n      log4\n        /* \"chestNft.sol\":16529:16530  0 */\n      0x00\n        /* \"chestNft.sol\":16517:16525  toMasked */\n      dup2\n        /* \"chestNft.sol\":16517:16530  toMasked == 0 */\n      sub\n        /* \"chestNft.sol\":16513:16571  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_207\n      jumpi\n        /* \"chestNft.sol\":16532:16571  _revert(TransferToZeroAddress.selector) */\n      tag_208\n        /* \"chestNft.sol\":16540:16570  TransferToZeroAddress.selector */\n      shl(0xe0, 0xea553b34)\n        /* \"chestNft.sol\":16532:16539  _revert */\n      tag_168\n        /* \"chestNft.sol\":16532:16571  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_208:\n        /* \"chestNft.sol\":16513:16571  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n    tag_207:\n        /* \"chestNft.sol\":16584:16626  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_209\n        /* \"chestNft.sol\":16605:16609  from */\n      dup8\n        /* \"chestNft.sol\":16611:16613  to */\n      dup8\n        /* \"chestNft.sol\":16615:16622  tokenId */\n      dup8\n        /* \"chestNft.sol\":16624:16625  1 */\n      0x01\n        /* \"chestNft.sol\":16584:16604  _afterTokenTransfers */\n      tag_210\n        /* \"chestNft.sol\":16584:16626  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_209:\n        /* \"chestNft.sol\":13707:16634  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"chestNft.sol\":13576:16634  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7156:7394  function mint(... */\n    tag_73:\n        /* \"chestNft.sol\":7310:7314  true */\n      0x01\n        /* \"chestNft.sol\":7268:7314  onlyapprovedcontractaddress[msg.sender] ==true */\n      iszero\n      iszero\n        /* \"chestNft.sol\":7268:7295  onlyapprovedcontractaddress */\n      0x09\n        /* \"chestNft.sol\":7268:7307  onlyapprovedcontractaddress[msg.sender] */\n      0x00\n        /* \"chestNft.sol\":7296:7306  msg.sender */\n      caller\n        /* \"chestNft.sol\":7268:7307  onlyapprovedcontractaddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"chestNft.sol\":7268:7314  onlyapprovedcontractaddress[msg.sender] ==true */\n      iszero\n      iszero\n      eq\n        /* \"chestNft.sol\":7260:7348  require(onlyapprovedcontractaddress[msg.sender] ==true, \"you are not approved  to mint\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"chestNft.sol\":7356:7378  _safeMint(_to, amount) */\n      tag_215\n        /* \"chestNft.sol\":7366:7369  _to */\n      dup3\n        /* \"chestNft.sol\":7371:7377  amount */\n      dup3\n        /* \"chestNft.sol\":7356:7365  _safeMint */\n      tag_216\n        /* \"chestNft.sol\":7356:7378  _safeMint(_to, amount) */\n      jump\t// in\n    tag_215:\n        /* \"chestNft.sol\":7156:7394  function mint(... */\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":16730:16923  function safeTransferFrom(... */\n    tag_76:\n        /* \"chestNft.sol\":16876:16915  safeTransferFrom(from, to, tokenId, '') */\n      tag_218\n        /* \"chestNft.sol\":16893:16897  from */\n      dup4\n        /* \"chestNft.sol\":16899:16901  to */\n      dup4\n        /* \"chestNft.sol\":16903:16910  tokenId */\n      dup4\n        /* \"chestNft.sol\":16876:16915  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"chestNft.sol\":16876:16892  safeTransferFrom */\n      tag_124\n        /* \"chestNft.sol\":16876:16915  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_218:\n        /* \"chestNft.sol\":16730:16923  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7823:7935  function checkredeemednftid()public view returns(uint[] memory ){... */\n    tag_79:\n        /* \"chestNft.sol\":7872:7885  uint[] memory */\n      0x60\n        /* \"chestNft.sol\":7903:7915  nftsredeemed */\n      0x07\n        /* \"chestNft.sol\":7903:7927  nftsredeemed[msg.sender] */\n      0x00\n        /* \"chestNft.sol\":7916:7926  msg.sender */\n      caller\n        /* \"chestNft.sol\":7903:7927  nftsredeemed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":7896:7927  return nftsredeemed[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_221:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_221\n      jumpi\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"chestNft.sol\":7823:7935  function checkredeemednftid()public view returns(uint[] memory ){... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":2500:2528  string public uriSuffix = \"\" */\n    tag_84:\n      0x06\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_158\n      jump\t// in\n    tag_222:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_158\n      jump\t// in\n    tag_223:\n      dup1\n      iszero\n      tag_224\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_225\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_224)\n    tag_225:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_226:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_226\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"chestNft.sol\":6777:6882  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_228:\n        /* \"chestNft.sol\":6863:6874  _newBaseURI */\n      dup1\n        /* \"chestNft.sol\":6852:6860  baseURI_ */\n      0x05\n        /* \"chestNft.sol\":6852:6874  baseURI_ = _newBaseURI */\n      swap1\n      dup2\n      tag_230\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_230:\n      pop\n        /* \"chestNft.sol\":6777:6882  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7946:8098  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_93:\n        /* \"chestNft.sol\":8018:8025  address */\n      0x00\n        /* \"chestNft.sol\":8061:8088  _packedOwnershipOf(tokenId) */\n      tag_232\n        /* \"chestNft.sol\":8080:8087  tokenId */\n      dup3\n        /* \"chestNft.sol\":8061:8079  _packedOwnershipOf */\n      tag_183\n        /* \"chestNft.sol\":8061:8088  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_232:\n        /* \"chestNft.sol\":8038:8090  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"chestNft.sol\":7946:8098  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":4247:4489  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_99:\n        /* \"chestNft.sol\":4319:4326  uint256 */\n      0x00\n        /* \"chestNft.sol\":4360:4361  0 */\n      dup1\n        /* \"chestNft.sol\":4343:4362  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":4343:4348  owner */\n      dup3\n        /* \"chestNft.sol\":4343:4362  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"chestNft.sol\":4339:4408  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_234\n      jumpi\n        /* \"chestNft.sol\":4364:4408  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_235\n        /* \"chestNft.sol\":4372:4407  BalanceQueryForZeroAddress.selector */\n      shl(0xe0, 0x8f4eb604)\n        /* \"chestNft.sol\":4364:4371  _revert */\n      tag_168\n        /* \"chestNft.sol\":4364:4408  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_235:\n        /* \"chestNft.sol\":4339:4408  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n    tag_234:\n        /* \"chestNft.sol\":516:529  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"chestNft.sol\":4426:4444  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":4426:4451  _packedAddressData[owner] */\n      0x00\n        /* \"chestNft.sol\":4445:4450  owner */\n      dup5\n        /* \"chestNft.sol\":4426:4451  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"chestNft.sol\":4426:4481  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"chestNft.sol\":4419:4481  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"chestNft.sol\":4247:4489  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":5944:6048  function symbol() public view virtual override returns (string memory) {... */\n    tag_110:\n        /* \"chestNft.sol\":6000:6013  string memory */\n      0x60\n        /* \"chestNft.sol\":6033:6040  _symbol */\n      0x04\n        /* \"chestNft.sol\":6026:6040  return _symbol */\n      dup1\n      sload\n      tag_243\n      swap1\n      tag_158\n      jump\t// in\n    tag_243:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_158\n      jump\t// in\n    tag_244:\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_246\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_245)\n    tag_246:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_247:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_247\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"chestNft.sol\":5944:6048  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":11600:11834  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_116:\n        /* \"chestNft.sol\":11747:11755  approved */\n      dup1\n        /* \"chestNft.sol\":11695:11713  _operatorApprovals */\n      0x0e\n        /* \"chestNft.sol\":11695:11734  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"chestNft.sol\":11714:11733  _msgSenderERC721A() */\n      tag_249\n        /* \"chestNft.sol\":11714:11731  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":11714:11733  _msgSenderERC721A() */\n      jump\t// in\n    tag_249:\n        /* \"chestNft.sol\":11695:11734  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":11695:11744  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"chestNft.sol\":11735:11743  operator */\n      dup5\n        /* \"chestNft.sol\":11695:11744  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"chestNft.sol\":11695:11755  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":11807:11815  operator */\n      dup2\n        /* \"chestNft.sol\":11771:11826  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":11786:11805  _msgSenderERC721A() */\n      tag_250\n        /* \"chestNft.sol\":11786:11803  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":11786:11805  _msgSenderERC721A() */\n      jump\t// in\n    tag_250:\n        /* \"chestNft.sol\":11771:11826  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"chestNft.sol\":11817:11825  approved */\n      dup4\n        /* \"chestNft.sol\":11771:11826  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_251\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"chestNft.sol\":11600:11834  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7011:7143  function setapprovedcontractaddress(address add)external {... */\n    tag_120:\n        /* \"chestNft.sol\":7122:7126  true */\n      0x01\n        /* \"chestNft.sol\":7088:7115  onlyapprovedcontractaddress */\n      0x09\n        /* \"chestNft.sol\":7088:7120  onlyapprovedcontractaddress[add] */\n      0x00\n        /* \"chestNft.sol\":7116:7119  add */\n      dup4\n        /* \"chestNft.sol\":7088:7120  onlyapprovedcontractaddress[add] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"chestNft.sol\":7088:7126  onlyapprovedcontractaddress[add] =true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":7011:7143  function setapprovedcontractaddress(address add)external {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":16937:17353  function safeTransferFrom(... */\n    tag_124:\n        /* \"chestNft.sol\":17112:17143  transferFrom(from, to, tokenId) */\n      tag_254\n        /* \"chestNft.sol\":17125:17129  from */\n      dup5\n        /* \"chestNft.sol\":17131:17133  to */\n      dup5\n        /* \"chestNft.sol\":17135:17142  tokenId */\n      dup5\n        /* \"chestNft.sol\":17112:17124  transferFrom */\n      tag_69\n        /* \"chestNft.sol\":17112:17143  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_254:\n        /* \"chestNft.sol\":17176:17177  0 */\n      0x00\n        /* \"chestNft.sol\":17158:17160  to */\n      dup4\n        /* \"chestNft.sol\":17158:17172  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"chestNft.sol\":17158:17177  to.code.length != 0 */\n      eq\n        /* \"chestNft.sol\":17154:17346  if (to.code.length != 0)... */\n      tag_255\n      jumpi\n        /* \"chestNft.sol\":17197:17253  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_256\n        /* \"chestNft.sol\":17228:17232  from */\n      dup5\n        /* \"chestNft.sol\":17234:17236  to */\n      dup5\n        /* \"chestNft.sol\":17238:17245  tokenId */\n      dup5\n        /* \"chestNft.sol\":17247:17252  _data */\n      dup5\n        /* \"chestNft.sol\":17197:17227  _checkContractOnERC721Received */\n      tag_257\n        /* \"chestNft.sol\":17197:17253  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_256:\n        /* \"chestNft.sol\":17192:17346  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_258\n      jumpi\n        /* \"chestNft.sol\":17274:17330  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_259\n        /* \"chestNft.sol\":17282:17329  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"chestNft.sol\":17274:17281  _revert */\n      tag_168\n        /* \"chestNft.sol\":17274:17330  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_259:\n        /* \"chestNft.sol\":17192:17346  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_258:\n        /* \"chestNft.sol\":17154:17346  if (to.code.length != 0)... */\n    tag_255:\n        /* \"chestNft.sol\":16937:17353  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":6062:6399  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_128:\n        /* \"chestNft.sol\":6135:6148  string memory */\n      0x60\n        /* \"chestNft.sol\":6166:6182  _exists(tokenId) */\n      tag_261\n        /* \"chestNft.sol\":6174:6181  tokenId */\n      dup3\n        /* \"chestNft.sol\":6166:6173  _exists */\n      tag_165\n        /* \"chestNft.sol\":6166:6182  _exists(tokenId) */\n      jump\t// in\n    tag_261:\n        /* \"chestNft.sol\":6161:6229  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_262\n      jumpi\n        /* \"chestNft.sol\":6184:6229  _revert(URIQueryForNonexistentToken.selector) */\n      tag_263\n        /* \"chestNft.sol\":6192:6228  URIQueryForNonexistentToken.selector */\n      shl(0xe0, 0xa14c4b50)\n        /* \"chestNft.sol\":6184:6191  _revert */\n      tag_168\n        /* \"chestNft.sol\":6184:6229  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_263:\n        /* \"chestNft.sol\":6161:6229  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n    tag_262:\n        /* \"chestNft.sol\":6242:6263  string memory baseURI */\n      0x00\n        /* \"chestNft.sol\":6266:6276  _baseURI() */\n      tag_264\n        /* \"chestNft.sol\":6266:6274  _baseURI */\n      tag_265\n        /* \"chestNft.sol\":6266:6276  _baseURI() */\n      jump\t// in\n    tag_264:\n        /* \"chestNft.sol\":6242:6276  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"chestNft.sol\":6319:6320  0 */\n      0x00\n        /* \"chestNft.sol\":6300:6307  baseURI */\n      dup2\n        /* \"chestNft.sol\":6294:6315  bytes(baseURI).length */\n      mload\n        /* \"chestNft.sol\":6294:6320  bytes(baseURI).length != 0 */\n      sub\n        /* \"chestNft.sol\":6294:6391  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '' */\n      tag_266\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_267)\n    tag_266:\n        /* \"chestNft.sol\":6347:6354  baseURI */\n      dup1\n        /* \"chestNft.sol\":6356:6374  _toString(tokenId) */\n      tag_268\n        /* \"chestNft.sol\":6366:6373  tokenId */\n      dup5\n        /* \"chestNft.sol\":6356:6365  _toString */\n      tag_269\n        /* \"chestNft.sol\":6356:6374  _toString(tokenId) */\n      jump\t// in\n    tag_268:\n        /* \"chestNft.sol\":6375:6384  uriSuffix */\n      0x06\n        /* \"chestNft.sol\":6330:6385  abi.encodePacked(baseURI, _toString(tokenId),uriSuffix) */\n      add(0x20, mload(0x40))\n      tag_270\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"chestNft.sol\":6294:6391  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '' */\n    tag_267:\n        /* \"chestNft.sol\":6287:6391  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId),uriSuffix)) : '' */\n      swap2\n      pop\n      pop\n        /* \"chestNft.sol\":6062:6399  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7408:7651  function redeemPhysicalItem(uint  nftId)public {... */\n    tag_133:\n        /* \"chestNft.sol\":7490:7500  msg.sender */\n      caller\n        /* \"chestNft.sol\":7474:7500  ownerOf(nftId)==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":7474:7488  ownerOf(nftId) */\n      tag_273\n        /* \"chestNft.sol\":7482:7487  nftId */\n      dup3\n        /* \"chestNft.sol\":7474:7481  ownerOf */\n      tag_93\n        /* \"chestNft.sol\":7474:7488  ownerOf(nftId) */\n      jump\t// in\n    tag_273:\n        /* \"chestNft.sol\":7474:7500  ownerOf(nftId)==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"chestNft.sol\":7466:7501  require(ownerOf(nftId)==msg.sender) */\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n        /* \"chestNft.sol\":7558:7562  true */\n      0x01\n        /* \"chestNft.sol\":7512:7538  _checkredemmedphysicalitem */\n      0x0a\n        /* \"chestNft.sol\":7512:7550  _checkredemmedphysicalitem[msg.sender] */\n      0x00\n        /* \"chestNft.sol\":7539:7549  msg.sender */\n      caller\n        /* \"chestNft.sol\":7512:7550  _checkredemmedphysicalitem[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":7512:7557  _checkredemmedphysicalitem[msg.sender][nftId] */\n      0x00\n        /* \"chestNft.sol\":7551:7556  nftId */\n      dup4\n        /* \"chestNft.sol\":7512:7557  _checkredemmedphysicalitem[msg.sender][nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"chestNft.sol\":7512:7562  _checkredemmedphysicalitem[msg.sender][nftId]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":7575:7587  nftsredeemed */\n      0x07\n        /* \"chestNft.sol\":7575:7599  nftsredeemed[msg.sender] */\n      0x00\n        /* \"chestNft.sol\":7588:7598  msg.sender */\n      caller\n        /* \"chestNft.sol\":7575:7599  nftsredeemed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":7605:7610  nftId */\n      dup2\n        /* \"chestNft.sol\":7575:7611  nftsredeemed[msg.sender].push(nftId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"chestNft.sol\":7629:7641  _burn(nftId) */\n      tag_276\n        /* \"chestNft.sol\":7635:7640  nftId */\n      dup2\n        /* \"chestNft.sol\":7629:7634  _burn */\n      tag_277\n        /* \"chestNft.sol\":7629:7641  _burn(nftId) */\n      jump\t// in\n    tag_276:\n        /* \"chestNft.sol\":7408:7651  function redeemPhysicalItem(uint  nftId)public {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":11847:12011  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_138:\n        /* \"chestNft.sol\":11944:11948  bool */\n      0x00\n        /* \"chestNft.sol\":11968:11986  _operatorApprovals */\n      0x0e\n        /* \"chestNft.sol\":11968:11993  _operatorApprovals[owner] */\n      0x00\n        /* \"chestNft.sol\":11987:11992  owner */\n      dup5\n        /* \"chestNft.sol\":11968:11993  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":11968:12003  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"chestNft.sol\":11994:12002  operator */\n      dup4\n        /* \"chestNft.sol\":11968:12003  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"chestNft.sol\":11961:12003  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"chestNft.sol\":11847:12011  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":7659:7803  function  checkredemmedphysicalitem(uint nftId)public view returns(bool){... */\n    tag_143:\n        /* \"chestNft.sol\":7726:7730  bool */\n      0x00\n        /* \"chestNft.sol\":7750:7776  _checkredemmedphysicalitem */\n      0x0a\n        /* \"chestNft.sol\":7750:7788  _checkredemmedphysicalitem[msg.sender] */\n      0x00\n        /* \"chestNft.sol\":7777:7787  msg.sender */\n      caller\n        /* \"chestNft.sol\":7750:7788  _checkredemmedphysicalitem[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":7750:7795  _checkredemmedphysicalitem[msg.sender][nftId] */\n      0x00\n        /* \"chestNft.sol\":7789:7794  nftId */\n      dup4\n        /* \"chestNft.sol\":7750:7795  _checkredemmedphysicalitem[msg.sender][nftId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"chestNft.sol\":7743:7795  return _checkredemmedphysicalitem[msg.sender][nftId] */\n      swap1\n      pop\n        /* \"chestNft.sol\":7659:7803  function  checkredemmedphysicalitem(uint nftId)public view returns(bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":2471:2493  string public baseURI_ */\n    tag_147:\n      0x05\n      dup1\n      sload\n      tag_280\n      swap1\n      tag_158\n      jump\t// in\n    tag_280:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_281\n      swap1\n      tag_158\n      jump\t// in\n    tag_281:\n      dup1\n      iszero\n      tag_282\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_283\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_282)\n    tag_283:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_284:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_284\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_282:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":12024:12392  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_165:\n        /* \"chestNft.sol\":12089:12100  bool result */\n      0x00\n        /* \"chestNft.sol\":12136:12143  tokenId */\n      dup2\n        /* \"chestNft.sol\":12117:12132  _startTokenId() */\n      tag_293\n        /* \"chestNft.sol\":12117:12130  _startTokenId */\n      tag_180\n        /* \"chestNft.sol\":12117:12132  _startTokenId() */\n      jump\t// in\n    tag_293:\n        /* \"chestNft.sol\":12117:12143  _startTokenId() <= tokenId */\n      gt\n        /* \"chestNft.sol\":12113:12385  if (_startTokenId() <= tokenId) {... */\n      tag_294\n      jumpi\n        /* \"chestNft.sol\":12174:12187  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":12164:12171  tokenId */\n      dup3\n        /* \"chestNft.sol\":12164:12187  tokenId < _currentIndex */\n      lt\n        /* \"chestNft.sol\":12160:12374  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"chestNft.sol\":12208:12222  uint256 packed */\n      0x00\n        /* \"chestNft.sol\":12241:12301  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_296:\n        /* \"chestNft.sol\":12289:12290  0 */\n      0x00\n        /* \"chestNft.sol\":12258:12275  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":12258:12284  _packedOwnerships[tokenId] */\n      0x00\n        /* \"chestNft.sol\":12276:12283  tokenId */\n      dup6\n        /* \"chestNft.sol\":12258:12284  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"chestNft.sol\":12249:12284  packed = _packedOwnerships[tokenId] */\n      swap2\n      pop\n      dup2\n        /* \"chestNft.sol\":12248:12290  (packed = _packedOwnerships[tokenId]) == 0 */\n      sub\n        /* \"chestNft.sol\":12241:12301  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_297\n      jumpi\n        /* \"chestNft.sol\":12292:12301  --tokenId */\n      dup3\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      swap3\n      pop\n        /* \"chestNft.sol\":12241:12301  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_296)\n    tag_297:\n        /* \"chestNft.sol\":12357:12358  0 */\n      0x00\n        /* \"chestNft.sol\":1292:1300  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":12329:12335  packed */\n      dup3\n        /* \"chestNft.sol\":12329:12353  packed & _BITMASK_BURNED */\n      and\n        /* \"chestNft.sol\":12329:12358  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"chestNft.sol\":12320:12358  result = packed & _BITMASK_BURNED == 0 */\n      swap2\n      pop\n        /* \"chestNft.sol\":12189:12374  {... */\n      pop\n        /* \"chestNft.sol\":12160:12374  if (tokenId < _currentIndex) {... */\n    tag_295:\n        /* \"chestNft.sol\":12113:12385  if (_startTokenId() <= tokenId) {... */\n    tag_294:\n        /* \"chestNft.sol\":12024:12392  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":29570:29735  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_168:\n        /* \"chestNft.sol\":29671:29684  errorSelector */\n      dup1\n        /* \"chestNft.sol\":29665:29669  0x00 */\n      0x00\n        /* \"chestNft.sol\":29658:29685  mstore(0x00, errorSelector) */\n      mstore\n        /* \"chestNft.sol\":29712:29716  0x04 */\n      0x04\n        /* \"chestNft.sol\":29706:29710  0x00 */\n      0x00\n        /* \"chestNft.sol\":29699:29717  revert(0x00, 0x04) */\n      revert\n        /* \"chestNft.sol\":23069:23543  function _approve(... */\n    tag_171:\n        /* \"chestNft.sol\":23198:23211  address owner */\n      0x00\n        /* \"chestNft.sol\":23214:23230  ownerOf(tokenId) */\n      tag_302\n        /* \"chestNft.sol\":23222:23229  tokenId */\n      dup4\n        /* \"chestNft.sol\":23214:23221  ownerOf */\n      tag_93\n        /* \"chestNft.sol\":23214:23230  ownerOf(tokenId) */\n      jump\t// in\n    tag_302:\n        /* \"chestNft.sol\":23198:23230  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"chestNft.sol\":23247:23260  approvalCheck */\n      dup2\n        /* \"chestNft.sol\":23247:23292  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_303\n      jumpi\n      pop\n        /* \"chestNft.sol\":23287:23292  owner */\n      dup1\n        /* \"chestNft.sol\":23264:23292  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":23264:23283  _msgSenderERC721A() */\n      tag_304\n        /* \"chestNft.sol\":23264:23281  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":23264:23283  _msgSenderERC721A() */\n      jump\t// in\n    tag_304:\n        /* \"chestNft.sol\":23264:23292  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"chestNft.sol\":23247:23292  approvalCheck && _msgSenderERC721A() != owner */\n    tag_303:\n        /* \"chestNft.sol\":23243:23444  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_305\n      jumpi\n        /* \"chestNft.sol\":23312:23356  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_306\n        /* \"chestNft.sol\":23329:23334  owner */\n      dup2\n        /* \"chestNft.sol\":23336:23355  _msgSenderERC721A() */\n      tag_307\n        /* \"chestNft.sol\":23336:23353  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":23336:23355  _msgSenderERC721A() */\n      jump\t// in\n    tag_307:\n        /* \"chestNft.sol\":23312:23328  isApprovedForAll */\n      tag_138\n        /* \"chestNft.sol\":23312:23356  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_306:\n        /* \"chestNft.sol\":23307:23444  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_308\n      jumpi\n        /* \"chestNft.sol\":23377:23428  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_309\n        /* \"chestNft.sol\":23385:23427  ApprovalCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0xcfb3b942)\n        /* \"chestNft.sol\":23377:23384  _revert */\n      tag_168\n        /* \"chestNft.sol\":23377:23428  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_309:\n        /* \"chestNft.sol\":23307:23444  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_308:\n        /* \"chestNft.sol\":23243:23444  if (approvalCheck && _msgSenderERC721A() != owner)... */\n    tag_305:\n        /* \"chestNft.sol\":23489:23491  to */\n      dup4\n        /* \"chestNft.sol\":23456:23471  _tokenApprovals */\n      0x0d\n        /* \"chestNft.sol\":23456:23480  _tokenApprovals[tokenId] */\n      0x00\n        /* \"chestNft.sol\":23472:23479  tokenId */\n      dup6\n        /* \"chestNft.sol\":23456:23480  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":23456:23486  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"chestNft.sol\":23456:23491  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":23527:23534  tokenId */\n      dup3\n        /* \"chestNft.sol\":23523:23525  to */\n      dup5\n        /* \"chestNft.sol\":23507:23535  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":23516:23521  owner */\n      dup3\n        /* \"chestNft.sol\":23507:23535  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"chestNft.sol\":23187:23543  {... */\n      pop\n        /* \"chestNft.sol\":23069:23543  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_314:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"chestNft.sol\":3309:3401  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_180:\n        /* \"chestNft.sol\":3365:3372  uint256 */\n      0x00\n        /* \"chestNft.sol\":3309:3401  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":8831:10027  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_183:\n        /* \"chestNft.sol\":8898:8912  uint256 packed */\n      0x00\n        /* \"chestNft.sol\":8948:8955  tokenId */\n      dup2\n        /* \"chestNft.sol\":8929:8944  _startTokenId() */\n      tag_319\n        /* \"chestNft.sol\":8929:8942  _startTokenId */\n      tag_180\n        /* \"chestNft.sol\":8929:8944  _startTokenId() */\n      jump\t// in\n    tag_319:\n        /* \"chestNft.sol\":8929:8955  _startTokenId() <= tokenId */\n      gt\n        /* \"chestNft.sol\":8925:9962  if (_startTokenId() <= tokenId) {... */\n      tag_320\n      jumpi\n        /* \"chestNft.sol\":8981:8998  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":8981:9007  _packedOwnerships[tokenId] */\n      0x00\n        /* \"chestNft.sol\":8999:9006  tokenId */\n      dup4\n        /* \"chestNft.sol\":8981:9007  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"chestNft.sol\":8972:9007  packed = _packedOwnerships[tokenId] */\n      swap1\n      pop\n        /* \"chestNft.sol\":9117:9118  0 */\n      0x00\n        /* \"chestNft.sol\":9107:9113  packed */\n      dup2\n        /* \"chestNft.sol\":9107:9118  packed == 0 */\n      sub\n        /* \"chestNft.sol\":9103:9875  if (packed == 0) {... */\n      tag_321\n      jumpi\n        /* \"chestNft.sol\":9154:9167  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":9143:9150  tokenId */\n      dup3\n        /* \"chestNft.sol\":9143:9167  tokenId >= _currentIndex */\n      lt\n        /* \"chestNft.sol\":9139:9216  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_322\n      jumpi\n        /* \"chestNft.sol\":9169:9216  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_323\n        /* \"chestNft.sol\":9177:9215  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"chestNft.sol\":9169:9176  _revert */\n      tag_168\n        /* \"chestNft.sol\":9169:9216  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_323:\n        /* \"chestNft.sol\":9139:9216  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n    tag_322:\n        /* \"chestNft.sol\":9253:9860  for (;;) {... */\n    tag_324:\n        /* \"chestNft.sol\":9331:9348  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":9331:9359  _packedOwnerships[--tokenId] */\n      0x00\n        /* \"chestNft.sol\":9349:9358  --tokenId */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"chestNft.sol\":9331:9359  _packedOwnerships[--tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"chestNft.sol\":9322:9359  packed = _packedOwnerships[--tokenId] */\n      swap1\n      pop\n        /* \"chestNft.sol\":9419:9420  0 */\n      0x00\n        /* \"chestNft.sol\":9409:9415  packed */\n      dup2\n        /* \"chestNft.sol\":9409:9420  packed == 0 */\n      sub\n        /* \"chestNft.sol\":9405:9430  if (packed == 0) continue */\n      iszero\n        /* \"chestNft.sol\":9422:9430  continue */\n      tag_326\n        /* \"chestNft.sol\":9405:9430  if (packed == 0) continue */\n      jumpi\n        /* \"chestNft.sol\":9485:9486  0 */\n      0x00\n        /* \"chestNft.sol\":1292:1300  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":9457:9463  packed */\n      dup3\n        /* \"chestNft.sol\":9457:9481  packed & _BITMASK_BURNED */\n      and\n        /* \"chestNft.sol\":9457:9486  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"chestNft.sol\":9453:9501  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n        /* \"chestNft.sol\":9488:9501  return packed */\n      tag_318\n        /* \"chestNft.sol\":9453:9501  if (packed & _BITMASK_BURNED == 0) return packed */\n      jumpi\n        /* \"chestNft.sol\":9793:9840  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_329\n        /* \"chestNft.sol\":9801:9839  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"chestNft.sol\":9793:9800  _revert */\n      tag_168\n        /* \"chestNft.sol\":9793:9840  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_329:\n        /* \"chestNft.sol\":9253:9860  for (;;) {... */\n    tag_326:\n      jump(tag_324)\n        /* \"chestNft.sol\":9103:9875  if (packed == 0) {... */\n    tag_321:\n        /* \"chestNft.sol\":9934:9935  0 */\n      0x00\n        /* \"chestNft.sol\":1292:1300  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":9906:9912  packed */\n      dup3\n        /* \"chestNft.sol\":9906:9930  packed & _BITMASK_BURNED */\n      and\n        /* \"chestNft.sol\":9906:9935  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"chestNft.sol\":9902:9950  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n        /* \"chestNft.sol\":9937:9950  return packed */\n      tag_318\n        /* \"chestNft.sol\":9902:9950  if (packed & _BITMASK_BURNED == 0) return packed */\n      jumpi\n        /* \"chestNft.sol\":8925:9962  if (_startTokenId() <= tokenId) {... */\n    tag_320:\n        /* \"chestNft.sol\":9972:10019  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_331\n        /* \"chestNft.sol\":9980:10018  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"chestNft.sol\":9972:9979  _revert */\n      tag_168\n        /* \"chestNft.sol\":9972:10019  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_331:\n        /* \"chestNft.sol\":8831:10027  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_318:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":13078:13563  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_187:\n        /* \"chestNft.sol\":13180:13207  uint256 approvedAddressSlot */\n      0x00\n        /* \"chestNft.sol\":13209:13232  address approvedAddress */\n      dup1\n        /* \"chestNft.sol\":13250:13288  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"chestNft.sol\":13291:13306  _tokenApprovals */\n      0x0d\n        /* \"chestNft.sol\":13291:13315  _tokenApprovals[tokenId] */\n      0x00\n        /* \"chestNft.sol\":13307:13314  tokenId */\n      dup6\n        /* \"chestNft.sol\":13291:13315  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":13250:13315  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"chestNft.sol\":13468:13486  tokenApproval.slot */\n      dup1\n        /* \"chestNft.sol\":13445:13486  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"chestNft.sol\":13525:13544  approvedAddressSlot */\n      dup3\n        /* \"chestNft.sol\":13519:13545  sload(approvedAddressSlot) */\n      sload\n        /* \"chestNft.sol\":13500:13545  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"chestNft.sol\":13430:13556  {... */\n      pop\n        /* \"chestNft.sol\":13078:13563  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"chestNft.sol\":27551:27656  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_190:\n        /* \"chestNft.sol\":27611:27618  address */\n      0x00\n        /* \"chestNft.sol\":27638:27648  msg.sender */\n      caller\n        /* \"chestNft.sol\":27631:27648  return msg.sender */\n      swap1\n      pop\n        /* \"chestNft.sol\":27551:27656  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":12406:13065  function _isSenderApprovedOrOwner(... */\n    tag_191:\n        /* \"chestNft.sol\":12555:12566  bool result */\n      0x00\n        /* \"chestNft.sol\":12720:12736  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"chestNft.sol\":12713:12718  owner */\n      dup4\n        /* \"chestNft.sol\":12709:12737  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"chestNft.sol\":12700:12737  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"chestNft.sol\":12880:12896  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"chestNft.sol\":12869:12878  msgSender */\n      dup3\n        /* \"chestNft.sol\":12865:12897  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"chestNft.sol\":12852:12897  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"chestNft.sol\":13030:13045  approvedAddress */\n      dup4\n        /* \"chestNft.sol\":13019:13028  msgSender */\n      dup3\n        /* \"chestNft.sol\":13016:13046  eq(msgSender, approvedAddress) */\n      eq\n        /* \"chestNft.sol\":13008:13013  owner */\n      dup4\n        /* \"chestNft.sol\":12997:13006  msgSender */\n      dup4\n        /* \"chestNft.sol\":12994:13014  eq(msgSender, owner) */\n      eq\n        /* \"chestNft.sol\":12991:13047  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"chestNft.sol\":12981:13047  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"chestNft.sol\":12406:13065  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":17367:17526  function _beforeTokenTransfers(... */\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":27226:27537  function _nextExtraData(... */\n    tag_202:\n        /* \"chestNft.sol\":27361:27368  uint256 */\n      0x00\n        /* \"chestNft.sol\":27381:27397  uint24 extraData */\n      dup1\n        /* \"chestNft.sol\":1696:1699  232 */\n      0xe8\n        /* \"chestNft.sol\":27407:27426  prevOwnershipPacked */\n      dup4\n        /* \"chestNft.sol\":27407:27448  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"chestNft.sol\":27381:27449  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"chestNft.sol\":1696:1699  232 */\n      0xe8\n        /* \"chestNft.sol\":27475:27506  _extraData(from, to, extraData) */\n      tag_337\n        /* \"chestNft.sol\":27486:27490  from */\n      dup7\n        /* \"chestNft.sol\":27492:27494  to */\n      dup7\n        /* \"chestNft.sol\":27496:27505  extraData */\n      dup5\n        /* \"chestNft.sol\":27475:27485  _extraData */\n      tag_338\n        /* \"chestNft.sol\":27475:27506  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_337:\n        /* \"chestNft.sol\":27467:27507  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"chestNft.sol\":27467:27529  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"chestNft.sol\":27460:27529  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"chestNft.sol\":27226:27537  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":10421:10871  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_203:\n        /* \"chestNft.sol\":10501:10515  uint256 result */\n      0x00\n        /* \"chestNft.sol\":10669:10685  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"chestNft.sol\":10662:10667  owner */\n      dup4\n        /* \"chestNft.sol\":10658:10686  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"chestNft.sol\":10649:10686  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"chestNft.sol\":10846:10851  flags */\n      dup2\n        /* \"chestNft.sol\":10832:10843  timestamp() */\n      timestamp\n        /* \"chestNft.sol\":10807:10830  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"chestNft.sol\":10803:10844  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"chestNft.sol\":10800:10852  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"chestNft.sol\":10793:10798  owner */\n      dup4\n        /* \"chestNft.sol\":10790:10853  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"chestNft.sol\":10780:10853  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"chestNft.sol\":10421:10871  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":17539:17697  function _afterTokenTransfers(... */\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":22826:22938  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_216:\n        /* \"chestNft.sol\":22903:22930  _safeMint(to, quantity, '') */\n      tag_342\n        /* \"chestNft.sol\":22913:22915  to */\n      dup3\n        /* \"chestNft.sol\":22917:22925  quantity */\n      dup3\n        /* \"chestNft.sol\":22903:22930  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"chestNft.sol\":22903:22912  _safeMint */\n      tag_343\n        /* \"chestNft.sol\":22903:22930  _safeMint(to, quantity, '') */\n      jump\t// in\n    tag_342:\n        /* \"chestNft.sol\":22826:22938  function _safeMint(address to, uint256 quantity) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":17710:18401  function _checkContractOnERC721Received(... */\n    tag_257:\n        /* \"chestNft.sol\":17873:17877  bool */\n      0x00\n        /* \"chestNft.sol\":17919:17921  to */\n      dup4\n        /* \"chestNft.sol\":17894:17939  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"chestNft.sol\":17940:17959  _msgSenderERC721A() */\n      tag_346\n        /* \"chestNft.sol\":17940:17957  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":17940:17959  _msgSenderERC721A() */\n      jump\t// in\n    tag_346:\n        /* \"chestNft.sol\":17961:17965  from */\n      dup8\n        /* \"chestNft.sol\":17967:17974  tokenId */\n      dup7\n        /* \"chestNft.sol\":17976:17981  _data */\n      dup7\n        /* \"chestNft.sol\":17894:17982  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_349\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_350\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      0x01\n    tag_349:\n        /* \"chestNft.sol\":17890:18394  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_352\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_357\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_356)\n    tag_357:\n      0x60\n      swap2\n      pop\n    tag_356:\n      pop\n        /* \"chestNft.sol\":18194:18195  0 */\n      0x00\n        /* \"chestNft.sol\":18177:18183  reason */\n      dup2\n        /* \"chestNft.sol\":18177:18190  reason.length */\n      mload\n        /* \"chestNft.sol\":18177:18195  reason.length == 0 */\n      sub\n        /* \"chestNft.sol\":18173:18288  if (reason.length == 0) {... */\n      tag_358\n      jumpi\n        /* \"chestNft.sol\":18216:18272  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_359\n        /* \"chestNft.sol\":18224:18271  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"chestNft.sol\":18216:18223  _revert */\n      tag_168\n        /* \"chestNft.sol\":18216:18272  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_359:\n        /* \"chestNft.sol\":18173:18288  if (reason.length == 0) {... */\n    tag_358:\n        /* \"chestNft.sol\":18360:18366  reason */\n      dup1\n        /* \"chestNft.sol\":18354:18367  mload(reason) */\n      mload\n        /* \"chestNft.sol\":18345:18351  reason */\n      dup2\n        /* \"chestNft.sol\":18341:18343  32 */\n      0x20\n        /* \"chestNft.sol\":18337:18352  add(32, reason) */\n      add\n        /* \"chestNft.sol\":18330:18368  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"chestNft.sol\":17890:18394  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_352:\n        /* \"chestNft.sol\":18063:18117  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"chestNft.sol\":18053:18117  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"chestNft.sol\":18053:18059  retval */\n      dup2\n        /* \"chestNft.sol\":18053:18117  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"chestNft.sol\":18046:18117  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"chestNft.sol\":17710:18401  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":6661:6761  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_265:\n        /* \"chestNft.sol\":6712:6725  string memory */\n      0x60\n        /* \"chestNft.sol\":6745:6753  baseURI_ */\n      0x05\n        /* \"chestNft.sol\":6738:6753  return baseURI_ */\n      dup1\n      sload\n      tag_362\n      swap1\n      tag_158\n      jump\t// in\n    tag_362:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_363\n      swap1\n      tag_158\n      jump\t// in\n    tag_363:\n      dup1\n      iszero\n      tag_364\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_365\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_364)\n    tag_365:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_366:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_366\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"chestNft.sol\":6661:6761  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":27758:29503  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_269:\n        /* \"chestNft.sol\":27823:27840  string memory str */\n      0x60\n        /* \"chestNft.sol\":28257:28261  0xa0 */\n      0xa0\n        /* \"chestNft.sol\":28250:28254  0x40 */\n      0x40\n        /* \"chestNft.sol\":28244:28255  mload(0x40) */\n      mload\n        /* \"chestNft.sol\":28240:28262  add(mload(0x40), 0xa0) */\n      add\n        /* \"chestNft.sol\":28349:28350  m */\n      dup1\n        /* \"chestNft.sol\":28343:28347  0x40 */\n      0x40\n        /* \"chestNft.sol\":28336:28351  mstore(0x40, m) */\n      mstore\n        /* \"chestNft.sol\":28424:28428  0x20 */\n      0x20\n        /* \"chestNft.sol\":28421:28422  m */\n      dup2\n        /* \"chestNft.sol\":28417:28429  sub(m, 0x20) */\n      sub\n        /* \"chestNft.sol\":28410:28429  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"chestNft.sol\":28506:28507  0 */\n      0x00\n        /* \"chestNft.sol\":28501:28504  str */\n      dup3\n        /* \"chestNft.sol\":28494:28508  mstore(str, 0) */\n      mstore\n        /* \"chestNft.sol\":28610:28613  str */\n      dup2\n        /* \"chestNft.sol\":28849:28854  value */\n      dup4\n        /* \"chestNft.sol\":28831:29259  for { let temp := value } 1 {} {... */\n    tag_368:\n        /* \"chestNft.sol\":28857:28858  1 */\n      0x01\n        /* \"chestNft.sol\":28831:29259  for { let temp := value } 1 {} {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"chestNft.sol\":28897:28898  1 */\n      0x01\n        /* \"chestNft.sol\":28892:28895  str */\n      dup5\n        /* \"chestNft.sol\":28888:28899  sub(str, 1) */\n      sub\n        /* \"chestNft.sol\":28881:28899  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"chestNft.sol\":29068:29070  10 */\n      0x0a\n        /* \"chestNft.sol\":29062:29066  temp */\n      dup2\n        /* \"chestNft.sol\":29058:29071  mod(temp, 10) */\n      mod\n        /* \"chestNft.sol\":29054:29056  48 */\n      0x30\n        /* \"chestNft.sol\":29050:29072  add(48, mod(temp, 10)) */\n      add\n        /* \"chestNft.sol\":29045:29048  str */\n      dup5\n        /* \"chestNft.sol\":29037:29073  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"chestNft.sol\":29162:29164  10 */\n      0x0a\n        /* \"chestNft.sol\":29156:29160  temp */\n      dup2\n        /* \"chestNft.sol\":29152:29165  div(temp, 10) */\n      div\n        /* \"chestNft.sol\":29144:29165  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"chestNft.sol\":29229:29233  temp */\n      dup1\n        /* \"chestNft.sol\":28831:29259  for { let temp := value } 1 {} {... */\n      tag_368\n        /* \"chestNft.sol\":29219:29244  if iszero(temp) { break } */\n      jumpi\n        /* \"chestNft.sol\":28831:29259  for { let temp := value } 1 {} {... */\n    tag_370:\n        /* \"chestNft.sol\":28835:28856  { let temp := value } */\n      pop\n        /* \"chestNft.sol\":29298:29301  str */\n      dup3\n        /* \"chestNft.sol\":29293:29296  end */\n      dup2\n        /* \"chestNft.sol\":29289:29302  sub(end, str) */\n      sub\n        /* \"chestNft.sol\":29413:29417  0x20 */\n      0x20\n        /* \"chestNft.sol\":29408:29411  str */\n      dup5\n        /* \"chestNft.sol\":29404:29418  sub(str, 0x20) */\n      sub\n        /* \"chestNft.sol\":29397:29418  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"chestNft.sol\":29478:29484  length */\n      dup1\n        /* \"chestNft.sol\":29473:29476  str */\n      dup5\n        /* \"chestNft.sol\":29466:29485  mstore(str, length) */\n      mstore\n        /* \"chestNft.sol\":27862:29496  {... */\n      pop\n      pop\n      pop\n        /* \"chestNft.sol\":27758:29503  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":23556:23645  function _burn(uint256 tokenId) internal virtual {... */\n    tag_277:\n        /* \"chestNft.sol\":23616:23637  _burn(tokenId, false) */\n      tag_373\n        /* \"chestNft.sol\":23622:23629  tokenId */\n      dup2\n        /* \"chestNft.sol\":23631:23636  false */\n      0x00\n        /* \"chestNft.sol\":23616:23621  _burn */\n      tag_374\n        /* \"chestNft.sol\":23616:23637  _burn(tokenId, false) */\n      jump\t// in\n    tag_373:\n        /* \"chestNft.sol\":23556:23645  function _burn(uint256 tokenId) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"chestNft.sol\":27065:27212  function _extraData(... */\n    tag_338:\n        /* \"chestNft.sol\":27202:27208  uint24 */\n      0x00\n        /* \"chestNft.sol\":27065:27212  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":22034:22742  function _safeMint(... */\n    tag_343:\n        /* \"chestNft.sol\":22165:22184  _mint(to, quantity) */\n      tag_378\n        /* \"chestNft.sol\":22171:22173  to */\n      dup4\n        /* \"chestNft.sol\":22175:22183  quantity */\n      dup4\n        /* \"chestNft.sol\":22165:22170  _mint */\n      tag_379\n        /* \"chestNft.sol\":22165:22184  _mint(to, quantity) */\n      jump\t// in\n    tag_378:\n        /* \"chestNft.sol\":22244:22245  0 */\n      0x00\n        /* \"chestNft.sol\":22226:22228  to */\n      dup4\n        /* \"chestNft.sol\":22226:22240  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"chestNft.sol\":22226:22245  to.code.length != 0 */\n      eq\n        /* \"chestNft.sol\":22222:22724  if (to.code.length != 0) {... */\n      tag_380\n      jumpi\n        /* \"chestNft.sol\":22266:22277  uint256 end */\n      0x00\n        /* \"chestNft.sol\":22280:22293  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":22266:22293  uint256 end = _currentIndex */\n      swap1\n      pop\n        /* \"chestNft.sol\":22312:22325  uint256 index */\n      0x00\n        /* \"chestNft.sol\":22334:22342  quantity */\n      dup4\n        /* \"chestNft.sol\":22328:22331  end */\n      dup3\n        /* \"chestNft.sol\":22328:22342  end - quantity */\n      sub\n        /* \"chestNft.sol\":22312:22342  uint256 index = end - quantity */\n      swap1\n      pop\n        /* \"chestNft.sol\":22361:22603  do {... */\n    tag_381:\n        /* \"chestNft.sol\":22392:22454  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_384\n        /* \"chestNft.sol\":22431:22432  0 */\n      0x00\n        /* \"chestNft.sol\":22435:22437  to */\n      dup7\n        /* \"chestNft.sol\":22439:22446  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"chestNft.sol\":22448:22453  _data */\n      dup7\n        /* \"chestNft.sol\":22392:22422  _checkContractOnERC721Received */\n      tag_257\n        /* \"chestNft.sol\":22392:22454  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_384:\n        /* \"chestNft.sol\":22387:22563  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_385\n      jumpi\n        /* \"chestNft.sol\":22483:22539  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_386\n        /* \"chestNft.sol\":22491:22538  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"chestNft.sol\":22483:22490  _revert */\n      tag_168\n        /* \"chestNft.sol\":22483:22539  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_386:\n        /* \"chestNft.sol\":22387:22563  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n    tag_385:\n        /* \"chestNft.sol\":22598:22601  end */\n      dup2\n        /* \"chestNft.sol\":22590:22595  index */\n      dup2\n        /* \"chestNft.sol\":22590:22601  index < end */\n      lt\n        /* \"chestNft.sol\":22361:22603  do {... */\n      tag_381\n      jumpi\n        /* \"chestNft.sol\":22685:22688  end */\n      dup2\n        /* \"chestNft.sol\":22668:22681  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":22668:22688  _currentIndex != end */\n      eq\n        /* \"chestNft.sol\":22664:22708  if (_currentIndex != end) _revert(bytes4(0)) */\n      tag_387\n      jumpi\n        /* \"chestNft.sol\":22690:22708  _revert(bytes4(0)) */\n      tag_388\n        /* \"chestNft.sol\":22705:22706  0 */\n      0x00\n        /* \"chestNft.sol\":22698:22707  bytes4(0) */\n      0xe0\n      shl\n        /* \"chestNft.sol\":22690:22697  _revert */\n      tag_168\n        /* \"chestNft.sol\":22690:22708  _revert(bytes4(0)) */\n      jump\t// in\n    tag_388:\n        /* \"chestNft.sol\":22664:22708  if (_currentIndex != end) _revert(bytes4(0)) */\n    tag_387:\n        /* \"chestNft.sol\":22247:22724  {... */\n      pop\n      pop\n        /* \"chestNft.sol\":22222:22724  if (to.code.length != 0) {... */\n    tag_380:\n        /* \"chestNft.sol\":22034:22742  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":23658:26497  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n    tag_374:\n        /* \"chestNft.sol\":23738:23765  uint256 prevOwnershipPacked */\n      0x00\n        /* \"chestNft.sol\":23768:23795  _packedOwnershipOf(tokenId) */\n      tag_390\n        /* \"chestNft.sol\":23787:23794  tokenId */\n      dup4\n        /* \"chestNft.sol\":23768:23786  _packedOwnershipOf */\n      tag_183\n        /* \"chestNft.sol\":23768:23795  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_390:\n        /* \"chestNft.sol\":23738:23795  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"chestNft.sol\":23808:23820  address from */\n      0x00\n        /* \"chestNft.sol\":23839:23858  prevOwnershipPacked */\n      dup2\n        /* \"chestNft.sol\":23808:23860  address from = address(uint160(prevOwnershipPacked)) */\n      swap1\n      pop\n        /* \"chestNft.sol\":23874:23901  uint256 approvedAddressSlot */\n      0x00\n        /* \"chestNft.sol\":23903:23926  address approvedAddress */\n      dup1\n        /* \"chestNft.sol\":23930:23965  _getApprovedSlotAndAddress(tokenId) */\n      tag_391\n        /* \"chestNft.sol\":23957:23964  tokenId */\n      dup7\n        /* \"chestNft.sol\":23930:23956  _getApprovedSlotAndAddress */\n      tag_187\n        /* \"chestNft.sol\":23930:23965  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_391:\n        /* \"chestNft.sol\":23873:23965  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"chestNft.sol\":23982:23995  approvalCheck */\n      dup5\n        /* \"chestNft.sol\":23978:24303  if (approvalCheck) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"chestNft.sol\":24103:24171  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_393\n        /* \"chestNft.sol\":24128:24143  approvedAddress */\n      dup2\n        /* \"chestNft.sol\":24145:24149  from */\n      dup5\n        /* \"chestNft.sol\":24151:24170  _msgSenderERC721A() */\n      tag_394\n        /* \"chestNft.sol\":24151:24168  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":24151:24170  _msgSenderERC721A() */\n      jump\t// in\n    tag_394:\n        /* \"chestNft.sol\":24103:24127  _isSenderApprovedOrOwner */\n      tag_191\n        /* \"chestNft.sol\":24103:24171  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_393:\n        /* \"chestNft.sol\":24098:24291  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_395\n      jumpi\n        /* \"chestNft.sol\":24195:24238  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_396\n        /* \"chestNft.sol\":24212:24216  from */\n      dup4\n        /* \"chestNft.sol\":24218:24237  _msgSenderERC721A() */\n      tag_397\n        /* \"chestNft.sol\":24218:24235  _msgSenderERC721A */\n      tag_190\n        /* \"chestNft.sol\":24218:24237  _msgSenderERC721A() */\n      jump\t// in\n    tag_397:\n        /* \"chestNft.sol\":24195:24211  isApprovedForAll */\n      tag_138\n        /* \"chestNft.sol\":24195:24238  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_396:\n        /* \"chestNft.sol\":24190:24291  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_398\n      jumpi\n        /* \"chestNft.sol\":24240:24291  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_399\n        /* \"chestNft.sol\":24248:24290  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"chestNft.sol\":24240:24247  _revert */\n      tag_168\n        /* \"chestNft.sol\":24240:24291  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_399:\n        /* \"chestNft.sol\":24190:24291  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_398:\n        /* \"chestNft.sol\":24098:24291  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_395:\n        /* \"chestNft.sol\":23978:24303  if (approvalCheck) {... */\n    tag_392:\n        /* \"chestNft.sol\":24315:24366  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      tag_400\n        /* \"chestNft.sol\":24337:24341  from */\n      dup4\n        /* \"chestNft.sol\":24351:24352  0 */\n      0x00\n        /* \"chestNft.sol\":24355:24362  tokenId */\n      dup9\n        /* \"chestNft.sol\":24364:24365  1 */\n      0x01\n        /* \"chestNft.sol\":24315:24336  _beforeTokenTransfers */\n      tag_198\n        /* \"chestNft.sol\":24315:24366  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      jump\t// in\n    tag_400:\n        /* \"chestNft.sol\":24459:24474  approvedAddress */\n      dup1\n        /* \"chestNft.sol\":24456:24616  if approvedAddress {... */\n      iszero\n      tag_401\n      jumpi\n        /* \"chestNft.sol\":24599:24600  0 */\n      0x00\n        /* \"chestNft.sol\":24578:24597  approvedAddressSlot */\n      dup3\n        /* \"chestNft.sol\":24571:24601  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"chestNft.sol\":24456:24616  if approvedAddress {... */\n    tag_401:\n        /* \"chestNft.sol\":25026:25027  1 */\n      0x01\n        /* \"chestNft.sol\":781:784  128 */\n      0x80\n        /* \"chestNft.sol\":24996:24997  1 */\n      0x01\n        /* \"chestNft.sol\":24996:25022  1 << _BITPOS_NUMBER_BURNED */\n      swap1\n      shl\n        /* \"chestNft.sol\":24995:25027  (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      sub\n        /* \"chestNft.sol\":24967:24985  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":24967:24991  _packedAddressData[from] */\n      0x00\n        /* \"chestNft.sol\":24986:24990  from */\n      dup6\n        /* \"chestNft.sol\":24967:24991  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"chestNft.sol\":24967:25027  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":25294:25470  _packOwnershipData(... */\n      tag_402\n        /* \"chestNft.sol\":25331:25335  from */\n      dup4\n        /* \"chestNft.sol\":25402:25455  _nextExtraData(from, address(0), prevOwnershipPacked) */\n      tag_403\n        /* \"chestNft.sol\":25417:25421  from */\n      dup6\n        /* \"chestNft.sol\":25431:25432  0 */\n      0x00\n        /* \"chestNft.sol\":25435:25454  prevOwnershipPacked */\n      dup9\n        /* \"chestNft.sol\":25402:25416  _nextExtraData */\n      tag_202\n        /* \"chestNft.sol\":25402:25455  _nextExtraData(from, address(0), prevOwnershipPacked) */\n      jump\t// in\n    tag_403:\n        /* \"chestNft.sol\":1572:1580  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":1292:1300  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":25355:25398  _BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED */\n      or\n        /* \"chestNft.sol\":25354:25455  (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked) */\n      or\n        /* \"chestNft.sol\":25294:25312  _packOwnershipData */\n      tag_203\n        /* \"chestNft.sol\":25294:25470  _packOwnershipData(... */\n      jump\t// in\n    tag_402:\n        /* \"chestNft.sol\":25265:25282  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":25265:25291  _packedOwnerships[tokenId] */\n      0x00\n        /* \"chestNft.sol\":25283:25290  tokenId */\n      dup9\n        /* \"chestNft.sol\":25265:25291  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":25265:25470  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":25641:25642  0 */\n      0x00\n        /* \"chestNft.sol\":1572:1580  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"chestNft.sol\":25590:25609  prevOwnershipPacked */\n      dup6\n        /* \"chestNft.sol\":25590:25637  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"chestNft.sol\":25590:25642  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"chestNft.sol\":25586:26213  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_404\n      jumpi\n        /* \"chestNft.sol\":25663:25682  uint256 nextTokenId */\n      0x00\n        /* \"chestNft.sol\":25695:25696  1 */\n      0x01\n        /* \"chestNft.sol\":25685:25692  tokenId */\n      dup8\n        /* \"chestNft.sol\":25685:25696  tokenId + 1 */\n      add\n        /* \"chestNft.sol\":25663:25696  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"chestNft.sol\":25852:25853  0 */\n      0x00\n        /* \"chestNft.sol\":25818:25835  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":25818:25848  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"chestNft.sol\":25836:25847  nextTokenId */\n      dup4\n        /* \"chestNft.sol\":25818:25848  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"chestNft.sol\":25818:25853  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"chestNft.sol\":25814:26198  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_405\n      jumpi\n        /* \"chestNft.sol\":25956:25969  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":25941:25952  nextTokenId */\n      dup2\n        /* \"chestNft.sol\":25941:25969  nextTokenId != _currentIndex */\n      eq\n        /* \"chestNft.sol\":25937:26179  if (nextTokenId != _currentIndex) {... */\n      tag_406\n      jumpi\n        /* \"chestNft.sol\":26136:26155  prevOwnershipPacked */\n      dup5\n        /* \"chestNft.sol\":26103:26120  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":26103:26133  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"chestNft.sol\":26121:26132  nextTokenId */\n      dup4\n        /* \"chestNft.sol\":26103:26133  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":26103:26155  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":25937:26179  if (nextTokenId != _currentIndex) {... */\n    tag_406:\n        /* \"chestNft.sol\":25814:26198  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_405:\n        /* \"chestNft.sol\":25644:26213  {... */\n      pop\n        /* \"chestNft.sol\":25586:26213  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_404:\n        /* \"chestNft.sol\":26268:26275  tokenId */\n      dup6\n        /* \"chestNft.sol\":26264:26265  0 */\n      0x00\n        /* \"chestNft.sol\":26241:26276  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":26250:26254  from */\n      dup5\n        /* \"chestNft.sol\":26241:26276  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"chestNft.sol\":26287:26337  _afterTokenTransfers(from, address(0), tokenId, 1) */\n      tag_407\n        /* \"chestNft.sol\":26308:26312  from */\n      dup4\n        /* \"chestNft.sol\":26322:26323  0 */\n      0x00\n        /* \"chestNft.sol\":26326:26333  tokenId */\n      dup9\n        /* \"chestNft.sol\":26335:26336  1 */\n      0x01\n        /* \"chestNft.sol\":26287:26307  _afterTokenTransfers */\n      tag_210\n        /* \"chestNft.sol\":26287:26337  _afterTokenTransfers(from, address(0), tokenId, 1) */\n      jump\t// in\n    tag_407:\n        /* \"chestNft.sol\":26464:26476  _burnCounter */\n      0x02\n      0x00\n        /* \"chestNft.sol\":26464:26478  _burnCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"chestNft.sol\":23727:26497  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"chestNft.sol\":23658:26497  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":18415:20720  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_379:\n        /* \"chestNft.sol\":18488:18508  uint256 startTokenId */\n      0x00\n        /* \"chestNft.sol\":18511:18524  _currentIndex */\n      sload(0x01)\n        /* \"chestNft.sol\":18488:18524  uint256 startTokenId = _currentIndex */\n      swap1\n      pop\n        /* \"chestNft.sol\":18551:18552  0 */\n      0x00\n        /* \"chestNft.sol\":18539:18547  quantity */\n      dup3\n        /* \"chestNft.sol\":18539:18552  quantity == 0 */\n      sub\n        /* \"chestNft.sol\":18535:18588  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n      tag_409\n      jumpi\n        /* \"chestNft.sol\":18554:18588  _revert(MintZeroQuantity.selector) */\n      tag_410\n        /* \"chestNft.sol\":18562:18587  MintZeroQuantity.selector */\n      shl(0xe0, 0xb562e8dd)\n        /* \"chestNft.sol\":18554:18561  _revert */\n      tag_168\n        /* \"chestNft.sol\":18554:18588  _revert(MintZeroQuantity.selector) */\n      jump\t// in\n    tag_410:\n        /* \"chestNft.sol\":18535:18588  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n    tag_409:\n        /* \"chestNft.sol\":18601:18662  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_411\n        /* \"chestNft.sol\":18631:18632  0 */\n      0x00\n        /* \"chestNft.sol\":18635:18637  to */\n      dup5\n        /* \"chestNft.sol\":18639:18651  startTokenId */\n      dup4\n        /* \"chestNft.sol\":18653:18661  quantity */\n      dup6\n        /* \"chestNft.sol\":18601:18622  _beforeTokenTransfers */\n      tag_198\n        /* \"chestNft.sol\":18601:18662  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_411:\n        /* \"chestNft.sol\":19135:19274  _packOwnershipData(... */\n      tag_412\n        /* \"chestNft.sol\":19172:19174  to */\n      dup4\n        /* \"chestNft.sol\":19226:19259  _nextExtraData(address(0), to, 0) */\n      tag_413\n        /* \"chestNft.sol\":19249:19250  0 */\n      0x00\n        /* \"chestNft.sol\":19253:19255  to */\n      dup7\n        /* \"chestNft.sol\":19257:19258  0 */\n      0x00\n        /* \"chestNft.sol\":19226:19240  _nextExtraData */\n      tag_202\n        /* \"chestNft.sol\":19226:19259  _nextExtraData(address(0), to, 0) */\n      jump\t// in\n    tag_413:\n        /* \"chestNft.sol\":19193:19223  _nextInitializedFlag(quantity) */\n      tag_414\n        /* \"chestNft.sol\":19214:19222  quantity */\n      dup6\n        /* \"chestNft.sol\":19193:19213  _nextInitializedFlag */\n      tag_415\n        /* \"chestNft.sol\":19193:19223  _nextInitializedFlag(quantity) */\n      jump\t// in\n    tag_414:\n        /* \"chestNft.sol\":19193:19259  _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0) */\n      or\n        /* \"chestNft.sol\":19135:19153  _packOwnershipData */\n      tag_203\n        /* \"chestNft.sol\":19135:19274  _packOwnershipData(... */\n      jump\t// in\n    tag_412:\n        /* \"chestNft.sol\":19101:19118  _packedOwnerships */\n      0x0b\n        /* \"chestNft.sol\":19101:19132  _packedOwnerships[startTokenId] */\n      0x00\n        /* \"chestNft.sol\":19119:19131  startTokenId */\n      dup4\n        /* \"chestNft.sol\":19101:19132  _packedOwnerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"chestNft.sol\":19101:19274  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":19561:19562  1 */\n      0x01\n        /* \"chestNft.sol\":654:656  64 */\n      0x40\n        /* \"chestNft.sol\":19531:19532  1 */\n      0x01\n        /* \"chestNft.sol\":19531:19557  1 << _BITPOS_NUMBER_MINTED */\n      swap1\n      shl\n        /* \"chestNft.sol\":19530:19562  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      or\n        /* \"chestNft.sol\":19518:19526  quantity */\n      dup3\n        /* \"chestNft.sol\":19518:19563  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      mul\n        /* \"chestNft.sol\":19492:19510  _packedAddressData */\n      0x0c\n        /* \"chestNft.sol\":19492:19514  _packedAddressData[to] */\n      0x00\n        /* \"chestNft.sol\":19511:19513  to */\n      dup6\n        /* \"chestNft.sol\":19492:19514  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"chestNft.sol\":19492:19563  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":19674:19690  uint256 toMasked */\n      0x00\n        /* \"chestNft.sol\":1974:1988  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"chestNft.sol\":19709:19711  to */\n      dup5\n        /* \"chestNft.sol\":19693:19713  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"chestNft.sol\":19693:19732  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"chestNft.sol\":19674:19732  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"chestNft.sol\":19765:19766  0 */\n      0x00\n        /* \"chestNft.sol\":19753:19761  toMasked */\n      dup2\n        /* \"chestNft.sol\":19753:19766  toMasked == 0 */\n      sub\n        /* \"chestNft.sol\":19749:19803  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n      tag_416\n      jumpi\n        /* \"chestNft.sol\":19768:19803  _revert(MintToZeroAddress.selector) */\n      tag_417\n        /* \"chestNft.sol\":19776:19802  MintToZeroAddress.selector */\n      shl(0xe0, 0x2e076300)\n        /* \"chestNft.sol\":19768:19775  _revert */\n      tag_168\n        /* \"chestNft.sol\":19768:19803  _revert(MintToZeroAddress.selector) */\n      jump\t// in\n    tag_417:\n        /* \"chestNft.sol\":19749:19803  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n    tag_416:\n        /* \"chestNft.sol\":19820:19831  uint256 end */\n      0x00\n        /* \"chestNft.sol\":19849:19857  quantity */\n      dup4\n        /* \"chestNft.sol\":19834:19846  startTokenId */\n      dup4\n        /* \"chestNft.sol\":19834:19857  startTokenId + quantity */\n      add\n        /* \"chestNft.sol\":19820:19857  uint256 end = startTokenId + quantity */\n      swap1\n      pop\n        /* \"chestNft.sol\":19872:19887  uint256 tokenId */\n      0x00\n        /* \"chestNft.sol\":19890:19902  startTokenId */\n      dup4\n        /* \"chestNft.sol\":19872:19902  uint256 tokenId = startTokenId */\n      swap1\n      pop\n        /* \"chestNft.sol\":19919:20595  do {... */\n    tag_418:\n        /* \"chestNft.sol\":20338:20345  tokenId */\n      dup1\n        /* \"chestNft.sol\":20294:20302  toMasked */\n      dup4\n        /* \"chestNft.sol\":20249:20250  0 */\n      0x00\n        /* \"chestNft.sol\":20183:20208  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"chestNft.sol\":20120:20121  0 */\n      0x00\n        /* \"chestNft.sol\":20055:20056  0 */\n      dup1\n        /* \"chestNft.sol\":20024:20382  log4(... */\n      log4\n        /* \"chestNft.sol\":20590:20593  end */\n      dup2\n        /* \"chestNft.sol\":20577:20586  ++tokenId */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n      dup2\n        /* \"chestNft.sol\":20577:20593  ++tokenId != end */\n      sub\n        /* \"chestNft.sol\":19919:20595  do {... */\n      tag_418\n      jumpi\n        /* \"chestNft.sol\":20627:20630  end */\n      dup2\n        /* \"chestNft.sol\":20611:20624  _currentIndex */\n      0x01\n        /* \"chestNft.sol\":20611:20630  _currentIndex = end */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"chestNft.sol\":18850:20642  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"chestNft.sol\":20652:20712  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_421\n        /* \"chestNft.sol\":20681:20682  0 */\n      0x00\n        /* \"chestNft.sol\":20685:20687  to */\n      dup5\n        /* \"chestNft.sol\":20689:20701  startTokenId */\n      dup4\n        /* \"chestNft.sol\":20703:20711  quantity */\n      dup6\n        /* \"chestNft.sol\":20652:20672  _afterTokenTransfers */\n      tag_210\n        /* \"chestNft.sol\":20652:20712  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_421:\n        /* \"chestNft.sol\":18477:20720  {... */\n      pop\n        /* \"chestNft.sol\":18415:20720  function _mint(address to, uint256 quantity) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"chestNft.sol\":10884:11208  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n    tag_415:\n        /* \"chestNft.sol\":10954:10968  uint256 result */\n      0x00\n        /* \"chestNft.sol\":11187:11188  1 */\n      0x01\n        /* \"chestNft.sol\":11177:11185  quantity */\n      dup3\n        /* \"chestNft.sol\":11174:11189  eq(quantity, 1) */\n      eq\n        /* \"chestNft.sol\":11148:11172  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"chestNft.sol\":11144:11190  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"chestNft.sol\":11134:11190  result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      swap1\n      pop\n        /* \"chestNft.sol\":10884:11208  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_423:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_424:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_425:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_426:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_427:\n        /* \"#utility.yul\":561:584   */\n      tag_502\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_426\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_503:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_428:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_505\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_427\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_36:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_508\n      tag_424\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":833:952   */\n    tag_507:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_509\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_428\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_429:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_430:\n        /* \"#utility.yul\":1268:1289   */\n      tag_512\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_429\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_39:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_514\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_430\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_431:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_432:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_433:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_518:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_434:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_435:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_523\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_431\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2329:2400   */\n      tag_524\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_432\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_525\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_433\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2499:2528   */\n      tag_526\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_434\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_44:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_528\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_435\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_436:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_437:\n        /* \"#utility.yul\":3016:3040   */\n      tag_531\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_436\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_532:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_438:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_534\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_437\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_48:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_537\n      tag_424\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3292:3411   */\n    tag_536:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_538\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_438\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_439:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_440:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_541\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_439\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_441:\n        /* \"#utility.yul\":3872:3896   */\n      tag_543\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_440\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_51:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_545\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_441\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_442:\n        /* \"#utility.yul\":4210:4234   */\n      tag_547\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_440\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_548:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_443:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_550\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_442\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_54:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_553\n      tag_424\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4503:4622   */\n    tag_552:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_554\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_443\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_555\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_438\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_444:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5130   */\n    tag_445:\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5119:5120   */\n      dup1\n        /* \"#utility.yul\":5112:5124   */\n      revert\n        /* \"#utility.yul\":5136:5316   */\n    tag_446:\n        /* \"#utility.yul\":5184:5261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5174:5262   */\n      mstore\n        /* \"#utility.yul\":5281:5285   */\n      0x41\n        /* \"#utility.yul\":5278:5279   */\n      0x04\n        /* \"#utility.yul\":5271:5286   */\n      mstore\n        /* \"#utility.yul\":5305:5309   */\n      0x24\n        /* \"#utility.yul\":5302:5303   */\n      0x00\n        /* \"#utility.yul\":5295:5310   */\n      revert\n        /* \"#utility.yul\":5322:5603   */\n    tag_447:\n        /* \"#utility.yul\":5405:5432   */\n      tag_560\n        /* \"#utility.yul\":5427:5431   */\n      dup3\n        /* \"#utility.yul\":5405:5432   */\n      tag_434\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":5397:5403   */\n      dup2\n        /* \"#utility.yul\":5393:5433   */\n      add\n        /* \"#utility.yul\":5535:5541   */\n      dup2\n        /* \"#utility.yul\":5523:5533   */\n      dup2\n        /* \"#utility.yul\":5520:5542   */\n      lt\n        /* \"#utility.yul\":5499:5517   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5487:5497   */\n      dup3\n        /* \"#utility.yul\":5484:5518   */\n      gt\n        /* \"#utility.yul\":5481:5543   */\n      or\n        /* \"#utility.yul\":5478:5566   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":5546:5564   */\n      tag_562\n      tag_446\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5478:5566   */\n    tag_561:\n        /* \"#utility.yul\":5586:5596   */\n      dup1\n        /* \"#utility.yul\":5582:5584   */\n      0x40\n        /* \"#utility.yul\":5575:5597   */\n      mstore\n        /* \"#utility.yul\":5365:5603   */\n      pop\n        /* \"#utility.yul\":5322:5603   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5609:5738   */\n    tag_448:\n        /* \"#utility.yul\":5643:5649   */\n      0x00\n        /* \"#utility.yul\":5670:5690   */\n      tag_564\n      tag_423\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":5660:5690   */\n      swap1\n      pop\n        /* \"#utility.yul\":5699:5732   */\n      tag_565\n        /* \"#utility.yul\":5727:5731   */\n      dup3\n        /* \"#utility.yul\":5719:5725   */\n      dup3\n        /* \"#utility.yul\":5699:5732   */\n      tag_447\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":5609:5738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5744:6052   */\n    tag_449:\n        /* \"#utility.yul\":5806:5810   */\n      0x00\n        /* \"#utility.yul\":5896:5914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5888:5894   */\n      dup3\n        /* \"#utility.yul\":5885:5915   */\n      gt\n        /* \"#utility.yul\":5882:5938   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":5918:5936   */\n      tag_568\n      tag_446\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":5882:5938   */\n    tag_567:\n        /* \"#utility.yul\":5956:5985   */\n      tag_569\n        /* \"#utility.yul\":5978:5984   */\n      dup3\n        /* \"#utility.yul\":5956:5985   */\n      tag_434\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":5948:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6040:6044   */\n      0x20\n        /* \"#utility.yul\":6034:6038   */\n      dup2\n        /* \"#utility.yul\":6030:6045   */\n      add\n        /* \"#utility.yul\":6022:6045   */\n      swap1\n      pop\n        /* \"#utility.yul\":5744:6052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6204   */\n    tag_450:\n        /* \"#utility.yul\":6155:6161   */\n      dup3\n        /* \"#utility.yul\":6150:6153   */\n      dup2\n        /* \"#utility.yul\":6145:6148   */\n      dup4\n        /* \"#utility.yul\":6132:6162   */\n      calldatacopy\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6187:6193   */\n      dup4\n        /* \"#utility.yul\":6182:6185   */\n      dup4\n        /* \"#utility.yul\":6178:6194   */\n      add\n        /* \"#utility.yul\":6171:6198   */\n      mstore\n        /* \"#utility.yul\":6058:6204   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6210:6635   */\n    tag_451:\n        /* \"#utility.yul\":6288:6293   */\n      0x00\n        /* \"#utility.yul\":6313:6379   */\n      tag_572\n        /* \"#utility.yul\":6329:6378   */\n      tag_573\n        /* \"#utility.yul\":6371:6377   */\n      dup5\n        /* \"#utility.yul\":6329:6378   */\n      tag_449\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":6313:6379   */\n      tag_448\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6304:6379   */\n      swap1\n      pop\n        /* \"#utility.yul\":6402:6408   */\n      dup3\n        /* \"#utility.yul\":6395:6400   */\n      dup2\n        /* \"#utility.yul\":6388:6409   */\n      mstore\n        /* \"#utility.yul\":6440:6444   */\n      0x20\n        /* \"#utility.yul\":6433:6438   */\n      dup2\n        /* \"#utility.yul\":6429:6445   */\n      add\n        /* \"#utility.yul\":6478:6481   */\n      dup5\n        /* \"#utility.yul\":6469:6475   */\n      dup5\n        /* \"#utility.yul\":6464:6467   */\n      dup5\n        /* \"#utility.yul\":6460:6476   */\n      add\n        /* \"#utility.yul\":6457:6482   */\n      gt\n        /* \"#utility.yul\":6454:6566   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":6485:6564   */\n      tag_575\n      tag_445\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":6454:6566   */\n    tag_574:\n        /* \"#utility.yul\":6575:6629   */\n      tag_576\n        /* \"#utility.yul\":6622:6628   */\n      dup5\n        /* \"#utility.yul\":6617:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6615   */\n      dup6\n        /* \"#utility.yul\":6575:6629   */\n      tag_450\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":6294:6635   */\n      pop\n        /* \"#utility.yul\":6210:6635   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:6995   */\n    tag_452:\n        /* \"#utility.yul\":6711:6716   */\n      0x00\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6753:6757   */\n      0x1f\n        /* \"#utility.yul\":6745:6751   */\n      dup4\n        /* \"#utility.yul\":6741:6758   */\n      add\n        /* \"#utility.yul\":6737:6764   */\n      slt\n        /* \"#utility.yul\":6727:6849   */\n      tag_578\n      jumpi\n        /* \"#utility.yul\":6768:6847   */\n      tag_579\n      tag_444\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":6727:6849   */\n    tag_578:\n        /* \"#utility.yul\":6885:6891   */\n      dup2\n        /* \"#utility.yul\":6872:6892   */\n      calldataload\n        /* \"#utility.yul\":6910:6989   */\n      tag_580\n        /* \"#utility.yul\":6985:6988   */\n      dup5\n        /* \"#utility.yul\":6977:6983   */\n      dup3\n        /* \"#utility.yul\":6970:6974   */\n      0x20\n        /* \"#utility.yul\":6962:6968   */\n      dup7\n        /* \"#utility.yul\":6958:6975   */\n      add\n        /* \"#utility.yul\":6910:6989   */\n      tag_451\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":6901:6989   */\n      swap2\n      pop\n        /* \"#utility.yul\":6717:6995   */\n      pop\n        /* \"#utility.yul\":6655:6995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7001:7510   */\n    tag_59:\n        /* \"#utility.yul\":7070:7076   */\n      0x00\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7107:7116   */\n      dup3\n        /* \"#utility.yul\":7098:7105   */\n      dup5\n        /* \"#utility.yul\":7094:7117   */\n      sub\n        /* \"#utility.yul\":7090:7122   */\n      slt\n        /* \"#utility.yul\":7087:7206   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":7125:7204   */\n      tag_583\n      tag_424\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":7087:7206   */\n    tag_582:\n        /* \"#utility.yul\":7273:7274   */\n      0x00\n        /* \"#utility.yul\":7262:7271   */\n      dup3\n        /* \"#utility.yul\":7258:7275   */\n      add\n        /* \"#utility.yul\":7245:7276   */\n      calldataload\n        /* \"#utility.yul\":7303:7321   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7295:7301   */\n      dup2\n        /* \"#utility.yul\":7292:7322   */\n      gt\n        /* \"#utility.yul\":7289:7406   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":7325:7404   */\n      tag_585\n      tag_425\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7289:7406   */\n    tag_584:\n        /* \"#utility.yul\":7430:7493   */\n      tag_586\n        /* \"#utility.yul\":7485:7492   */\n      dup5\n        /* \"#utility.yul\":7476:7482   */\n      dup3\n        /* \"#utility.yul\":7465:7474   */\n      dup6\n        /* \"#utility.yul\":7461:7483   */\n      add\n        /* \"#utility.yul\":7430:7493   */\n      tag_452\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":7420:7493   */\n      swap2\n      pop\n        /* \"#utility.yul\":7216:7503   */\n      pop\n        /* \"#utility.yul\":7001:7510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:7634   */\n    tag_453:\n        /* \"#utility.yul\":7603:7627   */\n      tag_588\n        /* \"#utility.yul\":7621:7626   */\n      dup2\n        /* \"#utility.yul\":7603:7627   */\n      tag_436\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":7598:7601   */\n      dup3\n        /* \"#utility.yul\":7591:7628   */\n      mstore\n        /* \"#utility.yul\":7516:7634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7640:7862   */\n    tag_65:\n        /* \"#utility.yul\":7733:7737   */\n      0x00\n        /* \"#utility.yul\":7771:7773   */\n      0x20\n        /* \"#utility.yul\":7760:7769   */\n      dup3\n        /* \"#utility.yul\":7756:7774   */\n      add\n        /* \"#utility.yul\":7748:7774   */\n      swap1\n      pop\n        /* \"#utility.yul\":7784:7855   */\n      tag_590\n        /* \"#utility.yul\":7852:7853   */\n      0x00\n        /* \"#utility.yul\":7841:7850   */\n      dup4\n        /* \"#utility.yul\":7837:7854   */\n      add\n        /* \"#utility.yul\":7828:7834   */\n      dup5\n        /* \"#utility.yul\":7784:7855   */\n      tag_453\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":7640:7862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7868:8487   */\n    tag_68:\n        /* \"#utility.yul\":7945:7951   */\n      0x00\n        /* \"#utility.yul\":7953:7959   */\n      dup1\n        /* \"#utility.yul\":7961:7967   */\n      0x00\n        /* \"#utility.yul\":8010:8012   */\n      0x60\n        /* \"#utility.yul\":7998:8007   */\n      dup5\n        /* \"#utility.yul\":7989:7996   */\n      dup7\n        /* \"#utility.yul\":7985:8008   */\n      sub\n        /* \"#utility.yul\":7981:8013   */\n      slt\n        /* \"#utility.yul\":7978:8097   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":8016:8095   */\n      tag_593\n      tag_424\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":7978:8097   */\n    tag_592:\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8161:8214   */\n      tag_594\n        /* \"#utility.yul\":8206:8213   */\n      dup7\n        /* \"#utility.yul\":8197:8203   */\n      dup3\n        /* \"#utility.yul\":8186:8195   */\n      dup8\n        /* \"#utility.yul\":8182:8204   */\n      add\n        /* \"#utility.yul\":8161:8214   */\n      tag_443\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":8151:8214   */\n      swap4\n      pop\n        /* \"#utility.yul\":8107:8224   */\n      pop\n        /* \"#utility.yul\":8263:8265   */\n      0x20\n        /* \"#utility.yul\":8289:8342   */\n      tag_595\n        /* \"#utility.yul\":8334:8341   */\n      dup7\n        /* \"#utility.yul\":8325:8331   */\n      dup3\n        /* \"#utility.yul\":8314:8323   */\n      dup8\n        /* \"#utility.yul\":8310:8332   */\n      add\n        /* \"#utility.yul\":8289:8342   */\n      tag_443\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":8279:8342   */\n      swap3\n      pop\n        /* \"#utility.yul\":8234:8352   */\n      pop\n        /* \"#utility.yul\":8391:8393   */\n      0x40\n        /* \"#utility.yul\":8417:8470   */\n      tag_596\n        /* \"#utility.yul\":8462:8469   */\n      dup7\n        /* \"#utility.yul\":8453:8459   */\n      dup3\n        /* \"#utility.yul\":8442:8451   */\n      dup8\n        /* \"#utility.yul\":8438:8460   */\n      add\n        /* \"#utility.yul\":8417:8470   */\n      tag_438\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8407:8470   */\n      swap2\n      pop\n        /* \"#utility.yul\":8362:8480   */\n      pop\n        /* \"#utility.yul\":7868:8487   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8493:8607   */\n    tag_454:\n        /* \"#utility.yul\":8560:8566   */\n      0x00\n        /* \"#utility.yul\":8594:8599   */\n      dup2\n        /* \"#utility.yul\":8588:8600   */\n      mload\n        /* \"#utility.yul\":8578:8600   */\n      swap1\n      pop\n        /* \"#utility.yul\":8493:8607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8613:8797   */\n    tag_455:\n        /* \"#utility.yul\":8712:8723   */\n      0x00\n        /* \"#utility.yul\":8746:8752   */\n      dup3\n        /* \"#utility.yul\":8741:8744   */\n      dup3\n        /* \"#utility.yul\":8734:8753   */\n      mstore\n        /* \"#utility.yul\":8786:8790   */\n      0x20\n        /* \"#utility.yul\":8781:8784   */\n      dup3\n        /* \"#utility.yul\":8777:8791   */\n      add\n        /* \"#utility.yul\":8762:8791   */\n      swap1\n      pop\n        /* \"#utility.yul\":8613:8797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:8935   */\n    tag_456:\n        /* \"#utility.yul\":8870:8874   */\n      0x00\n        /* \"#utility.yul\":8893:8896   */\n      dup2\n        /* \"#utility.yul\":8885:8896   */\n      swap1\n      pop\n        /* \"#utility.yul\":8923:8927   */\n      0x20\n        /* \"#utility.yul\":8918:8921   */\n      dup3\n        /* \"#utility.yul\":8914:8928   */\n      add\n        /* \"#utility.yul\":8906:8928   */\n      swap1\n      pop\n        /* \"#utility.yul\":8803:8935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8941:9049   */\n    tag_457:\n        /* \"#utility.yul\":9018:9042   */\n      tag_601\n        /* \"#utility.yul\":9036:9041   */\n      dup2\n        /* \"#utility.yul\":9018:9042   */\n      tag_436\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":9013:9016   */\n      dup3\n        /* \"#utility.yul\":9006:9043   */\n      mstore\n        /* \"#utility.yul\":8941:9049   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9055:9234   */\n    tag_458:\n        /* \"#utility.yul\":9124:9134   */\n      0x00\n        /* \"#utility.yul\":9145:9191   */\n      tag_603\n        /* \"#utility.yul\":9187:9190   */\n      dup4\n        /* \"#utility.yul\":9179:9185   */\n      dup4\n        /* \"#utility.yul\":9145:9191   */\n      tag_457\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":9223:9227   */\n      0x20\n        /* \"#utility.yul\":9218:9221   */\n      dup4\n        /* \"#utility.yul\":9214:9228   */\n      add\n        /* \"#utility.yul\":9200:9228   */\n      swap1\n      pop\n        /* \"#utility.yul\":9055:9234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9240:9353   */\n    tag_459:\n        /* \"#utility.yul\":9310:9314   */\n      0x00\n        /* \"#utility.yul\":9342:9346   */\n      0x20\n        /* \"#utility.yul\":9337:9340   */\n      dup3\n        /* \"#utility.yul\":9333:9347   */\n      add\n        /* \"#utility.yul\":9325:9347   */\n      swap1\n      pop\n        /* \"#utility.yul\":9240:9353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9389:10121   */\n    tag_460:\n        /* \"#utility.yul\":9508:9511   */\n      0x00\n        /* \"#utility.yul\":9537:9591   */\n      tag_606\n        /* \"#utility.yul\":9585:9590   */\n      dup3\n        /* \"#utility.yul\":9537:9591   */\n      tag_454\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":9607:9693   */\n      tag_607\n        /* \"#utility.yul\":9686:9692   */\n      dup2\n        /* \"#utility.yul\":9681:9684   */\n      dup6\n        /* \"#utility.yul\":9607:9693   */\n      tag_455\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":9600:9693   */\n      swap4\n      pop\n        /* \"#utility.yul\":9717:9773   */\n      tag_608\n        /* \"#utility.yul\":9767:9772   */\n      dup4\n        /* \"#utility.yul\":9717:9773   */\n      tag_456\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":9796:9803   */\n      dup1\n        /* \"#utility.yul\":9827:9828   */\n      0x00\n        /* \"#utility.yul\":9812:10096   */\n    tag_609:\n        /* \"#utility.yul\":9837:9843   */\n      dup4\n        /* \"#utility.yul\":9834:9835   */\n      dup2\n        /* \"#utility.yul\":9831:9844   */\n      lt\n        /* \"#utility.yul\":9812:10096   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":9913:9919   */\n      dup2\n        /* \"#utility.yul\":9907:9920   */\n      mload\n        /* \"#utility.yul\":9940:10003   */\n      tag_612\n        /* \"#utility.yul\":9999:10002   */\n      dup9\n        /* \"#utility.yul\":9984:9997   */\n      dup3\n        /* \"#utility.yul\":9940:10003   */\n      tag_458\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":9933:10003   */\n      swap8\n      pop\n        /* \"#utility.yul\":10026:10086   */\n      tag_613\n        /* \"#utility.yul\":10079:10085   */\n      dup4\n        /* \"#utility.yul\":10026:10086   */\n      tag_459\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":10016:10086   */\n      swap3\n      pop\n        /* \"#utility.yul\":9872:10096   */\n      pop\n        /* \"#utility.yul\":9859:9860   */\n      0x01\n        /* \"#utility.yul\":9856:9857   */\n      dup2\n        /* \"#utility.yul\":9852:9861   */\n      add\n        /* \"#utility.yul\":9847:9861   */\n      swap1\n      pop\n        /* \"#utility.yul\":9812:10096   */\n      jump(tag_609)\n    tag_611:\n        /* \"#utility.yul\":9816:9830   */\n      pop\n        /* \"#utility.yul\":10112:10115   */\n      dup6\n        /* \"#utility.yul\":10105:10115   */\n      swap4\n      pop\n        /* \"#utility.yul\":9513:10121   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9389:10121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10127:10500   */\n    tag_81:\n        /* \"#utility.yul\":10270:10274   */\n      0x00\n        /* \"#utility.yul\":10308:10310   */\n      0x20\n        /* \"#utility.yul\":10297:10306   */\n      dup3\n        /* \"#utility.yul\":10293:10311   */\n      add\n        /* \"#utility.yul\":10285:10311   */\n      swap1\n      pop\n        /* \"#utility.yul\":10357:10366   */\n      dup2\n        /* \"#utility.yul\":10351:10355   */\n      dup2\n        /* \"#utility.yul\":10347:10367   */\n      sub\n        /* \"#utility.yul\":10343:10344   */\n      0x00\n        /* \"#utility.yul\":10332:10341   */\n      dup4\n        /* \"#utility.yul\":10328:10345   */\n      add\n        /* \"#utility.yul\":10321:10368   */\n      mstore\n        /* \"#utility.yul\":10385:10493   */\n      tag_615\n        /* \"#utility.yul\":10488:10492   */\n      dup2\n        /* \"#utility.yul\":10479:10485   */\n      dup5\n        /* \"#utility.yul\":10385:10493   */\n      tag_460\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":10377:10493   */\n      swap1\n      pop\n        /* \"#utility.yul\":10127:10500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10506:10835   */\n    tag_98:\n        /* \"#utility.yul\":10565:10571   */\n      0x00\n        /* \"#utility.yul\":10614:10616   */\n      0x20\n        /* \"#utility.yul\":10602:10611   */\n      dup3\n        /* \"#utility.yul\":10593:10600   */\n      dup5\n        /* \"#utility.yul\":10589:10612   */\n      sub\n        /* \"#utility.yul\":10585:10617   */\n      slt\n        /* \"#utility.yul\":10582:10701   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":10620:10699   */\n      tag_618\n      tag_424\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":10582:10701   */\n    tag_617:\n        /* \"#utility.yul\":10740:10741   */\n      0x00\n        /* \"#utility.yul\":10765:10818   */\n      tag_619\n        /* \"#utility.yul\":10810:10817   */\n      dup5\n        /* \"#utility.yul\":10801:10807   */\n      dup3\n        /* \"#utility.yul\":10790:10799   */\n      dup6\n        /* \"#utility.yul\":10786:10808   */\n      add\n        /* \"#utility.yul\":10765:10818   */\n      tag_443\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":10755:10818   */\n      swap2\n      pop\n        /* \"#utility.yul\":10711:10828   */\n      pop\n        /* \"#utility.yul\":10506:10835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10841:10957   */\n    tag_461:\n        /* \"#utility.yul\":10911:10932   */\n      tag_621\n        /* \"#utility.yul\":10926:10931   */\n      dup2\n        /* \"#utility.yul\":10911:10932   */\n      tag_429\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":10904:10909   */\n      dup2\n        /* \"#utility.yul\":10901:10933   */\n      eq\n        /* \"#utility.yul\":10891:10951   */\n      tag_622\n      jumpi\n        /* \"#utility.yul\":10947:10948   */\n      0x00\n        /* \"#utility.yul\":10944:10945   */\n      dup1\n        /* \"#utility.yul\":10937:10949   */\n      revert\n        /* \"#utility.yul\":10891:10951   */\n    tag_622:\n        /* \"#utility.yul\":10841:10957   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10963:11096   */\n    tag_462:\n        /* \"#utility.yul\":11006:11011   */\n      0x00\n        /* \"#utility.yul\":11044:11050   */\n      dup2\n        /* \"#utility.yul\":11031:11051   */\n      calldataload\n        /* \"#utility.yul\":11022:11051   */\n      swap1\n      pop\n        /* \"#utility.yul\":11060:11090   */\n      tag_624\n        /* \"#utility.yul\":11084:11089   */\n      dup2\n        /* \"#utility.yul\":11060:11090   */\n      tag_461\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10963:11096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11102:11570   */\n    tag_115:\n        /* \"#utility.yul\":11167:11173   */\n      0x00\n        /* \"#utility.yul\":11175:11181   */\n      dup1\n        /* \"#utility.yul\":11224:11226   */\n      0x40\n        /* \"#utility.yul\":11212:11221   */\n      dup4\n        /* \"#utility.yul\":11203:11210   */\n      dup6\n        /* \"#utility.yul\":11199:11222   */\n      sub\n        /* \"#utility.yul\":11195:11227   */\n      slt\n        /* \"#utility.yul\":11192:11311   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":11230:11309   */\n      tag_627\n      tag_424\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":11192:11311   */\n    tag_626:\n        /* \"#utility.yul\":11350:11351   */\n      0x00\n        /* \"#utility.yul\":11375:11428   */\n      tag_628\n        /* \"#utility.yul\":11420:11427   */\n      dup6\n        /* \"#utility.yul\":11411:11417   */\n      dup3\n        /* \"#utility.yul\":11400:11409   */\n      dup7\n        /* \"#utility.yul\":11396:11418   */\n      add\n        /* \"#utility.yul\":11375:11428   */\n      tag_443\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":11365:11428   */\n      swap3\n      pop\n        /* \"#utility.yul\":11321:11438   */\n      pop\n        /* \"#utility.yul\":11477:11479   */\n      0x20\n        /* \"#utility.yul\":11503:11553   */\n      tag_629\n        /* \"#utility.yul\":11545:11552   */\n      dup6\n        /* \"#utility.yul\":11536:11542   */\n      dup3\n        /* \"#utility.yul\":11525:11534   */\n      dup7\n        /* \"#utility.yul\":11521:11543   */\n      add\n        /* \"#utility.yul\":11503:11553   */\n      tag_462\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":11493:11553   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11563   */\n      pop\n        /* \"#utility.yul\":11102:11570   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11576:11883   */\n    tag_463:\n        /* \"#utility.yul\":11637:11641   */\n      0x00\n        /* \"#utility.yul\":11727:11745   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11719:11725   */\n      dup3\n        /* \"#utility.yul\":11716:11746   */\n      gt\n        /* \"#utility.yul\":11713:11769   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":11749:11767   */\n      tag_632\n      tag_446\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":11713:11769   */\n    tag_631:\n        /* \"#utility.yul\":11787:11816   */\n      tag_633\n        /* \"#utility.yul\":11809:11815   */\n      dup3\n        /* \"#utility.yul\":11787:11816   */\n      tag_434\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":11779:11816   */\n      swap1\n      pop\n        /* \"#utility.yul\":11871:11875   */\n      0x20\n        /* \"#utility.yul\":11865:11869   */\n      dup2\n        /* \"#utility.yul\":11861:11876   */\n      add\n        /* \"#utility.yul\":11853:11876   */\n      swap1\n      pop\n        /* \"#utility.yul\":11576:11883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11889:12312   */\n    tag_464:\n        /* \"#utility.yul\":11966:11971   */\n      0x00\n        /* \"#utility.yul\":11991:12056   */\n      tag_635\n        /* \"#utility.yul\":12007:12055   */\n      tag_636\n        /* \"#utility.yul\":12048:12054   */\n      dup5\n        /* \"#utility.yul\":12007:12055   */\n      tag_463\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":11991:12056   */\n      tag_448\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":11982:12056   */\n      swap1\n      pop\n        /* \"#utility.yul\":12079:12085   */\n      dup3\n        /* \"#utility.yul\":12072:12077   */\n      dup2\n        /* \"#utility.yul\":12065:12086   */\n      mstore\n        /* \"#utility.yul\":12117:12121   */\n      0x20\n        /* \"#utility.yul\":12110:12115   */\n      dup2\n        /* \"#utility.yul\":12106:12122   */\n      add\n        /* \"#utility.yul\":12155:12158   */\n      dup5\n        /* \"#utility.yul\":12146:12152   */\n      dup5\n        /* \"#utility.yul\":12141:12144   */\n      dup5\n        /* \"#utility.yul\":12137:12153   */\n      add\n        /* \"#utility.yul\":12134:12159   */\n      gt\n        /* \"#utility.yul\":12131:12243   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":12162:12241   */\n      tag_638\n      tag_445\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12131:12243   */\n    tag_637:\n        /* \"#utility.yul\":12252:12306   */\n      tag_639\n        /* \"#utility.yul\":12299:12305   */\n      dup5\n        /* \"#utility.yul\":12294:12297   */\n      dup3\n        /* \"#utility.yul\":12289:12292   */\n      dup6\n        /* \"#utility.yul\":12252:12306   */\n      tag_450\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":11972:12312   */\n      pop\n        /* \"#utility.yul\":11889:12312   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12331:12669   */\n    tag_465:\n        /* \"#utility.yul\":12386:12391   */\n      0x00\n        /* \"#utility.yul\":12435:12438   */\n      dup3\n        /* \"#utility.yul\":12428:12432   */\n      0x1f\n        /* \"#utility.yul\":12420:12426   */\n      dup4\n        /* \"#utility.yul\":12416:12433   */\n      add\n        /* \"#utility.yul\":12412:12439   */\n      slt\n        /* \"#utility.yul\":12402:12524   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":12443:12522   */\n      tag_642\n      tag_444\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":12402:12524   */\n    tag_641:\n        /* \"#utility.yul\":12560:12566   */\n      dup2\n        /* \"#utility.yul\":12547:12567   */\n      calldataload\n        /* \"#utility.yul\":12585:12663   */\n      tag_643\n        /* \"#utility.yul\":12659:12662   */\n      dup5\n        /* \"#utility.yul\":12651:12657   */\n      dup3\n        /* \"#utility.yul\":12644:12648   */\n      0x20\n        /* \"#utility.yul\":12636:12642   */\n      dup7\n        /* \"#utility.yul\":12632:12649   */\n      add\n        /* \"#utility.yul\":12585:12663   */\n      tag_464\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":12576:12663   */\n      swap2\n      pop\n        /* \"#utility.yul\":12392:12669   */\n      pop\n        /* \"#utility.yul\":12331:12669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12675:13618   */\n    tag_123:\n        /* \"#utility.yul\":12770:12776   */\n      0x00\n        /* \"#utility.yul\":12778:12784   */\n      dup1\n        /* \"#utility.yul\":12786:12792   */\n      0x00\n        /* \"#utility.yul\":12794:12800   */\n      dup1\n        /* \"#utility.yul\":12843:12846   */\n      0x80\n        /* \"#utility.yul\":12831:12840   */\n      dup6\n        /* \"#utility.yul\":12822:12829   */\n      dup8\n        /* \"#utility.yul\":12818:12841   */\n      sub\n        /* \"#utility.yul\":12814:12847   */\n      slt\n        /* \"#utility.yul\":12811:12931   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":12850:12929   */\n      tag_646\n      tag_424\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":12811:12931   */\n    tag_645:\n        /* \"#utility.yul\":12970:12971   */\n      0x00\n        /* \"#utility.yul\":12995:13048   */\n      tag_647\n        /* \"#utility.yul\":13040:13047   */\n      dup8\n        /* \"#utility.yul\":13031:13037   */\n      dup3\n        /* \"#utility.yul\":13020:13029   */\n      dup9\n        /* \"#utility.yul\":13016:13038   */\n      add\n        /* \"#utility.yul\":12995:13048   */\n      tag_443\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":12985:13048   */\n      swap5\n      pop\n        /* \"#utility.yul\":12941:13058   */\n      pop\n        /* \"#utility.yul\":13097:13099   */\n      0x20\n        /* \"#utility.yul\":13123:13176   */\n      tag_648\n        /* \"#utility.yul\":13168:13175   */\n      dup8\n        /* \"#utility.yul\":13159:13165   */\n      dup3\n        /* \"#utility.yul\":13148:13157   */\n      dup9\n        /* \"#utility.yul\":13144:13166   */\n      add\n        /* \"#utility.yul\":13123:13176   */\n      tag_443\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":13113:13176   */\n      swap4\n      pop\n        /* \"#utility.yul\":13068:13186   */\n      pop\n        /* \"#utility.yul\":13225:13227   */\n      0x40\n        /* \"#utility.yul\":13251:13304   */\n      tag_649\n        /* \"#utility.yul\":13296:13303   */\n      dup8\n        /* \"#utility.yul\":13287:13293   */\n      dup3\n        /* \"#utility.yul\":13276:13285   */\n      dup9\n        /* \"#utility.yul\":13272:13294   */\n      add\n        /* \"#utility.yul\":13251:13304   */\n      tag_438\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":13241:13304   */\n      swap3\n      pop\n        /* \"#utility.yul\":13196:13314   */\n      pop\n        /* \"#utility.yul\":13381:13383   */\n      0x60\n        /* \"#utility.yul\":13370:13379   */\n      dup6\n        /* \"#utility.yul\":13366:13384   */\n      add\n        /* \"#utility.yul\":13353:13385   */\n      calldataload\n        /* \"#utility.yul\":13412:13430   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13404:13410   */\n      dup2\n        /* \"#utility.yul\":13401:13431   */\n      gt\n        /* \"#utility.yul\":13398:13515   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":13434:13513   */\n      tag_651\n      tag_425\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":13398:13515   */\n    tag_650:\n        /* \"#utility.yul\":13539:13601   */\n      tag_652\n        /* \"#utility.yul\":13593:13600   */\n      dup8\n        /* \"#utility.yul\":13584:13590   */\n      dup3\n        /* \"#utility.yul\":13573:13582   */\n      dup9\n        /* \"#utility.yul\":13569:13591   */\n      add\n        /* \"#utility.yul\":13539:13601   */\n      tag_465\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":13529:13601   */\n      swap2\n      pop\n        /* \"#utility.yul\":13324:13611   */\n      pop\n        /* \"#utility.yul\":12675:13618   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13624:14098   */\n    tag_137:\n        /* \"#utility.yul\":13692:13698   */\n      0x00\n        /* \"#utility.yul\":13700:13706   */\n      dup1\n        /* \"#utility.yul\":13749:13751   */\n      0x40\n        /* \"#utility.yul\":13737:13746   */\n      dup4\n        /* \"#utility.yul\":13728:13735   */\n      dup6\n        /* \"#utility.yul\":13724:13747   */\n      sub\n        /* \"#utility.yul\":13720:13752   */\n      slt\n        /* \"#utility.yul\":13717:13836   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":13755:13834   */\n      tag_655\n      tag_424\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":13717:13836   */\n    tag_654:\n        /* \"#utility.yul\":13875:13876   */\n      0x00\n        /* \"#utility.yul\":13900:13953   */\n      tag_656\n        /* \"#utility.yul\":13945:13952   */\n      dup6\n        /* \"#utility.yul\":13936:13942   */\n      dup3\n        /* \"#utility.yul\":13925:13934   */\n      dup7\n        /* \"#utility.yul\":13921:13943   */\n      add\n        /* \"#utility.yul\":13900:13953   */\n      tag_443\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":13890:13953   */\n      swap3\n      pop\n        /* \"#utility.yul\":13846:13963   */\n      pop\n        /* \"#utility.yul\":14002:14004   */\n      0x20\n        /* \"#utility.yul\":14028:14081   */\n      tag_657\n        /* \"#utility.yul\":14073:14080   */\n      dup6\n        /* \"#utility.yul\":14064:14070   */\n      dup3\n        /* \"#utility.yul\":14053:14062   */\n      dup7\n        /* \"#utility.yul\":14049:14071   */\n      add\n        /* \"#utility.yul\":14028:14081   */\n      tag_443\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":14018:14081   */\n      swap2\n      pop\n        /* \"#utility.yul\":13973:14091   */\n      pop\n        /* \"#utility.yul\":13624:14098   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14104:14284   */\n    tag_466:\n        /* \"#utility.yul\":14152:14229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14149:14150   */\n      0x00\n        /* \"#utility.yul\":14142:14230   */\n      mstore\n        /* \"#utility.yul\":14249:14253   */\n      0x22\n        /* \"#utility.yul\":14246:14247   */\n      0x04\n        /* \"#utility.yul\":14239:14254   */\n      mstore\n        /* \"#utility.yul\":14273:14277   */\n      0x24\n        /* \"#utility.yul\":14270:14271   */\n      0x00\n        /* \"#utility.yul\":14263:14278   */\n      revert\n        /* \"#utility.yul\":14290:14610   */\n    tag_158:\n        /* \"#utility.yul\":14334:14340   */\n      0x00\n        /* \"#utility.yul\":14371:14372   */\n      0x02\n        /* \"#utility.yul\":14365:14369   */\n      dup3\n        /* \"#utility.yul\":14361:14373   */\n      div\n        /* \"#utility.yul\":14351:14373   */\n      swap1\n      pop\n        /* \"#utility.yul\":14418:14419   */\n      0x01\n        /* \"#utility.yul\":14412:14416   */\n      dup3\n        /* \"#utility.yul\":14408:14420   */\n      and\n        /* \"#utility.yul\":14439:14457   */\n      dup1\n        /* \"#utility.yul\":14429:14510   */\n      tag_660\n      jumpi\n        /* \"#utility.yul\":14495:14499   */\n      0x7f\n        /* \"#utility.yul\":14487:14493   */\n      dup3\n        /* \"#utility.yul\":14483:14500   */\n      and\n        /* \"#utility.yul\":14473:14500   */\n      swap2\n      pop\n        /* \"#utility.yul\":14429:14510   */\n    tag_660:\n        /* \"#utility.yul\":14557:14559   */\n      0x20\n        /* \"#utility.yul\":14549:14555   */\n      dup3\n        /* \"#utility.yul\":14546:14560   */\n      lt\n        /* \"#utility.yul\":14526:14544   */\n      dup2\n        /* \"#utility.yul\":14523:14561   */\n      sub\n        /* \"#utility.yul\":14520:14604   */\n      tag_661\n      jumpi\n        /* \"#utility.yul\":14576:14594   */\n      tag_662\n      tag_466\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":14520:14604   */\n    tag_661:\n        /* \"#utility.yul\":14341:14610   */\n      pop\n        /* \"#utility.yul\":14290:14610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14616:14757   */\n    tag_467:\n        /* \"#utility.yul\":14665:14669   */\n      0x00\n        /* \"#utility.yul\":14688:14691   */\n      dup2\n        /* \"#utility.yul\":14680:14691   */\n      swap1\n      pop\n        /* \"#utility.yul\":14711:14714   */\n      dup2\n        /* \"#utility.yul\":14708:14709   */\n      0x00\n        /* \"#utility.yul\":14701:14715   */\n      mstore\n        /* \"#utility.yul\":14745:14749   */\n      0x20\n        /* \"#utility.yul\":14742:14743   */\n      0x00\n        /* \"#utility.yul\":14732:14750   */\n      keccak256\n        /* \"#utility.yul\":14724:14750   */\n      swap1\n      pop\n        /* \"#utility.yul\":14616:14757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14763:14856   */\n    tag_468:\n        /* \"#utility.yul\":14800:14806   */\n      0x00\n        /* \"#utility.yul\":14847:14849   */\n      0x20\n        /* \"#utility.yul\":14842:14844   */\n      0x1f\n        /* \"#utility.yul\":14835:14840   */\n      dup4\n        /* \"#utility.yul\":14831:14845   */\n      add\n        /* \"#utility.yul\":14827:14850   */\n      div\n        /* \"#utility.yul\":14817:14850   */\n      swap1\n      pop\n        /* \"#utility.yul\":14763:14856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14862:14969   */\n    tag_469:\n        /* \"#utility.yul\":14906:14914   */\n      0x00\n        /* \"#utility.yul\":14956:14961   */\n      dup3\n        /* \"#utility.yul\":14950:14954   */\n      dup3\n        /* \"#utility.yul\":14946:14962   */\n      shl\n        /* \"#utility.yul\":14925:14962   */\n      swap1\n      pop\n        /* \"#utility.yul\":14862:14969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14975:15368   */\n    tag_470:\n        /* \"#utility.yul\":15044:15050   */\n      0x00\n        /* \"#utility.yul\":15094:15095   */\n      0x08\n        /* \"#utility.yul\":15082:15092   */\n      dup4\n        /* \"#utility.yul\":15078:15096   */\n      mul\n        /* \"#utility.yul\":15117:15214   */\n      tag_667\n        /* \"#utility.yul\":15147:15213   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15136:15145   */\n      dup3\n        /* \"#utility.yul\":15117:15214   */\n      tag_469\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":15235:15274   */\n      tag_668\n        /* \"#utility.yul\":15265:15273   */\n      dup7\n        /* \"#utility.yul\":15254:15263   */\n      dup4\n        /* \"#utility.yul\":15235:15274   */\n      tag_469\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":15223:15274   */\n      swap6\n      pop\n        /* \"#utility.yul\":15307:15311   */\n      dup1\n        /* \"#utility.yul\":15303:15312   */\n      not\n        /* \"#utility.yul\":15296:15301   */\n      dup5\n        /* \"#utility.yul\":15292:15313   */\n      and\n        /* \"#utility.yul\":15283:15313   */\n      swap4\n      pop\n        /* \"#utility.yul\":15356:15360   */\n      dup1\n        /* \"#utility.yul\":15346:15354   */\n      dup7\n        /* \"#utility.yul\":15342:15361   */\n      and\n        /* \"#utility.yul\":15335:15340   */\n      dup5\n        /* \"#utility.yul\":15332:15362   */\n      or\n        /* \"#utility.yul\":15322:15362   */\n      swap3\n      pop\n        /* \"#utility.yul\":15051:15368   */\n      pop\n      pop\n        /* \"#utility.yul\":14975:15368   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15374:15434   */\n    tag_471:\n        /* \"#utility.yul\":15402:15405   */\n      0x00\n        /* \"#utility.yul\":15423:15428   */\n      dup2\n        /* \"#utility.yul\":15416:15428   */\n      swap1\n      pop\n        /* \"#utility.yul\":15374:15434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15440:15582   */\n    tag_472:\n        /* \"#utility.yul\":15490:15499   */\n      0x00\n        /* \"#utility.yul\":15523:15576   */\n      tag_671\n        /* \"#utility.yul\":15541:15575   */\n      tag_672\n        /* \"#utility.yul\":15550:15574   */\n      tag_673\n        /* \"#utility.yul\":15568:15573   */\n      dup5\n        /* \"#utility.yul\":15550:15574   */\n      tag_436\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":15541:15575   */\n      tag_471\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":15523:15576   */\n      tag_436\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":15510:15576   */\n      swap1\n      pop\n        /* \"#utility.yul\":15440:15582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15588:15663   */\n    tag_473:\n        /* \"#utility.yul\":15631:15634   */\n      0x00\n        /* \"#utility.yul\":15652:15657   */\n      dup2\n        /* \"#utility.yul\":15645:15657   */\n      swap1\n      pop\n        /* \"#utility.yul\":15588:15663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15669:15938   */\n    tag_474:\n        /* \"#utility.yul\":15779:15818   */\n      tag_676\n        /* \"#utility.yul\":15810:15817   */\n      dup4\n        /* \"#utility.yul\":15779:15818   */\n      tag_472\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":15840:15931   */\n      tag_677\n        /* \"#utility.yul\":15889:15930   */\n      tag_678\n        /* \"#utility.yul\":15913:15929   */\n      dup3\n        /* \"#utility.yul\":15889:15930   */\n      tag_473\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":15881:15887   */\n      dup5\n        /* \"#utility.yul\":15874:15878   */\n      dup5\n        /* \"#utility.yul\":15868:15879   */\n      sload\n        /* \"#utility.yul\":15840:15931   */\n      tag_470\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":15834:15838   */\n      dup3\n        /* \"#utility.yul\":15827:15932   */\n      sstore\n        /* \"#utility.yul\":15745:15938   */\n      pop\n        /* \"#utility.yul\":15669:15938   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15944:16017   */\n    tag_475:\n        /* \"#utility.yul\":15989:15992   */\n      0x00\n        /* \"#utility.yul\":15944:16017   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16023:16212   */\n    tag_476:\n        /* \"#utility.yul\":16100:16132   */\n      tag_681\n      tag_475\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":16141:16206   */\n      tag_682\n        /* \"#utility.yul\":16199:16205   */\n      dup2\n        /* \"#utility.yul\":16191:16197   */\n      dup5\n        /* \"#utility.yul\":16185:16189   */\n      dup5\n        /* \"#utility.yul\":16141:16206   */\n      tag_474\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":16076:16212   */\n      pop\n        /* \"#utility.yul\":16023:16212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16218:16404   */\n    tag_477:\n        /* \"#utility.yul\":16278:16398   */\n    tag_684:\n        /* \"#utility.yul\":16295:16298   */\n      dup2\n        /* \"#utility.yul\":16288:16293   */\n      dup2\n        /* \"#utility.yul\":16285:16299   */\n      lt\n        /* \"#utility.yul\":16278:16398   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":16349:16388   */\n      tag_687\n        /* \"#utility.yul\":16386:16387   */\n      0x00\n        /* \"#utility.yul\":16379:16384   */\n      dup3\n        /* \"#utility.yul\":16349:16388   */\n      tag_476\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":16322:16323   */\n      0x01\n        /* \"#utility.yul\":16315:16320   */\n      dup2\n        /* \"#utility.yul\":16311:16324   */\n      add\n        /* \"#utility.yul\":16302:16324   */\n      swap1\n      pop\n        /* \"#utility.yul\":16278:16398   */\n      jump(tag_684)\n    tag_686:\n        /* \"#utility.yul\":16218:16404   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16410:16953   */\n    tag_478:\n        /* \"#utility.yul\":16511:16513   */\n      0x1f\n        /* \"#utility.yul\":16506:16509   */\n      dup3\n        /* \"#utility.yul\":16503:16514   */\n      gt\n        /* \"#utility.yul\":16500:16946   */\n      iszero\n      tag_689\n      jumpi\n        /* \"#utility.yul\":16545:16583   */\n      tag_690\n        /* \"#utility.yul\":16577:16582   */\n      dup2\n        /* \"#utility.yul\":16545:16583   */\n      tag_467\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":16629:16658   */\n      tag_691\n        /* \"#utility.yul\":16647:16657   */\n      dup5\n        /* \"#utility.yul\":16629:16658   */\n      tag_468\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":16619:16627   */\n      dup2\n        /* \"#utility.yul\":16615:16659   */\n      add\n        /* \"#utility.yul\":16812:16814   */\n      0x20\n        /* \"#utility.yul\":16800:16810   */\n      dup6\n        /* \"#utility.yul\":16797:16815   */\n      lt\n        /* \"#utility.yul\":16794:16843   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":16833:16841   */\n      dup2\n        /* \"#utility.yul\":16818:16841   */\n      swap1\n      pop\n        /* \"#utility.yul\":16794:16843   */\n    tag_692:\n        /* \"#utility.yul\":16856:16936   */\n      tag_693\n        /* \"#utility.yul\":16912:16934   */\n      tag_694\n        /* \"#utility.yul\":16930:16933   */\n      dup6\n        /* \"#utility.yul\":16912:16934   */\n      tag_468\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":16902:16910   */\n      dup4\n        /* \"#utility.yul\":16898:16935   */\n      add\n        /* \"#utility.yul\":16885:16896   */\n      dup3\n        /* \"#utility.yul\":16856:16936   */\n      tag_477\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":16515:16946   */\n      pop\n      pop\n        /* \"#utility.yul\":16500:16946   */\n    tag_689:\n        /* \"#utility.yul\":16410:16953   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16959:17076   */\n    tag_479:\n        /* \"#utility.yul\":17013:17021   */\n      0x00\n        /* \"#utility.yul\":17063:17068   */\n      dup3\n        /* \"#utility.yul\":17057:17061   */\n      dup3\n        /* \"#utility.yul\":17053:17069   */\n      shr\n        /* \"#utility.yul\":17032:17069   */\n      swap1\n      pop\n        /* \"#utility.yul\":16959:17076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17082:17251   */\n    tag_480:\n        /* \"#utility.yul\":17126:17132   */\n      0x00\n        /* \"#utility.yul\":17159:17210   */\n      tag_697\n        /* \"#utility.yul\":17207:17208   */\n      0x00\n        /* \"#utility.yul\":17203:17209   */\n      not\n        /* \"#utility.yul\":17195:17200   */\n      dup5\n        /* \"#utility.yul\":17192:17193   */\n      0x08\n        /* \"#utility.yul\":17188:17201   */\n      mul\n        /* \"#utility.yul\":17159:17210   */\n      tag_479\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":17155:17211   */\n      not\n        /* \"#utility.yul\":17240:17244   */\n      dup1\n        /* \"#utility.yul\":17234:17238   */\n      dup4\n        /* \"#utility.yul\":17230:17245   */\n      and\n        /* \"#utility.yul\":17220:17245   */\n      swap2\n      pop\n        /* \"#utility.yul\":17133:17251   */\n      pop\n        /* \"#utility.yul\":17082:17251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17256:17551   */\n    tag_481:\n        /* \"#utility.yul\":17332:17336   */\n      0x00\n        /* \"#utility.yul\":17478:17507   */\n      tag_699\n        /* \"#utility.yul\":17503:17506   */\n      dup4\n        /* \"#utility.yul\":17497:17501   */\n      dup4\n        /* \"#utility.yul\":17478:17507   */\n      tag_480\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":17470:17507   */\n      swap2\n      pop\n        /* \"#utility.yul\":17540:17543   */\n      dup3\n        /* \"#utility.yul\":17537:17538   */\n      0x02\n        /* \"#utility.yul\":17533:17544   */\n      mul\n        /* \"#utility.yul\":17527:17531   */\n      dup3\n        /* \"#utility.yul\":17524:17545   */\n      or\n        /* \"#utility.yul\":17516:17545   */\n      swap1\n      pop\n        /* \"#utility.yul\":17256:17551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17556:18951   */\n    tag_177:\n        /* \"#utility.yul\":17673:17710   */\n      tag_701\n        /* \"#utility.yul\":17706:17709   */\n      dup3\n        /* \"#utility.yul\":17673:17710   */\n      tag_431\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":17775:17793   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17767:17773   */\n      dup2\n        /* \"#utility.yul\":17764:17794   */\n      gt\n        /* \"#utility.yul\":17761:17817   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":17797:17815   */\n      tag_703\n      tag_446\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":17761:17817   */\n    tag_702:\n        /* \"#utility.yul\":17841:17879   */\n      tag_704\n        /* \"#utility.yul\":17873:17877   */\n      dup3\n        /* \"#utility.yul\":17867:17878   */\n      sload\n        /* \"#utility.yul\":17841:17879   */\n      tag_158\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":17926:17993   */\n      tag_705\n        /* \"#utility.yul\":17986:17992   */\n      dup3\n        /* \"#utility.yul\":17978:17984   */\n      dup3\n        /* \"#utility.yul\":17972:17976   */\n      dup6\n        /* \"#utility.yul\":17926:17993   */\n      tag_478\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":18020:18021   */\n      0x00\n        /* \"#utility.yul\":18044:18048   */\n      0x20\n        /* \"#utility.yul\":18031:18048   */\n      swap1\n      pop\n        /* \"#utility.yul\":18076:18078   */\n      0x1f\n        /* \"#utility.yul\":18068:18074   */\n      dup4\n        /* \"#utility.yul\":18065:18079   */\n      gt\n        /* \"#utility.yul\":18093:18094   */\n      0x01\n        /* \"#utility.yul\":18088:18706   */\n      dup2\n      eq\n      tag_707\n      jumpi\n        /* \"#utility.yul\":18750:18751   */\n      0x00\n        /* \"#utility.yul\":18767:18773   */\n      dup5\n        /* \"#utility.yul\":18764:18841   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":18816:18825   */\n      dup3\n        /* \"#utility.yul\":18811:18814   */\n      dup8\n        /* \"#utility.yul\":18807:18826   */\n      add\n        /* \"#utility.yul\":18801:18827   */\n      mload\n        /* \"#utility.yul\":18792:18827   */\n      swap1\n      pop\n        /* \"#utility.yul\":18764:18841   */\n    tag_708:\n        /* \"#utility.yul\":18867:18934   */\n      tag_709\n        /* \"#utility.yul\":18927:18933   */\n      dup6\n        /* \"#utility.yul\":18920:18925   */\n      dup3\n        /* \"#utility.yul\":18867:18934   */\n      tag_481\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":18861:18865   */\n      dup7\n        /* \"#utility.yul\":18854:18935   */\n      sstore\n        /* \"#utility.yul\":18723:18945   */\n      pop\n        /* \"#utility.yul\":18058:18945   */\n      jump(tag_706)\n        /* \"#utility.yul\":18088:18706   */\n    tag_707:\n        /* \"#utility.yul\":18140:18144   */\n      0x1f\n        /* \"#utility.yul\":18136:18145   */\n      not\n        /* \"#utility.yul\":18128:18134   */\n      dup5\n        /* \"#utility.yul\":18124:18146   */\n      and\n        /* \"#utility.yul\":18174:18211   */\n      tag_710\n        /* \"#utility.yul\":18206:18210   */\n      dup7\n        /* \"#utility.yul\":18174:18211   */\n      tag_467\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":18233:18234   */\n      0x00\n        /* \"#utility.yul\":18247:18455   */\n    tag_711:\n        /* \"#utility.yul\":18261:18268   */\n      dup3\n        /* \"#utility.yul\":18258:18259   */\n      dup2\n        /* \"#utility.yul\":18255:18269   */\n      lt\n        /* \"#utility.yul\":18247:18455   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":18340:18349   */\n      dup5\n        /* \"#utility.yul\":18335:18338   */\n      dup10\n        /* \"#utility.yul\":18331:18350   */\n      add\n        /* \"#utility.yul\":18325:18351   */\n      mload\n        /* \"#utility.yul\":18317:18323   */\n      dup3\n        /* \"#utility.yul\":18310:18352   */\n      sstore\n        /* \"#utility.yul\":18391:18392   */\n      0x01\n        /* \"#utility.yul\":18383:18389   */\n      dup3\n        /* \"#utility.yul\":18379:18393   */\n      add\n        /* \"#utility.yul\":18369:18393   */\n      swap2\n      pop\n        /* \"#utility.yul\":18438:18440   */\n      0x20\n        /* \"#utility.yul\":18427:18436   */\n      dup6\n        /* \"#utility.yul\":18423:18441   */\n      add\n        /* \"#utility.yul\":18410:18441   */\n      swap5\n      pop\n        /* \"#utility.yul\":18284:18288   */\n      0x20\n        /* \"#utility.yul\":18281:18282   */\n      dup2\n        /* \"#utility.yul\":18277:18289   */\n      add\n        /* \"#utility.yul\":18272:18289   */\n      swap1\n      pop\n        /* \"#utility.yul\":18247:18455   */\n      jump(tag_711)\n    tag_713:\n        /* \"#utility.yul\":18483:18489   */\n      dup7\n        /* \"#utility.yul\":18474:18481   */\n      dup4\n        /* \"#utility.yul\":18471:18490   */\n      lt\n        /* \"#utility.yul\":18468:18647   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":18541:18550   */\n      dup5\n        /* \"#utility.yul\":18536:18539   */\n      dup10\n        /* \"#utility.yul\":18532:18551   */\n      add\n        /* \"#utility.yul\":18526:18552   */\n      mload\n        /* \"#utility.yul\":18584:18632   */\n      tag_715\n        /* \"#utility.yul\":18626:18630   */\n      0x1f\n        /* \"#utility.yul\":18618:18624   */\n      dup10\n        /* \"#utility.yul\":18614:18631   */\n      and\n        /* \"#utility.yul\":18603:18612   */\n      dup3\n        /* \"#utility.yul\":18584:18632   */\n      tag_480\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":18576:18582   */\n      dup4\n        /* \"#utility.yul\":18569:18633   */\n      sstore\n        /* \"#utility.yul\":18491:18647   */\n      pop\n        /* \"#utility.yul\":18468:18647   */\n    tag_714:\n        /* \"#utility.yul\":18693:18694   */\n      0x01\n        /* \"#utility.yul\":18689:18690   */\n      0x02\n        /* \"#utility.yul\":18681:18687   */\n      dup9\n        /* \"#utility.yul\":18677:18691   */\n      mul\n        /* \"#utility.yul\":18673:18695   */\n      add\n        /* \"#utility.yul\":18667:18671   */\n      dup9\n        /* \"#utility.yul\":18660:18696   */\n      sstore\n        /* \"#utility.yul\":18095:18706   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18058:18945   */\n    tag_706:\n      pop\n        /* \"#utility.yul\":17648:18951   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17556:18951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18957:19136   */\n    tag_482:\n        /* \"#utility.yul\":19097:19128   */\n      0x796f7520617265206e6f7420617070726f7665642020746f206d696e74000000\n        /* \"#utility.yul\":19093:19094   */\n      0x00\n        /* \"#utility.yul\":19085:19091   */\n      dup3\n        /* \"#utility.yul\":19081:19095   */\n      add\n        /* \"#utility.yul\":19074:19129   */\n      mstore\n        /* \"#utility.yul\":18957:19136   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19142:19508   */\n    tag_483:\n        /* \"#utility.yul\":19284:19287   */\n      0x00\n        /* \"#utility.yul\":19305:19372   */\n      tag_718\n        /* \"#utility.yul\":19369:19371   */\n      0x1d\n        /* \"#utility.yul\":19364:19367   */\n      dup4\n        /* \"#utility.yul\":19305:19372   */\n      tag_432\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":19298:19372   */\n      swap2\n      pop\n        /* \"#utility.yul\":19381:19474   */\n      tag_719\n        /* \"#utility.yul\":19470:19473   */\n      dup3\n        /* \"#utility.yul\":19381:19474   */\n      tag_482\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":19499:19501   */\n      0x20\n        /* \"#utility.yul\":19494:19497   */\n      dup3\n        /* \"#utility.yul\":19490:19502   */\n      add\n        /* \"#utility.yul\":19483:19502   */\n      swap1\n      pop\n        /* \"#utility.yul\":19142:19508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19514:19933   */\n    tag_214:\n        /* \"#utility.yul\":19680:19684   */\n      0x00\n        /* \"#utility.yul\":19718:19720   */\n      0x20\n        /* \"#utility.yul\":19707:19716   */\n      dup3\n        /* \"#utility.yul\":19703:19721   */\n      add\n        /* \"#utility.yul\":19695:19721   */\n      swap1\n      pop\n        /* \"#utility.yul\":19767:19776   */\n      dup2\n        /* \"#utility.yul\":19761:19765   */\n      dup2\n        /* \"#utility.yul\":19757:19777   */\n      sub\n        /* \"#utility.yul\":19753:19754   */\n      0x00\n        /* \"#utility.yul\":19742:19751   */\n      dup4\n        /* \"#utility.yul\":19738:19755   */\n      add\n        /* \"#utility.yul\":19731:19778   */\n      mstore\n        /* \"#utility.yul\":19795:19926   */\n      tag_721\n        /* \"#utility.yul\":19921:19925   */\n      dup2\n        /* \"#utility.yul\":19795:19926   */\n      tag_483\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":19787:19926   */\n      swap1\n      pop\n        /* \"#utility.yul\":19514:19933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19939:20087   */\n    tag_484:\n        /* \"#utility.yul\":20041:20052   */\n      0x00\n        /* \"#utility.yul\":20078:20081   */\n      dup2\n        /* \"#utility.yul\":20063:20081   */\n      swap1\n      pop\n        /* \"#utility.yul\":19939:20087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20093:20483   */\n    tag_485:\n        /* \"#utility.yul\":20199:20202   */\n      0x00\n        /* \"#utility.yul\":20227:20266   */\n      tag_724\n        /* \"#utility.yul\":20260:20265   */\n      dup3\n        /* \"#utility.yul\":20227:20266   */\n      tag_431\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":20282:20371   */\n      tag_725\n        /* \"#utility.yul\":20364:20370   */\n      dup2\n        /* \"#utility.yul\":20359:20362   */\n      dup6\n        /* \"#utility.yul\":20282:20371   */\n      tag_484\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":20275:20371   */\n      swap4\n      pop\n        /* \"#utility.yul\":20380:20445   */\n      tag_726\n        /* \"#utility.yul\":20438:20444   */\n      dup2\n        /* \"#utility.yul\":20433:20436   */\n      dup6\n        /* \"#utility.yul\":20426:20430   */\n      0x20\n        /* \"#utility.yul\":20419:20424   */\n      dup7\n        /* \"#utility.yul\":20415:20431   */\n      add\n        /* \"#utility.yul\":20380:20445   */\n      tag_433\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":20470:20476   */\n      dup1\n        /* \"#utility.yul\":20465:20468   */\n      dup5\n        /* \"#utility.yul\":20461:20477   */\n      add\n        /* \"#utility.yul\":20454:20477   */\n      swap2\n      pop\n        /* \"#utility.yul\":20203:20483   */\n      pop\n        /* \"#utility.yul\":20093:20483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20513:21387   */\n    tag_486:\n        /* \"#utility.yul\":20616:20619   */\n      0x00\n        /* \"#utility.yul\":20653:20658   */\n      dup2\n        /* \"#utility.yul\":20647:20659   */\n      sload\n        /* \"#utility.yul\":20682:20718   */\n      tag_728\n        /* \"#utility.yul\":20708:20717   */\n      dup2\n        /* \"#utility.yul\":20682:20718   */\n      tag_158\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":20734:20823   */\n      tag_729\n        /* \"#utility.yul\":20816:20822   */\n      dup2\n        /* \"#utility.yul\":20811:20814   */\n      dup7\n        /* \"#utility.yul\":20734:20823   */\n      tag_484\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":20727:20823   */\n      swap5\n      pop\n        /* \"#utility.yul\":20854:20855   */\n      0x01\n        /* \"#utility.yul\":20843:20852   */\n      dup3\n        /* \"#utility.yul\":20839:20856   */\n      and\n        /* \"#utility.yul\":20870:20871   */\n      0x00\n        /* \"#utility.yul\":20865:21031   */\n      dup2\n      eq\n      tag_731\n      jumpi\n        /* \"#utility.yul\":21045:21046   */\n      0x01\n        /* \"#utility.yul\":21040:21381   */\n      dup2\n      eq\n      tag_732\n      jumpi\n        /* \"#utility.yul\":20832:21381   */\n      jump(tag_730)\n        /* \"#utility.yul\":20865:21031   */\n    tag_731:\n        /* \"#utility.yul\":20949:20953   */\n      0xff\n        /* \"#utility.yul\":20945:20954   */\n      not\n        /* \"#utility.yul\":20934:20943   */\n      dup4\n        /* \"#utility.yul\":20930:20955   */\n      and\n        /* \"#utility.yul\":20925:20928   */\n      dup7\n        /* \"#utility.yul\":20918:20956   */\n      mstore\n        /* \"#utility.yul\":21011:21017   */\n      dup2\n        /* \"#utility.yul\":21004:21018   */\n      iszero\n        /* \"#utility.yul\":20997:21019   */\n      iszero\n        /* \"#utility.yul\":20989:20995   */\n      dup3\n        /* \"#utility.yul\":20985:21020   */\n      mul\n        /* \"#utility.yul\":20980:20983   */\n      dup7\n        /* \"#utility.yul\":20976:21021   */\n      add\n        /* \"#utility.yul\":20969:21021   */\n      swap4\n      pop\n        /* \"#utility.yul\":20865:21031   */\n      jump(tag_730)\n        /* \"#utility.yul\":21040:21381   */\n    tag_732:\n        /* \"#utility.yul\":21107:21145   */\n      tag_733\n        /* \"#utility.yul\":21139:21144   */\n      dup6\n        /* \"#utility.yul\":21107:21145   */\n      tag_467\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":21167:21168   */\n      0x00\n        /* \"#utility.yul\":21181:21335   */\n    tag_734:\n        /* \"#utility.yul\":21195:21201   */\n      dup4\n        /* \"#utility.yul\":21192:21193   */\n      dup2\n        /* \"#utility.yul\":21189:21202   */\n      lt\n        /* \"#utility.yul\":21181:21335   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":21269:21276   */\n      dup2\n        /* \"#utility.yul\":21263:21277   */\n      sload\n        /* \"#utility.yul\":21259:21260   */\n      dup2\n        /* \"#utility.yul\":21254:21257   */\n      dup10\n        /* \"#utility.yul\":21250:21261   */\n      add\n        /* \"#utility.yul\":21243:21278   */\n      mstore\n        /* \"#utility.yul\":21319:21320   */\n      0x01\n        /* \"#utility.yul\":21310:21317   */\n      dup3\n        /* \"#utility.yul\":21306:21321   */\n      add\n        /* \"#utility.yul\":21295:21321   */\n      swap2\n      pop\n        /* \"#utility.yul\":21217:21221   */\n      0x20\n        /* \"#utility.yul\":21214:21215   */\n      dup2\n        /* \"#utility.yul\":21210:21222   */\n      add\n        /* \"#utility.yul\":21205:21222   */\n      swap1\n      pop\n        /* \"#utility.yul\":21181:21335   */\n      jump(tag_734)\n    tag_736:\n        /* \"#utility.yul\":21364:21370   */\n      dup4\n        /* \"#utility.yul\":21359:21362   */\n      dup9\n        /* \"#utility.yul\":21355:21371   */\n      add\n        /* \"#utility.yul\":21348:21371   */\n      swap6\n      pop\n        /* \"#utility.yul\":21047:21381   */\n      pop\n      pop\n        /* \"#utility.yul\":20832:21381   */\n    tag_730:\n      pop\n        /* \"#utility.yul\":20620:21387   */\n      pop\n      pop\n        /* \"#utility.yul\":20513:21387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21393:21982   */\n    tag_271:\n        /* \"#utility.yul\":21618:21621   */\n      0x00\n        /* \"#utility.yul\":21640:21735   */\n      tag_738\n        /* \"#utility.yul\":21731:21734   */\n      dup3\n        /* \"#utility.yul\":21722:21728   */\n      dup7\n        /* \"#utility.yul\":21640:21735   */\n      tag_485\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":21633:21735   */\n      swap2\n      pop\n        /* \"#utility.yul\":21752:21847   */\n      tag_739\n        /* \"#utility.yul\":21843:21846   */\n      dup3\n        /* \"#utility.yul\":21834:21840   */\n      dup6\n        /* \"#utility.yul\":21752:21847   */\n      tag_485\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":21745:21847   */\n      swap2\n      pop\n        /* \"#utility.yul\":21864:21956   */\n      tag_740\n        /* \"#utility.yul\":21952:21955   */\n      dup3\n        /* \"#utility.yul\":21943:21949   */\n      dup5\n        /* \"#utility.yul\":21864:21956   */\n      tag_486\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":21857:21956   */\n      swap2\n      pop\n        /* \"#utility.yul\":21973:21976   */\n      dup2\n        /* \"#utility.yul\":21966:21976   */\n      swap1\n      pop\n        /* \"#utility.yul\":21393:21982   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21988:22213   */\n    tag_487:\n        /* \"#utility.yul\":22128:22162   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":22124:22125   */\n      0x00\n        /* \"#utility.yul\":22116:22122   */\n      dup3\n        /* \"#utility.yul\":22112:22126   */\n      add\n        /* \"#utility.yul\":22105:22163   */\n      mstore\n        /* \"#utility.yul\":22197:22205   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22192:22194   */\n      0x20\n        /* \"#utility.yul\":22184:22190   */\n      dup3\n        /* \"#utility.yul\":22180:22195   */\n      add\n        /* \"#utility.yul\":22173:22206   */\n      mstore\n        /* \"#utility.yul\":21988:22213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22219:22585   */\n    tag_488:\n        /* \"#utility.yul\":22361:22364   */\n      0x00\n        /* \"#utility.yul\":22382:22449   */\n      tag_743\n        /* \"#utility.yul\":22446:22448   */\n      0x26\n        /* \"#utility.yul\":22441:22444   */\n      dup4\n        /* \"#utility.yul\":22382:22449   */\n      tag_432\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":22375:22449   */\n      swap2\n      pop\n        /* \"#utility.yul\":22458:22551   */\n      tag_744\n        /* \"#utility.yul\":22547:22550   */\n      dup3\n        /* \"#utility.yul\":22458:22551   */\n      tag_487\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":22576:22578   */\n      0x40\n        /* \"#utility.yul\":22571:22574   */\n      dup3\n        /* \"#utility.yul\":22567:22579   */\n      add\n        /* \"#utility.yul\":22560:22579   */\n      swap1\n      pop\n        /* \"#utility.yul\":22219:22585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22591:23010   */\n    tag_290:\n        /* \"#utility.yul\":22757:22761   */\n      0x00\n        /* \"#utility.yul\":22795:22797   */\n      0x20\n        /* \"#utility.yul\":22784:22793   */\n      dup3\n        /* \"#utility.yul\":22780:22798   */\n      add\n        /* \"#utility.yul\":22772:22798   */\n      swap1\n      pop\n        /* \"#utility.yul\":22844:22853   */\n      dup2\n        /* \"#utility.yul\":22838:22842   */\n      dup2\n        /* \"#utility.yul\":22834:22854   */\n      sub\n        /* \"#utility.yul\":22830:22831   */\n      0x00\n        /* \"#utility.yul\":22819:22828   */\n      dup4\n        /* \"#utility.yul\":22815:22832   */\n      add\n        /* \"#utility.yul\":22808:22855   */\n      mstore\n        /* \"#utility.yul\":22872:23003   */\n      tag_746\n        /* \"#utility.yul\":22998:23002   */\n      dup2\n        /* \"#utility.yul\":22872:23003   */\n      tag_488\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":22864:23003   */\n      swap1\n      pop\n        /* \"#utility.yul\":22591:23010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23016:23196   */\n    tag_489:\n        /* \"#utility.yul\":23064:23141   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23061:23062   */\n      0x00\n        /* \"#utility.yul\":23054:23142   */\n      mstore\n        /* \"#utility.yul\":23161:23165   */\n      0x11\n        /* \"#utility.yul\":23158:23159   */\n      0x04\n        /* \"#utility.yul\":23151:23166   */\n      mstore\n        /* \"#utility.yul\":23185:23189   */\n      0x24\n        /* \"#utility.yul\":23182:23183   */\n      0x00\n        /* \"#utility.yul\":23175:23190   */\n      revert\n        /* \"#utility.yul\":23202:23373   */\n    tag_299:\n        /* \"#utility.yul\":23241:23244   */\n      0x00\n        /* \"#utility.yul\":23264:23288   */\n      tag_749\n        /* \"#utility.yul\":23282:23287   */\n      dup3\n        /* \"#utility.yul\":23264:23288   */\n      tag_436\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":23255:23288   */\n      swap2\n      pop\n        /* \"#utility.yul\":23310:23314   */\n      0x00\n        /* \"#utility.yul\":23303:23308   */\n      dup3\n        /* \"#utility.yul\":23300:23315   */\n      sub\n        /* \"#utility.yul\":23297:23338   */\n      tag_750\n      jumpi\n        /* \"#utility.yul\":23318:23336   */\n      tag_751\n      tag_489\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":23297:23338   */\n    tag_750:\n        /* \"#utility.yul\":23365:23366   */\n      0x01\n        /* \"#utility.yul\":23358:23363   */\n      dup3\n        /* \"#utility.yul\":23354:23367   */\n      sub\n        /* \"#utility.yul\":23347:23367   */\n      swap1\n      pop\n        /* \"#utility.yul\":23202:23373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23379:23561   */\n    tag_490:\n        /* \"#utility.yul\":23519:23553   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":23515:23516   */\n      0x00\n        /* \"#utility.yul\":23507:23513   */\n      dup3\n        /* \"#utility.yul\":23503:23517   */\n      add\n        /* \"#utility.yul\":23496:23554   */\n      mstore\n        /* \"#utility.yul\":23379:23561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23567:23933   */\n    tag_491:\n        /* \"#utility.yul\":23709:23712   */\n      0x00\n        /* \"#utility.yul\":23730:23797   */\n      tag_754\n        /* \"#utility.yul\":23794:23796   */\n      0x20\n        /* \"#utility.yul\":23789:23792   */\n      dup4\n        /* \"#utility.yul\":23730:23797   */\n      tag_432\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":23723:23797   */\n      swap2\n      pop\n        /* \"#utility.yul\":23806:23899   */\n      tag_755\n        /* \"#utility.yul\":23895:23898   */\n      dup3\n        /* \"#utility.yul\":23806:23899   */\n      tag_490\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":23924:23926   */\n      0x20\n        /* \"#utility.yul\":23919:23922   */\n      dup3\n        /* \"#utility.yul\":23915:23927   */\n      add\n        /* \"#utility.yul\":23908:23927   */\n      swap1\n      pop\n        /* \"#utility.yul\":23567:23933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23939:24358   */\n    tag_316:\n        /* \"#utility.yul\":24105:24109   */\n      0x00\n        /* \"#utility.yul\":24143:24145   */\n      0x20\n        /* \"#utility.yul\":24132:24141   */\n      dup3\n        /* \"#utility.yul\":24128:24146   */\n      add\n        /* \"#utility.yul\":24120:24146   */\n      swap1\n      pop\n        /* \"#utility.yul\":24192:24201   */\n      dup2\n        /* \"#utility.yul\":24186:24190   */\n      dup2\n        /* \"#utility.yul\":24182:24202   */\n      sub\n        /* \"#utility.yul\":24178:24179   */\n      0x00\n        /* \"#utility.yul\":24167:24176   */\n      dup4\n        /* \"#utility.yul\":24163:24180   */\n      add\n        /* \"#utility.yul\":24156:24203   */\n      mstore\n        /* \"#utility.yul\":24220:24351   */\n      tag_757\n        /* \"#utility.yul\":24346:24350   */\n      dup2\n        /* \"#utility.yul\":24220:24351   */\n      tag_491\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":24212:24351   */\n      swap1\n      pop\n        /* \"#utility.yul\":23939:24358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24364:24462   */\n    tag_492:\n        /* \"#utility.yul\":24415:24421   */\n      0x00\n        /* \"#utility.yul\":24449:24454   */\n      dup2\n        /* \"#utility.yul\":24443:24455   */\n      mload\n        /* \"#utility.yul\":24433:24455   */\n      swap1\n      pop\n        /* \"#utility.yul\":24364:24462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24468:24636   */\n    tag_493:\n        /* \"#utility.yul\":24551:24562   */\n      0x00\n        /* \"#utility.yul\":24585:24591   */\n      dup3\n        /* \"#utility.yul\":24580:24583   */\n      dup3\n        /* \"#utility.yul\":24573:24592   */\n      mstore\n        /* \"#utility.yul\":24625:24629   */\n      0x20\n        /* \"#utility.yul\":24620:24623   */\n      dup3\n        /* \"#utility.yul\":24616:24630   */\n      add\n        /* \"#utility.yul\":24601:24630   */\n      swap1\n      pop\n        /* \"#utility.yul\":24468:24636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24642:25015   */\n    tag_494:\n        /* \"#utility.yul\":24728:24731   */\n      0x00\n        /* \"#utility.yul\":24756:24794   */\n      tag_761\n        /* \"#utility.yul\":24788:24793   */\n      dup3\n        /* \"#utility.yul\":24756:24794   */\n      tag_492\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":24810:24880   */\n      tag_762\n        /* \"#utility.yul\":24873:24879   */\n      dup2\n        /* \"#utility.yul\":24868:24871   */\n      dup6\n        /* \"#utility.yul\":24810:24880   */\n      tag_493\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":24803:24880   */\n      swap4\n      pop\n        /* \"#utility.yul\":24889:24954   */\n      tag_763\n        /* \"#utility.yul\":24947:24953   */\n      dup2\n        /* \"#utility.yul\":24942:24945   */\n      dup6\n        /* \"#utility.yul\":24935:24939   */\n      0x20\n        /* \"#utility.yul\":24928:24933   */\n      dup7\n        /* \"#utility.yul\":24924:24940   */\n      add\n        /* \"#utility.yul\":24889:24954   */\n      tag_433\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":24979:25008   */\n      tag_764\n        /* \"#utility.yul\":25001:25007   */\n      dup2\n        /* \"#utility.yul\":24979:25008   */\n      tag_434\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":24974:24977   */\n      dup5\n        /* \"#utility.yul\":24970:25009   */\n      add\n        /* \"#utility.yul\":24963:25009   */\n      swap2\n      pop\n        /* \"#utility.yul\":24732:25015   */\n      pop\n        /* \"#utility.yul\":24642:25015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25021:25661   */\n    tag_348:\n        /* \"#utility.yul\":25216:25220   */\n      0x00\n        /* \"#utility.yul\":25254:25257   */\n      0x80\n        /* \"#utility.yul\":25243:25252   */\n      dup3\n        /* \"#utility.yul\":25239:25258   */\n      add\n        /* \"#utility.yul\":25231:25258   */\n      swap1\n      pop\n        /* \"#utility.yul\":25268:25339   */\n      tag_766\n        /* \"#utility.yul\":25336:25337   */\n      0x00\n        /* \"#utility.yul\":25325:25334   */\n      dup4\n        /* \"#utility.yul\":25321:25338   */\n      add\n        /* \"#utility.yul\":25312:25318   */\n      dup8\n        /* \"#utility.yul\":25268:25339   */\n      tag_441\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":25349:25421   */\n      tag_767\n        /* \"#utility.yul\":25417:25419   */\n      0x20\n        /* \"#utility.yul\":25406:25415   */\n      dup4\n        /* \"#utility.yul\":25402:25420   */\n      add\n        /* \"#utility.yul\":25393:25399   */\n      dup7\n        /* \"#utility.yul\":25349:25421   */\n      tag_441\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":25431:25503   */\n      tag_768\n        /* \"#utility.yul\":25499:25501   */\n      0x40\n        /* \"#utility.yul\":25488:25497   */\n      dup4\n        /* \"#utility.yul\":25484:25502   */\n      add\n        /* \"#utility.yul\":25475:25481   */\n      dup6\n        /* \"#utility.yul\":25431:25503   */\n      tag_453\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":25550:25559   */\n      dup2\n        /* \"#utility.yul\":25544:25548   */\n      dup2\n        /* \"#utility.yul\":25540:25560   */\n      sub\n        /* \"#utility.yul\":25535:25537   */\n      0x60\n        /* \"#utility.yul\":25524:25533   */\n      dup4\n        /* \"#utility.yul\":25520:25538   */\n      add\n        /* \"#utility.yul\":25513:25561   */\n      mstore\n        /* \"#utility.yul\":25578:25654   */\n      tag_769\n        /* \"#utility.yul\":25649:25653   */\n      dup2\n        /* \"#utility.yul\":25640:25646   */\n      dup5\n        /* \"#utility.yul\":25578:25654   */\n      tag_494\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":25570:25654   */\n      swap1\n      pop\n        /* \"#utility.yul\":25021:25661   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25667:25808   */\n    tag_495:\n        /* \"#utility.yul\":25723:25728   */\n      0x00\n        /* \"#utility.yul\":25754:25760   */\n      dup2\n        /* \"#utility.yul\":25748:25761   */\n      mload\n        /* \"#utility.yul\":25739:25761   */\n      swap1\n      pop\n        /* \"#utility.yul\":25770:25802   */\n      tag_771\n        /* \"#utility.yul\":25796:25801   */\n      dup2\n        /* \"#utility.yul\":25770:25802   */\n      tag_427\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":25667:25808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25814:26163   */\n    tag_351:\n        /* \"#utility.yul\":25883:25889   */\n      0x00\n        /* \"#utility.yul\":25932:25934   */\n      0x20\n        /* \"#utility.yul\":25920:25929   */\n      dup3\n        /* \"#utility.yul\":25911:25918   */\n      dup5\n        /* \"#utility.yul\":25907:25930   */\n      sub\n        /* \"#utility.yul\":25903:25935   */\n      slt\n        /* \"#utility.yul\":25900:26019   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":25938:26017   */\n      tag_774\n      tag_424\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":25900:26019   */\n    tag_773:\n        /* \"#utility.yul\":26058:26059   */\n      0x00\n        /* \"#utility.yul\":26083:26146   */\n      tag_775\n        /* \"#utility.yul\":26138:26145   */\n      dup5\n        /* \"#utility.yul\":26129:26135   */\n      dup3\n        /* \"#utility.yul\":26118:26127   */\n      dup6\n        /* \"#utility.yul\":26114:26136   */\n      add\n        /* \"#utility.yul\":26083:26146   */\n      tag_495\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":26073:26146   */\n      swap2\n      pop\n        /* \"#utility.yul\":26029:26156   */\n      pop\n        /* \"#utility.yul\":25814:26163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220559299fd9750e26a79e826d247e930489314e97bf299ef77854db6896b5238d464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 186,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_477": {
									"entryPoint": 390,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 194,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1446,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:4",
														"type": ""
													}
												],
												"src": "7:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:4"
															},
															"nodeType": "YulIf",
															"src": "623:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:4"
															},
															"nodeType": "YulIf",
															"src": "714:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:4",
														"type": ""
													}
												],
												"src": "484:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:4",
														"type": ""
													}
												],
												"src": "810:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:4",
														"type": ""
													}
												],
												"src": "957:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:4",
														"type": ""
													}
												],
												"src": "1056:107:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:4"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:4",
														"type": ""
													}
												],
												"src": "1169:393:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:4",
														"type": ""
													}
												],
												"src": "1568:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:4",
														"type": ""
													}
												],
												"src": "1651:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:4",
														"type": ""
													}
												],
												"src": "1717:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:4",
														"type": ""
													}
												],
												"src": "1865:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:4",
														"type": ""
													}
												],
												"src": "1946:269:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:4",
														"type": ""
													}
												],
												"src": "2221:73:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:4",
														"type": ""
													}
												],
												"src": "2300:189:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:4",
																"statements": []
															},
															"src": "2555:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:4",
														"type": ""
													}
												],
												"src": "2495:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:4",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:4"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:4"
															},
															"nodeType": "YulIf",
															"src": "2777:446:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:4",
														"type": ""
													}
												],
												"src": "2687:543:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:4",
														"type": ""
													}
												],
												"src": "3236:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:4"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:4",
														"type": ""
													}
												],
												"src": "3359:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:4"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:4",
														"type": ""
													}
												],
												"src": "3533:295:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:4"
															},
															"nodeType": "YulIf",
															"src": "4038:56:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:4",
																					"statements": []
																				},
																				"src": "4524:208:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:4"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:4",
														"type": ""
													}
												],
												"src": "3833:1395:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5274:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5284:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5294:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5267:6:4",
														"type": ""
													}
												],
												"src": "5234:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5404:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5315:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5537:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5670:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5773:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5684:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5855:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5865:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5883:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5890:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5879:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5899:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5838:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5848:6:4",
														"type": ""
													}
												],
												"src": "5807:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5968:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6020:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5998:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5972:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6137:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6139:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6139:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6139:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6080:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6092:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6077:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6116:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6113:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6113:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6074:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:62:4"
															},
															"nodeType": "YulIf",
															"src": "6071:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6179:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6168:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6168:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5944:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5952:4:4",
														"type": ""
													}
												],
												"src": "5915:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6243:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6253:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6263:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6263:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6312:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6320:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6292:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6292:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6292:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6227:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6236:6:4",
														"type": ""
													}
												],
												"src": "6202:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6404:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6509:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6511:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6511:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6511:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6489:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6478:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:30:4"
															},
															"nodeType": "YulIf",
															"src": "6475:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6549:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6549:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6541:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6615:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6615:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6388:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6399:4:4",
														"type": ""
													}
												],
												"src": "6337:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6723:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6732:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6727:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6792:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6817:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6822:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6813:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6813:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6836:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6841:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6832:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6832:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6826:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6826:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6806:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6806:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6753:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6756:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6750:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6750:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6764:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6766:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6775:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6778:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6771:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6771:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6766:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6746:3:4",
																"statements": []
															},
															"src": "6742:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6875:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6880:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6871:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6889:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6864:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6695:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6700:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6705:6:4",
														"type": ""
													}
												],
												"src": "6651:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6998:339:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7008:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7075:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7033:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7033:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7017:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7008:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7099:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7106:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7092:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7122:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7137:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7126:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7187:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7189:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7189:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7189:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7168:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7173:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7164:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7182:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7161:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:25:4"
															},
															"nodeType": "YulIf",
															"src": "7158:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7314:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7319:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7324:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7279:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:52:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6971:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6976:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6984:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6992:5:4",
														"type": ""
													}
												],
												"src": "6903:434:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7430:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7479:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7481:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7481:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7481:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7458:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7466:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7454:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7454:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7473:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7450:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7443:35:4"
															},
															"nodeType": "YulIf",
															"src": "7440:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7571:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7585:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7575:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7607:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7679:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7687:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7675:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7675:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7694:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7702:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "7616:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7607:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7408:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7416:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7424:5:4",
														"type": ""
													}
												],
												"src": "7357:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7832:739:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7878:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7880:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7880:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7880:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7853:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7862:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7874:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7845:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7845:32:4"
															},
															"nodeType": "YulIf",
															"src": "7842:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "7971:291:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7986:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8010:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8021:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8006:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8006:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8000:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7990:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8071:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8073:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8073:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8073:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8043:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8051:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8040:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8040:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "8037:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8168:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8224:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8235:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8220:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8220:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8244:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8178:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8178:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8168:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8272:292:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8287:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8311:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8322:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8307:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8307:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8301:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8291:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8373:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8375:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8375:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8375:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8345:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8342:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "8339:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8470:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8526:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8537:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8522:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8522:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8546:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8480:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8470:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7794:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7805:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7817:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7825:6:4",
														"type": ""
													}
												],
												"src": "7718:853:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052604051806020016040528060008152506006908162000024919062000405565b503480156200003257600080fd5b50604051620033a1380380620033a1833981810160405281019062000058919062000650565b620000786200006c620000ba60201b60201c565b620000c260201b60201c565b816003908162000089919062000405565b5080600490816200009b919062000405565b50620000ac6200018660201b60201c565b6001819055505050620006d5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200020d57607f821691505b602082108103620002235762000222620001c5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200028d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200024e565b6200029986836200024e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002e6620002e0620002da84620002b1565b620002bb565b620002b1565b9050919050565b6000819050919050565b6200030283620002c5565b6200031a6200031182620002ed565b8484546200025b565b825550505050565b600090565b6200033162000322565b6200033e818484620002f7565b505050565b5b8181101562000366576200035a60008262000327565b60018101905062000344565b5050565b601f821115620003b5576200037f8162000229565b6200038a846200023e565b810160208510156200039a578190505b620003b2620003a9856200023e565b83018262000343565b50505b505050565b600082821c905092915050565b6000620003da60001984600802620003ba565b1980831691505092915050565b6000620003f58383620003c7565b9150826002028217905092915050565b62000410826200018b565b67ffffffffffffffff8111156200042c576200042b62000196565b5b620004388254620001f4565b620004458282856200036a565b600060209050601f8311600181146200047d576000841562000468578287015190505b620004748582620003e7565b865550620004e4565b601f1984166200048d8662000229565b60005b82811015620004b75784890151825560018201915060208501945060208101905062000490565b86831015620004d75784890151620004d3601f891682620003c7565b8355505b6001600288020188555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b62000526826200050a565b810181811067ffffffffffffffff8211171562000548576200054762000196565b5b80604052505050565b60006200055d620004ec565b90506200056b82826200051b565b919050565b600067ffffffffffffffff8211156200058e576200058d62000196565b5b62000599826200050a565b9050602081019050919050565b60005b83811015620005c6578082015181840152602081019050620005a9565b60008484015250505050565b6000620005e9620005e38462000570565b62000551565b90508281526020810184848401111562000608576200060762000505565b5b62000615848285620005a6565b509392505050565b600082601f83011262000635576200063462000500565b5b815162000647848260208601620005d2565b91505092915050565b600080604083850312156200066a5762000669620004f6565b5b600083015167ffffffffffffffff8111156200068b576200068a620004fb565b5b62000699858286016200061d565b925050602083015167ffffffffffffffff811115620006bd57620006bc620004fb565b5b620006cb858286016200061d565b9150509250929050565b612cbc80620006e56000396000f3fe6080604052600436106101815760003560e01c806370a08231116100d1578063b88d4fde1161008a578063e985e9c511610064578063e985e9c514610536578063f0c7b3aa14610573578063f259a29e146105b0578063f2fde38b146105db57610181565b8063b88d4fde146104b4578063c87b56dd146104d0578063dc76668d1461050d57610181565b806370a08231146103b8578063715018a6146103f55780638da5cb5b1461040c57806395d89b4114610437578063a22cb46514610462578063b6b285d91461048b57610181565b806323b872dd1161013e57806350caa3411161011857806350caa341146102fc5780635503a0e81461032757806355f804b3146103525780636352211e1461037b57610181565b806323b872dd1461029b57806340c10f19146102b757806342842e0e146102e057610181565b806301ffc9a71461018657806306fdde03146101c3578063081812fc146101ee578063095ea7b31461022b57806316ba10e01461024757806318160ddd14610270575b600080fd5b34801561019257600080fd5b506101ad60048036038101906101a89190611efb565b610604565b6040516101ba9190611f43565b60405180910390f35b3480156101cf57600080fd5b506101d8610696565b6040516101e59190611fee565b60405180910390f35b3480156101fa57600080fd5b5061021560048036038101906102109190612046565b610728565b60405161022291906120b4565b60405180910390f35b610245600480360381019061024091906120fb565b610786565b005b34801561025357600080fd5b5061026e60048036038101906102699190612270565b610796565b005b34801561027c57600080fd5b506102856107b1565b60405161029291906122c8565b60405180910390f35b6102b560048036038101906102b091906122e3565b6107c8565b005b3480156102c357600080fd5b506102de60048036038101906102d991906120fb565b610a89565b005b6102fa60048036038101906102f591906122e3565b610b2a565b005b34801561030857600080fd5b50610311610b4a565b60405161031e91906123f4565b60405180910390f35b34801561033357600080fd5b5061033c610bdf565b6040516103499190611fee565b60405180910390f35b34801561035e57600080fd5b5061037960048036038101906103749190612270565b610c6d565b005b34801561038757600080fd5b506103a2600480360381019061039d9190612046565b610c88565b6040516103af91906120b4565b60405180910390f35b3480156103c457600080fd5b506103df60048036038101906103da9190612416565b610c9a565b6040516103ec91906122c8565b60405180910390f35b34801561040157600080fd5b5061040a610d31565b005b34801561041857600080fd5b50610421610d45565b60405161042e91906120b4565b60405180910390f35b34801561044357600080fd5b5061044c610d6e565b6040516104599190611fee565b60405180910390f35b34801561046e57600080fd5b506104896004803603810190610484919061246f565b610e00565b005b34801561049757600080fd5b506104b260048036038101906104ad9190612416565b610f0b565b005b6104ce60048036038101906104c99190612550565b610f66565b005b3480156104dc57600080fd5b506104f760048036038101906104f29190612046565b610fb8565b6040516105049190611fee565b60405180910390f35b34801561051957600080fd5b50610534600480360381019061052f9190612046565b611038565b005b34801561054257600080fd5b5061055d600480360381019061055891906125d3565b611153565b60405161056a9190611f43565b60405180910390f35b34801561057f57600080fd5b5061059a60048036038101906105959190612046565b6111e7565b6040516105a79190611f43565b60405180910390f35b3480156105bc57600080fd5b506105c561124e565b6040516105d29190611fee565b60405180910390f35b3480156105e757600080fd5b5061060260048036038101906105fd9190612416565b6112dc565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061065f57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061068f5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600380546106a590612642565b80601f01602080910402602001604051908101604052809291908181526020018280546106d190612642565b801561071e5780601f106106f35761010080835404028352916020019161071e565b820191906000526020600020905b81548152906001019060200180831161070157829003601f168201915b5050505050905090565b60006107338261135f565b6107485761074763cf4700e460e01b6113d8565b5b600d600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610792828260016113e2565b5050565b61079e611511565b80600690816107ad919061281f565b5050565b60006107bb61158f565b6002546001540303905090565b60006107d382611594565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108485761084763a114810060e01b6113d8565b5b60008061085484611680565b9150915061086a81876108656116a7565b6116af565b6108955761087f8661087a6116a7565b611153565b610894576108936359c896be60e01b6113d8565b5b5b6108a286868660016116f3565b80156108ad57600082555b600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061097b856109578888876116f9565b7c020000000000000000000000000000000000000000000000000000000017611721565b600b60008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841603610a015760006001850190506000600b600083815260200190815260200160002054036109ff5760015481146109fe5783600b6000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008103610a7357610a7263ea553b3460e01b6113d8565b5b610a80878787600161174c565b50505050505050565b60011515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b139061293d565b60405180910390fd5b610b268282611752565b5050565b610b4583838360405180602001604052806000815250610f66565b505050565b6060600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610bd557602002820191906000526020600020905b815481526020019060010190808311610bc1575b5050505050905090565b60068054610bec90612642565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1890612642565b8015610c655780601f10610c3a57610100808354040283529160200191610c65565b820191906000526020600020905b815481529060010190602001808311610c4857829003601f168201915b505050505081565b610c75611511565b8060059081610c84919061281f565b5050565b6000610c9382611594565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ce057610cdf638f4eb60460e01b6113d8565b5b67ffffffffffffffff600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b610d39611511565b610d436000611770565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610d7d90612642565b80601f0160208091040260200160405190810160405280929190818152602001828054610da990612642565b8015610df65780601f10610dcb57610100808354040283529160200191610df6565b820191906000526020600020905b815481529060010190602001808311610dd957829003601f168201915b5050505050905090565b80600e6000610e0d6116a7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610eba6116a7565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610eff9190611f43565b60405180910390a35050565b6001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610f718484846107c8565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610fb257610f9c84848484611834565b610fb157610fb063d1a57ed660e01b6113d8565b5b5b50505050565b6060610fc38261135f565b610fd857610fd763a14c4b5060e01b6113d8565b5b6000610fe2611963565b905060008151036110025760405180602001604052806000815250611030565b8061100c846119f5565b600660405160200161102093929190612a1c565b6040516020818303038152906040525b915050919050565b3373ffffffffffffffffffffffffffffffffffffffff1661105882610c88565b73ffffffffffffffffffffffffffffffffffffffff161461107857600080fd5b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091505561115081611a45565b50565b6000600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050919050565b6005805461125b90612642565b80601f016020809104026020016040519081016040528092919081815260200182805461128790612642565b80156112d45780601f106112a9576101008083540402835291602001916112d4565b820191906000526020600020905b8154815290600101906020018083116112b757829003601f168201915b505050505081565b6112e4611511565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134a90612abf565b60405180910390fd5b61135c81611770565b50565b60008161136a61158f565b116113d3576001548210156113d25760005b6000600b600085815260200190815260200160002054915081036113ab57826113a490612b0e565b925061137c565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b8060005260046000fd5b60006113ed83610c88565b905081801561142f57508073ffffffffffffffffffffffffffffffffffffffff166114166116a7565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561145b57611445816114406116a7565b611153565b61145a5761145963cfb3b94260e01b6113d8565b5b5b83600d600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b611519611a53565b73ffffffffffffffffffffffffffffffffffffffff16611537610d45565b73ffffffffffffffffffffffffffffffffffffffff161461158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158490612b83565b60405180910390fd5b565b600090565b60008161159f61158f565b1161166a57600b6000838152602001908152602001600020549050600081036116415760015482106115dc576115db63df2d9b4260e01b6113d8565b5b5b600b600083600190039350838152602001908152602001600020549050600081031561163c5760007c01000000000000000000000000000000000000000000000000000000008216031561167b5761163b63df2d9b4260e01b6113d8565b5b6115dd565b60007c01000000000000000000000000000000000000000000000000000000008216031561167b575b61167a63df2d9b4260e01b6113d8565b5b919050565b6000806000600d600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8611710868684611a5b565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b61176c828260405180602001604052806000815250611a64565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261185a6116a7565b8786866040518563ffffffff1660e01b815260040161187c9493929190612bf8565b6020604051808303816000875af19250505080156118b857506040513d601f19601f820116820180604052508101906118b59190612c59565b60015b611910573d80600081146118e8576040519150601f19603f3d011682016040523d82523d6000602084013e6118ed565b606091505b5060008151036119085761190763d1a57ed660e01b6113d8565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606005805461197290612642565b80601f016020809104026020016040519081016040528092919081815260200182805461199e90612642565b80156119eb5780601f106119c0576101008083540402835291602001916119eb565b820191906000526020600020905b8154815290600101906020018083116119ce57829003601f168201915b5050505050905090565b606060a060405101806040526020810391506000825281835b600115611a3057600184039350600a81066030018453600a8104905080611a0e575b50828103602084039350808452505050919050565b611a50816000611aea565b50565b600033905090565b60009392505050565b611a6e8383611d1b565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611ae55760006001549050600083820390505b611aaf6000868380600101945086611834565b611ac457611ac363d1a57ed660e01b6113d8565b5b818110611a9c578160015414611ae257611ae1600060e01b6113d8565b5b50505b505050565b6000611af583611594565b90506000819050600080611b0886611680565b915091508415611b5057611b248184611b1f6116a7565b6116af565b611b4f57611b3983611b346116a7565b611153565b611b4e57611b4d6359c896be60e01b6113d8565b5b5b5b611b5e8360008860016116f3565b8015611b6957600082555b600160806001901b03600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611c1183611bce856000886116f9565b7c02000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000001717611721565b600b60008881526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000851603611c975760006001870190506000600b60008381526020019081526020016000205403611c95576001548114611c945784600b6000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d0183600088600161174c565b600260008154809291906001019190505550505050505050565b6000600154905060008203611d3b57611d3a63b562e8dd60e01b6113d8565b5b611d4860008483856116f3565b611d6883611d5960008660006116f9565b611d6285611e7f565b17611721565b600b600083815260200190815260200160002081905550600160406001901b178202600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff1616905060008103611e2057611e1f632e07630060e01b6113d8565b5b6000838301905060008390505b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4818160010191508103611e2d5781600181905550505050611e7a600084838561174c565b505050565b60006001821460e11b9050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ed881611ea3565b8114611ee357600080fd5b50565b600081359050611ef581611ecf565b92915050565b600060208284031215611f1157611f10611e99565b5b6000611f1f84828501611ee6565b91505092915050565b60008115159050919050565b611f3d81611f28565b82525050565b6000602082019050611f586000830184611f34565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f98578082015181840152602081019050611f7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611fc082611f5e565b611fca8185611f69565b9350611fda818560208601611f7a565b611fe381611fa4565b840191505092915050565b600060208201905081810360008301526120088184611fb5565b905092915050565b6000819050919050565b61202381612010565b811461202e57600080fd5b50565b6000813590506120408161201a565b92915050565b60006020828403121561205c5761205b611e99565b5b600061206a84828501612031565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061209e82612073565b9050919050565b6120ae81612093565b82525050565b60006020820190506120c960008301846120a5565b92915050565b6120d881612093565b81146120e357600080fd5b50565b6000813590506120f5816120cf565b92915050565b6000806040838503121561211257612111611e99565b5b6000612120858286016120e6565b925050602061213185828601612031565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61217d82611fa4565b810181811067ffffffffffffffff8211171561219c5761219b612145565b5b80604052505050565b60006121af611e8f565b90506121bb8282612174565b919050565b600067ffffffffffffffff8211156121db576121da612145565b5b6121e482611fa4565b9050602081019050919050565b82818337600083830152505050565b600061221361220e846121c0565b6121a5565b90508281526020810184848401111561222f5761222e612140565b5b61223a8482856121f1565b509392505050565b600082601f8301126122575761225661213b565b5b8135612267848260208601612200565b91505092915050565b60006020828403121561228657612285611e99565b5b600082013567ffffffffffffffff8111156122a4576122a3611e9e565b5b6122b084828501612242565b91505092915050565b6122c281612010565b82525050565b60006020820190506122dd60008301846122b9565b92915050565b6000806000606084860312156122fc576122fb611e99565b5b600061230a868287016120e6565b935050602061231b868287016120e6565b925050604061232c86828701612031565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61236b81612010565b82525050565b600061237d8383612362565b60208301905092915050565b6000602082019050919050565b60006123a182612336565b6123ab8185612341565b93506123b683612352565b8060005b838110156123e75781516123ce8882612371565b97506123d983612389565b9250506001810190506123ba565b5085935050505092915050565b6000602082019050818103600083015261240e8184612396565b905092915050565b60006020828403121561242c5761242b611e99565b5b600061243a848285016120e6565b91505092915050565b61244c81611f28565b811461245757600080fd5b50565b60008135905061246981612443565b92915050565b6000806040838503121561248657612485611e99565b5b6000612494858286016120e6565b92505060206124a58582860161245a565b9150509250929050565b600067ffffffffffffffff8211156124ca576124c9612145565b5b6124d382611fa4565b9050602081019050919050565b60006124f36124ee846124af565b6121a5565b90508281526020810184848401111561250f5761250e612140565b5b61251a8482856121f1565b509392505050565b600082601f8301126125375761253661213b565b5b81356125478482602086016124e0565b91505092915050565b6000806000806080858703121561256a57612569611e99565b5b6000612578878288016120e6565b9450506020612589878288016120e6565b935050604061259a87828801612031565b925050606085013567ffffffffffffffff8111156125bb576125ba611e9e565b5b6125c787828801612522565b91505092959194509250565b600080604083850312156125ea576125e9611e99565b5b60006125f8858286016120e6565b9250506020612609858286016120e6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061265a57607f821691505b60208210810361266d5761266c612613565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126d57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612698565b6126df8683612698565b95508019841693508086168417925050509392505050565b6000819050919050565b600061271c61271761271284612010565b6126f7565b612010565b9050919050565b6000819050919050565b61273683612701565b61274a61274282612723565b8484546126a5565b825550505050565b600090565b61275f612752565b61276a81848461272d565b505050565b5b8181101561278e57612783600082612757565b600181019050612770565b5050565b601f8211156127d3576127a481612673565b6127ad84612688565b810160208510156127bc578190505b6127d06127c885612688565b83018261276f565b50505b505050565b600082821c905092915050565b60006127f6600019846008026127d8565b1980831691505092915050565b600061280f83836127e5565b9150826002028217905092915050565b61282882611f5e565b67ffffffffffffffff81111561284157612840612145565b5b61284b8254612642565b612856828285612792565b600060209050601f8311600181146128895760008415612877578287015190505b6128818582612803565b8655506128e9565b601f19841661289786612673565b60005b828110156128bf5784890151825560018201915060208501945060208101905061289a565b868310156128dc57848901516128d8601f8916826127e5565b8355505b6001600288020188555050505b505050505050565b7f796f7520617265206e6f7420617070726f7665642020746f206d696e74000000600082015250565b6000612927601d83611f69565b9150612932826128f1565b602082019050919050565b600060208201905081810360008301526129568161291a565b9050919050565b600081905092915050565b600061297382611f5e565b61297d818561295d565b935061298d818560208601611f7a565b80840191505092915050565b600081546129a681612642565b6129b0818661295d565b945060018216600081146129cb57600181146129e057612a13565b60ff1983168652811515820286019350612a13565b6129e985612673565b60005b83811015612a0b578154818901526001820191506020810190506129ec565b838801955050505b50505092915050565b6000612a288286612968565b9150612a348285612968565b9150612a408284612999565b9150819050949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612aa9602683611f69565b9150612ab482612a4d565b604082019050919050565b60006020820190508181036000830152612ad881612a9c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b1982612010565b915060008203612b2c57612b2b612adf565b5b600182039050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612b6d602083611f69565b9150612b7882612b37565b602082019050919050565b60006020820190508181036000830152612b9c81612b60565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612bca82612ba3565b612bd48185612bae565b9350612be4818560208601611f7a565b612bed81611fa4565b840191505092915050565b6000608082019050612c0d60008301876120a5565b612c1a60208301866120a5565b612c2760408301856122b9565b8181036060830152612c398184612bbf565b905095945050505050565b600081519050612c5381611ecf565b92915050565b600060208284031215612c6f57612c6e611e99565b5b6000612c7d84828501612c44565b9150509291505056fea2646970667358221220559299fd9750e26a79e826d247e930489314e97bf299ef77854db6896b5238d464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH3 0x24 SWAP2 SWAP1 PUSH3 0x405 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x33A1 CODESIZE SUB DUP1 PUSH3 0x33A1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x650 JUMP JUMPDEST PUSH3 0x78 PUSH3 0x6C PUSH3 0xBA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x89 SWAP2 SWAP1 PUSH3 0x405 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x9B SWAP2 SWAP1 PUSH3 0x405 JUMP JUMPDEST POP PUSH3 0xAC PUSH3 0x186 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x6D5 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x20D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x223 JUMPI PUSH3 0x222 PUSH3 0x1C5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x28D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x24E JUMP JUMPDEST PUSH3 0x299 DUP7 DUP4 PUSH3 0x24E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E6 PUSH3 0x2E0 PUSH3 0x2DA DUP5 PUSH3 0x2B1 JUMP JUMPDEST PUSH3 0x2BB JUMP JUMPDEST PUSH3 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x302 DUP4 PUSH3 0x2C5 JUMP JUMPDEST PUSH3 0x31A PUSH3 0x311 DUP3 PUSH3 0x2ED JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x25B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x331 PUSH3 0x322 JUMP JUMPDEST PUSH3 0x33E DUP2 DUP5 DUP5 PUSH3 0x2F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x366 JUMPI PUSH3 0x35A PUSH1 0x0 DUP3 PUSH3 0x327 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x344 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3B5 JUMPI PUSH3 0x37F DUP2 PUSH3 0x229 JUMP JUMPDEST PUSH3 0x38A DUP5 PUSH3 0x23E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x39A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x3B2 PUSH3 0x3A9 DUP6 PUSH3 0x23E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x343 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3BA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F5 DUP4 DUP4 PUSH3 0x3C7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x410 DUP3 PUSH3 0x18B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x42C JUMPI PUSH3 0x42B PUSH3 0x196 JUMP JUMPDEST JUMPDEST PUSH3 0x438 DUP3 SLOAD PUSH3 0x1F4 JUMP JUMPDEST PUSH3 0x445 DUP3 DUP3 DUP6 PUSH3 0x36A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x47D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x468 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x474 DUP6 DUP3 PUSH3 0x3E7 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4E4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x48D DUP7 PUSH3 0x229 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4B7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x490 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4D7 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4D3 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3C7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x526 DUP3 PUSH3 0x50A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x548 JUMPI PUSH3 0x547 PUSH3 0x196 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55D PUSH3 0x4EC JUMP JUMPDEST SWAP1 POP PUSH3 0x56B DUP3 DUP3 PUSH3 0x51B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x58E JUMPI PUSH3 0x58D PUSH3 0x196 JUMP JUMPDEST JUMPDEST PUSH3 0x599 DUP3 PUSH3 0x50A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5A9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E9 PUSH3 0x5E3 DUP5 PUSH3 0x570 JUMP JUMPDEST PUSH3 0x551 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x608 JUMPI PUSH3 0x607 PUSH3 0x505 JUMP JUMPDEST JUMPDEST PUSH3 0x615 DUP5 DUP3 DUP6 PUSH3 0x5A6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x635 JUMPI PUSH3 0x634 PUSH3 0x500 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x647 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x66A JUMPI PUSH3 0x669 PUSH3 0x4F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x68B JUMPI PUSH3 0x68A PUSH3 0x4FB JUMP JUMPDEST JUMPDEST PUSH3 0x699 DUP6 DUP3 DUP7 ADD PUSH3 0x61D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6BD JUMPI PUSH3 0x6BC PUSH3 0x4FB JUMP JUMPDEST JUMPDEST PUSH3 0x6CB DUP6 DUP3 DUP7 ADD PUSH3 0x61D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CBC DUP1 PUSH3 0x6E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF0C7B3AA EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xF259A29E EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DB JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xDC76668D EQ PUSH2 0x50D JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xB6B285D9 EQ PUSH2 0x48B JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x50CAA341 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x50CAA341 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x5503A0E8 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x37B JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E0 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x16BA10E0 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x270 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0xA89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0xD31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x246F JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x2550 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x1038 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C5 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x65F JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x68F JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6A5 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x701 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x733 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x747 PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x792 DUP3 DUP3 PUSH1 0x1 PUSH2 0x13E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x79E PUSH2 0x1511 JUMP JUMPDEST DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x281F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BB PUSH2 0x158F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D3 DUP3 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x848 JUMPI PUSH2 0x847 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x854 DUP5 PUSH2 0x1680 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x86A DUP2 DUP8 PUSH2 0x865 PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x895 JUMPI PUSH2 0x87F DUP7 PUSH2 0x87A PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x894 JUMPI PUSH2 0x893 PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x8A2 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x16F3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x97B DUP6 PUSH2 0x957 DUP9 DUP9 DUP8 PUSH2 0x16F9 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0xA01 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x9FF JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x9FE JUMPI DUP4 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 SUB PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH2 0xA80 DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0x174C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP1 PUSH2 0x293D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB26 DUP3 DUP3 PUSH2 0x1752 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB45 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBC1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xBEC SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC18 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC65 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC3A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC65 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC48 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0x1511 JUMP JUMPDEST DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH2 0xC84 SWAP2 SWAP1 PUSH2 0x281F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 DUP3 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0xD43 PUSH1 0x0 PUSH2 0x1770 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD7D SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDA9 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDF6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDCB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 PUSH2 0xE0D PUSH2 0x16A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEBA PUSH2 0x16A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF71 DUP5 DUP5 DUP5 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xFB2 JUMPI PUSH2 0xF9C DUP5 DUP5 DUP5 DUP5 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0xFB1 JUMPI PUSH2 0xFB0 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFC3 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0xFD8 JUMPI PUSH2 0xFD7 PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE2 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1030 JUMP JUMPDEST DUP1 PUSH2 0x100C DUP5 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1020 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1058 DUP3 PUSH2 0xC88 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1150 DUP2 PUSH2 0x1A45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x125B SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1287 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x12E4 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134A SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x135C DUP2 PUSH2 0x1770 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x136A PUSH2 0x158F JUMP JUMPDEST GT PUSH2 0x13D3 JUMPI PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 SUB PUSH2 0x13AB JUMPI DUP3 PUSH2 0x13A4 SWAP1 PUSH2 0x2B0E JUMP JUMPDEST SWAP3 POP PUSH2 0x137C JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13ED DUP4 PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x142F JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1416 PUSH2 0x16A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x145B JUMPI PUSH2 0x1445 DUP2 PUSH2 0x1440 PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x145A JUMPI PUSH2 0x1459 PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1519 PUSH2 0x1A53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1537 PUSH2 0xD45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x159F PUSH2 0x158F JUMP JUMPDEST GT PUSH2 0x166A JUMPI PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1641 JUMPI PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB ISZERO PUSH2 0x163C JUMPI PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0x167B JUMPI PUSH2 0x163B PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0x167B JUMPI JUMPDEST PUSH2 0x167A PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x1710 DUP7 DUP7 DUP5 PUSH2 0x1A5B JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x176C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x185A PUSH2 0x16A7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18B8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B5 SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1910 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1972 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x199E SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1A0E JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A50 DUP2 PUSH1 0x0 PUSH2 0x1AEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A6E DUP4 DUP4 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x1AE5 JUMPI PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x1AAF PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x1AC4 JUMPI PUSH2 0x1AC3 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x1A9C JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1AE2 JUMPI PUSH2 0x1AE1 PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP4 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1B08 DUP7 PUSH2 0x1680 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1B50 JUMPI PUSH2 0x1B24 DUP2 DUP5 PUSH2 0x1B1F PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x1B4F JUMPI PUSH2 0x1B39 DUP4 PUSH2 0x1B34 PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1B4E JUMPI PUSH2 0x1B4D PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1B5E DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x16F3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B69 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SUB PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C11 DUP4 PUSH2 0x1BCE DUP6 PUSH1 0x0 DUP9 PUSH2 0x16F9 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 OR OR PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND SUB PUSH2 0x1C97 JUMPI PUSH1 0x0 PUSH1 0x1 DUP8 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1C95 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1C94 JUMPI DUP5 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP6 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D01 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH2 0x1D48 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x1D68 DUP4 PUSH2 0x1D59 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x1D62 DUP6 PUSH2 0x1E7F JUMP JUMPDEST OR PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1E20 JUMPI PUSH2 0x1E1F PUSH4 0x2E076300 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x1E2D JUMPI DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1E7A PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x174C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ED8 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF5 DUP2 PUSH2 0x1ECF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1F DUP5 DUP3 DUP6 ADD PUSH2 0x1EE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3D DUP2 PUSH2 0x1F28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC0 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x1FCA DUP2 DUP6 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x1FE3 DUP2 PUSH2 0x1FA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2008 DUP2 DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2023 DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP2 EQ PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2040 DUP2 PUSH2 0x201A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x205C JUMPI PUSH2 0x205B PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x206A DUP5 DUP3 DUP6 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209E DUP3 PUSH2 0x2073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20AE DUP2 PUSH2 0x2093 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x2093 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F5 DUP2 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2120 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2131 DUP6 DUP3 DUP7 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x217D DUP3 PUSH2 0x1FA4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x219C JUMPI PUSH2 0x219B PUSH2 0x2145 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AF PUSH2 0x1E8F JUMP JUMPDEST SWAP1 POP PUSH2 0x21BB DUP3 DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21DB JUMPI PUSH2 0x21DA PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x21E4 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2213 PUSH2 0x220E DUP5 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x222F JUMPI PUSH2 0x222E PUSH2 0x2140 JUMP JUMPDEST JUMPDEST PUSH2 0x223A DUP5 DUP3 DUP6 PUSH2 0x21F1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x213B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2267 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2200 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A4 JUMPI PUSH2 0x22A3 PUSH2 0x1E9E JUMP JUMPDEST JUMPDEST PUSH2 0x22B0 DUP5 DUP3 DUP6 ADD PUSH2 0x2242 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22FC JUMPI PUSH2 0x22FB PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x230A DUP7 DUP3 DUP8 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x231B DUP7 DUP3 DUP8 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x232C DUP7 DUP3 DUP8 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236B DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237D DUP4 DUP4 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A1 DUP3 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x23AB DUP2 DUP6 PUSH2 0x2341 JUMP JUMPDEST SWAP4 POP PUSH2 0x23B6 DUP4 PUSH2 0x2352 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23E7 JUMPI DUP2 MLOAD PUSH2 0x23CE DUP9 DUP3 PUSH2 0x2371 JUMP JUMPDEST SWAP8 POP PUSH2 0x23D9 DUP4 PUSH2 0x2389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23BA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x240E DUP2 DUP5 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x242C JUMPI PUSH2 0x242B PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x243A DUP5 DUP3 DUP6 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x244C DUP2 PUSH2 0x1F28 JUMP JUMPDEST DUP2 EQ PUSH2 0x2457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2469 DUP2 PUSH2 0x2443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH2 0x2485 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2494 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A5 DUP6 DUP3 DUP7 ADD PUSH2 0x245A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24CA JUMPI PUSH2 0x24C9 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x24D3 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 PUSH2 0x24EE DUP5 PUSH2 0x24AF JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x250F JUMPI PUSH2 0x250E PUSH2 0x2140 JUMP JUMPDEST JUMPDEST PUSH2 0x251A DUP5 DUP3 DUP6 PUSH2 0x21F1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2537 JUMPI PUSH2 0x2536 PUSH2 0x213B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2547 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2578 DUP8 DUP3 DUP9 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2589 DUP8 DUP3 DUP9 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x259A DUP8 DUP3 DUP9 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25BB JUMPI PUSH2 0x25BA PUSH2 0x1E9E JUMP JUMPDEST JUMPDEST PUSH2 0x25C7 DUP8 DUP3 DUP9 ADD PUSH2 0x2522 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F8 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2609 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x265A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x266D JUMPI PUSH2 0x266C PUSH2 0x2613 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x26D5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2698 JUMP JUMPDEST PUSH2 0x26DF DUP7 DUP4 PUSH2 0x2698 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271C PUSH2 0x2717 PUSH2 0x2712 DUP5 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x26F7 JUMP JUMPDEST PUSH2 0x2010 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2736 DUP4 PUSH2 0x2701 JUMP JUMPDEST PUSH2 0x274A PUSH2 0x2742 DUP3 PUSH2 0x2723 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26A5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x275F PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x276A DUP2 DUP5 DUP5 PUSH2 0x272D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x278E JUMPI PUSH2 0x2783 PUSH1 0x0 DUP3 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2770 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27D3 JUMPI PUSH2 0x27A4 DUP2 PUSH2 0x2673 JUMP JUMPDEST PUSH2 0x27AD DUP5 PUSH2 0x2688 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27D0 PUSH2 0x27C8 DUP6 PUSH2 0x2688 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x276F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27D8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280F DUP4 DUP4 PUSH2 0x27E5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2828 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2841 JUMPI PUSH2 0x2840 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x284B DUP3 SLOAD PUSH2 0x2642 JUMP JUMPDEST PUSH2 0x2856 DUP3 DUP3 DUP6 PUSH2 0x2792 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2889 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2877 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2881 DUP6 DUP3 PUSH2 0x2803 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2897 DUP7 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28BF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x289A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28DC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28D8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27E5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206D696E74000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2927 PUSH1 0x1D DUP4 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2932 DUP3 PUSH2 0x28F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2956 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x297D DUP2 DUP6 PUSH2 0x295D JUMP JUMPDEST SWAP4 POP PUSH2 0x298D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F7A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x29A6 DUP2 PUSH2 0x2642 JUMP JUMPDEST PUSH2 0x29B0 DUP2 DUP7 PUSH2 0x295D JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x29CB JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x29E0 JUMPI PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0x29E9 DUP6 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A0B JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29EC JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A28 DUP3 DUP7 PUSH2 0x2968 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A34 DUP3 DUP6 PUSH2 0x2968 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A40 DUP3 DUP5 PUSH2 0x2999 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA9 PUSH1 0x26 DUP4 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB4 DUP3 PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AD8 DUP2 PUSH2 0x2A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B19 DUP3 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2B2C JUMPI PUSH2 0x2B2B PUSH2 0x2ADF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6D PUSH1 0x20 DUP4 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B78 DUP3 PUSH2 0x2B37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9C DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCA DUP3 PUSH2 0x2BA3 JUMP JUMPDEST PUSH2 0x2BD4 DUP2 DUP6 PUSH2 0x2BAE JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x2BED DUP2 PUSH2 0x1FA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C0D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x2C1A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x2C27 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22B9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C39 DUP2 DUP5 PUSH2 0x2BBF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C53 DUP2 PUSH2 0x1ECF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C6F JUMPI PUSH2 0x2C6E PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C7D DUP5 DUP3 DUP6 ADD PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE SWAP3 SWAP10 REVERT SWAP8 POP 0xE2 PUSH11 0x79E826D247E930489314E9 PUSH28 0xF299EF77854DB6896B5238D464736F6C634300081200330000000000 ",
							"sourceMap": "329:29409:3:-:0;;;2500:28;;;;;;;;;;;;;;;;;;;:::i;:::-;;3138:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3213:5:3;3205;:13;;;;;;:::i;:::-;;3239:7;3229;:17;;;;;;:::i;:::-;;3273:15;:13;;;:15;;:::i;:::-;3257:13;:31;;;;3138:158;;329:29409;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3309:92:3:-;3365:7;3309:92;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:75::-;5267:6;5300:2;5294:9;5284:19;;5234:75;:::o;5315:117::-;5424:1;5421;5414:12;5438:117;5547:1;5544;5537:12;5561:117;5670:1;5667;5660:12;5684:117;5793:1;5790;5783:12;5807:102;5848:6;5899:2;5895:7;5890:2;5883:5;5879:14;5875:28;5865:38;;5807:102;;;:::o;5915:281::-;5998:27;6020:4;5998:27;:::i;:::-;5990:6;5986:40;6128:6;6116:10;6113:22;6092:18;6080:10;6077:34;6074:62;6071:88;;;6139:18;;:::i;:::-;6071:88;6179:10;6175:2;6168:22;5958:238;5915:281;;:::o;6202:129::-;6236:6;6263:20;;:::i;:::-;6253:30;;6292:33;6320:4;6312:6;6292:33;:::i;:::-;6202:129;;;:::o;6337:308::-;6399:4;6489:18;6481:6;6478:30;6475:56;;;6511:18;;:::i;:::-;6475:56;6549:29;6571:6;6549:29;:::i;:::-;6541:37;;6633:4;6627;6623:15;6615:23;;6337:308;;;:::o;6651:246::-;6732:1;6742:113;6756:6;6753:1;6750:13;6742:113;;;6841:1;6836:3;6832:11;6826:18;6822:1;6817:3;6813:11;6806:39;6778:2;6775:1;6771:10;6766:15;;6742:113;;;6889:1;6880:6;6875:3;6871:16;6864:27;6713:184;6651:246;;;:::o;6903:434::-;6992:5;7017:66;7033:49;7075:6;7033:49;:::i;:::-;7017:66;:::i;:::-;7008:75;;7106:6;7099:5;7092:21;7144:4;7137:5;7133:16;7182:3;7173:6;7168:3;7164:16;7161:25;7158:112;;;7189:79;;:::i;:::-;7158:112;7279:52;7324:6;7319:3;7314;7279:52;:::i;:::-;6998:339;6903:434;;;;;:::o;7357:355::-;7424:5;7473:3;7466:4;7458:6;7454:17;7450:27;7440:122;;7481:79;;:::i;:::-;7440:122;7591:6;7585:13;7616:90;7702:3;7694:6;7687:4;7679:6;7675:17;7616:90;:::i;:::-;7607:99;;7430:282;7357:355;;;;:::o;7718:853::-;7817:6;7825;7874:2;7862:9;7853:7;7849:23;7845:32;7842:119;;;7880:79;;:::i;:::-;7842:119;8021:1;8010:9;8006:17;8000:24;8051:18;8043:6;8040:30;8037:117;;;8073:79;;:::i;:::-;8037:117;8178:74;8244:7;8235:6;8224:9;8220:22;8178:74;:::i;:::-;8168:84;;7971:291;8322:2;8311:9;8307:18;8301:25;8353:18;8345:6;8342:30;8339:117;;;8375:79;;:::i;:::-;8339:117;8480:74;8546:7;8537:6;8526:9;8522:22;8480:74;:::i;:::-;8470:84;;8272:292;7718:853;;;;;:::o;329:29409:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1490": {
									"entryPoint": 5964,
									"id": 1490,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1925": {
									"entryPoint": 5090,
									"id": 1925,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_728": {
									"entryPoint": 6499,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1478": {
									"entryPoint": 5875,
									"id": 1478,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1936": {
									"entryPoint": 6725,
									"id": 1936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_2089": {
									"entryPoint": 6890,
									"id": 2089,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1545": {
									"entryPoint": 6196,
									"id": 1545,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 5393,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_1205": {
									"entryPoint": 4959,
									"id": 1205,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2146": {
									"entryPoint": 6747,
									"id": 2146,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1236": {
									"entryPoint": 5760,
									"id": 1236,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1218": {
									"entryPoint": 5807,
									"id": 1218,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1663": {
									"entryPoint": 7451,
									"id": 1663,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2187": {
									"entryPoint": 5799,
									"id": 2187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_124": {
									"entryPoint": 6739,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2178": {
									"entryPoint": 5881,
									"id": 2178,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1082": {
									"entryPoint": 7807,
									"id": 1082,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1073": {
									"entryPoint": 5921,
									"id": 1073,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1009": {
									"entryPoint": 5524,
									"id": 1009,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_2205": {
									"entryPoint": 5080,
									"id": 2205,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_1847": {
									"entryPoint": 6756,
									"id": 1847,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_1862": {
									"entryPoint": 5970,
									"id": 1862,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_477": {
									"entryPoint": 5519,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2197": {
									"entryPoint": 6645,
									"id": 2197,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 6000,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_1097": {
									"entryPoint": 1926,
									"id": 1097,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_548": {
									"entryPoint": 3226,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseURI__409": {
									"entryPoint": 4686,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkredeemednftid_850": {
									"entryPoint": 2890,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkredemmedphysicalitem_838": {
									"entryPoint": 4583,
									"id": 838,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1121": {
									"entryPoint": 1832,
									"id": 1121,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1163": {
									"entryPoint": 4435,
									"id": 1163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_787": {
									"entryPoint": 2697,
									"id": 787,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_665": {
									"entryPoint": 1686,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_869": {
									"entryPoint": 3208,
									"id": 869,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 3397,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redeemPhysicalItem_823": {
									"entryPoint": 4152,
									"id": 823,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 3377,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1427": {
									"entryPoint": 2858,
									"id": 1427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1466": {
									"entryPoint": 3942,
									"id": 1466,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1146": {
									"entryPoint": 3584,
									"id": 1146,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_740": {
									"entryPoint": 3181,
									"id": 740,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUriSuffix_752": {
									"entryPoint": 1942,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setapprovedcontractaddress_764": {
									"entryPoint": 3851,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_656": {
									"entryPoint": 1540,
									"id": 656,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_674": {
									"entryPoint": 3438,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_719": {
									"entryPoint": 4024,
									"id": 719,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_500": {
									"entryPoint": 1969,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1408": {
									"entryPoint": 1992,
									"id": 1408,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4828,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uriSuffix_412": {
									"entryPoint": 3039,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9440,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8704,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 9073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10780,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11256,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8689,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8058,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 11022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"divide_by_32_ceil": {
									"entryPoint": 9864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 10829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 11063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5": {
									"entryPoint": 10481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26166:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:4",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:4",
														"type": ""
													}
												],
												"src": "334:149:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:4"
															},
															"nodeType": "YulIf",
															"src": "541:62:4"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:4",
														"type": ""
													}
												],
												"src": "489:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:4"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:4",
														"type": ""
													}
												],
												"src": "615:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:4"
															},
															"nodeType": "YulIf",
															"src": "833:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:4",
														"type": ""
													}
												],
												"src": "758:327:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:4",
														"type": ""
													}
												],
												"src": "1091:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:4",
														"type": ""
													}
												],
												"src": "1187:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:4",
														"type": ""
													}
												],
												"src": "1302:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:4",
														"type": ""
													}
												],
												"src": "1518:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:4",
														"type": ""
													}
												],
												"src": "1623:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:4",
																"statements": []
															},
															"src": "1889:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:4",
														"type": ""
													}
												],
												"src": "1798:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:4",
														"type": ""
													}
												],
												"src": "2050:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:4",
														"type": ""
													}
												],
												"src": "2158:377:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:4",
														"type": ""
													}
												],
												"src": "2541:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:4",
														"type": ""
													}
												],
												"src": "2860:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:4"
															},
															"nodeType": "YulIf",
															"src": "2996:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:4",
														"type": ""
													}
												],
												"src": "2943:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:4",
														"type": ""
													}
												],
												"src": "3071:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:4"
															},
															"nodeType": "YulIf",
															"src": "3292:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:4",
														"type": ""
													}
												],
												"src": "3216:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:4",
														"type": ""
													}
												],
												"src": "3551:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:4",
														"type": ""
													}
												],
												"src": "3683:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:4",
														"type": ""
													}
												],
												"src": "3785:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:4",
														"type": ""
													}
												],
												"src": "3909:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:4"
															},
															"nodeType": "YulIf",
															"src": "4190:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:4",
														"type": ""
													}
												],
												"src": "4137:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:4",
														"type": ""
													}
												],
												"src": "4265:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:4"
															},
															"nodeType": "YulIf",
															"src": "4503:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:4",
														"type": ""
													}
												],
												"src": "4410:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4979:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5112:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5164:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5174:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5281:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5271:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5305:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5136:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5397:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5427:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5405:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5393:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5379:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5544:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5546:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5546:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5546:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5487:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5499:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5484:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5484:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5523:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5520:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5481:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:62:4"
															},
															"nodeType": "YulIf",
															"src": "5478:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5586:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5575:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5351:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5359:4:4",
														"type": ""
													}
												],
												"src": "5322:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5660:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5670:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5727:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5699:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5699:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5634:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5643:6:4",
														"type": ""
													}
												],
												"src": "5609:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5811:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5916:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5918:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5918:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5918:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5888:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5885:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:30:4"
															},
															"nodeType": "YulIf",
															"src": "5882:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5978:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5956:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5948:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6022:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6034:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6040:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6022:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5795:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5806:4:4",
														"type": ""
													}
												],
												"src": "5744:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6122:82:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6145:3:4"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6150:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6155:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6132:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6182:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6187:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6196:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6104:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6109:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6114:6:4",
														"type": ""
													}
												],
												"src": "6058:146:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:341:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6304:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6329:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6329:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6313:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6313:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6304:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6395:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6418:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6433:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6440:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6422:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6483:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "6485:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6485:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6485:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6464:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6469:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6478:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6457:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:25:4"
															},
															"nodeType": "YulIf",
															"src": "6454:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6612:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6617:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6622:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6575:36:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6575:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6575:54:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6267:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6272:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6280:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6288:5:4",
														"type": ""
													}
												],
												"src": "6210:425:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6717:278:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6766:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6768:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6768:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6768:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6745:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6753:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6741:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6741:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6760:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6737:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6737:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6730:35:4"
															},
															"nodeType": "YulIf",
															"src": "6727:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6858:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6885:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6872:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6862:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6901:88:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6962:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6970:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6977:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6985:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6910:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:79:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6695:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6703:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6711:5:4",
														"type": ""
													}
												],
												"src": "6655:340:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7077:433:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7123:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7125:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7125:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7125:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7098:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7094:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:32:4"
															},
															"nodeType": "YulIf",
															"src": "7087:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "7216:287:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7231:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7262:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7273:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7258:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7258:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7245:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7245:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7323:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7325:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7325:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7325:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7295:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7303:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7292:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7292:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "7289:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7420:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7465:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7476:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7461:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7461:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7485:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7430:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7430:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7420:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7047:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7058:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7070:6:4",
														"type": ""
													}
												],
												"src": "7001:509:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7581:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7598:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7621:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7603:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7603:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7569:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7576:3:4",
														"type": ""
													}
												],
												"src": "7516:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7738:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7748:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7760:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7771:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7756:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7748:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7828:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7841:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7852:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7837:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7784:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7784:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7784:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7710:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7722:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7733:4:4",
														"type": ""
													}
												],
												"src": "7640:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7968:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8014:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8016:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8016:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8016:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7989:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7998:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8010:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7981:32:4"
															},
															"nodeType": "YulIf",
															"src": "7978:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "8107:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8122:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8126:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8151:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8186:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8197:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8182:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8182:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8206:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8161:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8161:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8151:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8234:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8249:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8253:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8279:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8314:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8325:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8310:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8310:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8334:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8289:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8289:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8279:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8362:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8377:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8391:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8381:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8407:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8442:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8453:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8438:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8438:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8462:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8417:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8417:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8407:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7922:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7933:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7945:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7953:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7961:6:4",
														"type": ""
													}
												],
												"src": "7868:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8567:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8578:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8594:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8588:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8588:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8550:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8560:6:4",
														"type": ""
													}
												],
												"src": "8493:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8724:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8741:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8746:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8734:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8734:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8734:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8762:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8781:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8786:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8777:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8777:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8762:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8696:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8701:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8712:11:4",
														"type": ""
													}
												],
												"src": "8613:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8875:60:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8885:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8893:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8885:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8906:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8918:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8923:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8914:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:14:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8862:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8870:4:4",
														"type": ""
													}
												],
												"src": "8803:132:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9013:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9036:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9018:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9018:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9006:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9006:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8984:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8991:3:4",
														"type": ""
													}
												],
												"src": "8941:108:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9135:99:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9179:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9187:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9145:33:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9145:46:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9145:46:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9200:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9218:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9223:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9214:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:14:4"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9200:10:4"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9108:6:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9116:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9124:10:4",
														"type": ""
													}
												],
												"src": "9055:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9315:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9325:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9337:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9342:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9333:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9333:14:4"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "9325:4:4"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9302:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "9310:4:4",
														"type": ""
													}
												],
												"src": "9240:113:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9513:608:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9523:68:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9585:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9537:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:54:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9527:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9600:93:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9681:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9686:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9607:73:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:86:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9600:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9702:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9767:5:4"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9717:49:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9717:56:4"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "9706:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9782:21:4",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9796:7:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9786:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9872:224:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9886:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9913:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9907:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9907:13:4"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9890:13:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9933:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9984:13:4"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9999:3:4"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "9940:43:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9940:63:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9933:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10016:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10079:6:4"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10026:52:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:60:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10016:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9834:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9837:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9831:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9831:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9845:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9847:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9856:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9859:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9852:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9852:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9847:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9816:14:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9818:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9827:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9822:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9812:284:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10105:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10112:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10105:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9492:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9499:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9508:3:4",
														"type": ""
													}
												],
												"src": "9389:732:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10275:225:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10285:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10297:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10293:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10285:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10332:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10343:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10328:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10328:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10351:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10357:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10347:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10347:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10321:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10321:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10321:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10377:116:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10479:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10488:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10385:93:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10385:108:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10377:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10247:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10259:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10270:4:4",
														"type": ""
													}
												],
												"src": "10127:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10572:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10618:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10620:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10620:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10620:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10593:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10602:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10589:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10589:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10614:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10585:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10585:32:4"
															},
															"nodeType": "YulIf",
															"src": "10582:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "10711:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10726:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10740:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10730:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10755:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10790:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10801:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10786:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10786:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10810:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10765:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10765:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10755:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10542:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10553:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10565:6:4",
														"type": ""
													}
												],
												"src": "10506:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10881:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10935:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10944:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10947:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10937:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10937:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10937:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10904:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10926:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10911:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10911:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10901:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10901:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10894:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10894:40:4"
															},
															"nodeType": "YulIf",
															"src": "10891:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10874:5:4",
														"type": ""
													}
												],
												"src": "10841:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11012:84:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11022:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11044:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11031:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11031:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11022:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11084:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11060:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11060:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11060:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10990:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10998:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11006:5:4",
														"type": ""
													}
												],
												"src": "10963:133:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11182:388:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11228:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11230:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11230:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11230:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11203:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11212:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11199:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11199:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11224:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11195:32:4"
															},
															"nodeType": "YulIf",
															"src": "11192:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "11321:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11336:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11350:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11340:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11365:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11400:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11411:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11396:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11396:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11420:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11375:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11375:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11365:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11448:115:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11463:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11477:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11467:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11493:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11525:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11536:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11521:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11521:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11545:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "11503:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11503:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11493:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11144:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11155:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11167:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11175:6:4",
														"type": ""
													}
												],
												"src": "11102:468:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11642:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11747:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11749:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11749:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11749:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11719:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11727:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11716:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11716:30:4"
															},
															"nodeType": "YulIf",
															"src": "11713:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11779:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11809:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "11787:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11779:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11853:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "11865:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11871:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11861:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11861:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11853:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11626:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11637:4:4",
														"type": ""
													}
												],
												"src": "11576:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11972:340:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11982:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12048:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12007:40:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12007:48:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11991:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11991:65:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11982:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12072:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12079:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12065:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12065:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12065:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12095:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12110:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12117:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12106:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12106:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "12099:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12160:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "12162:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12162:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12162:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12141:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12146:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12137:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12137:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12155:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12134:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12134:25:4"
															},
															"nodeType": "YulIf",
															"src": "12131:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12289:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "12294:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12252:36:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12252:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12252:54:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11945:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11950:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11958:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11966:5:4",
														"type": ""
													}
												],
												"src": "11889:423:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12392:277:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12441:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "12443:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12443:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12443:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12420:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12428:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12416:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12416:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12435:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12412:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12412:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12405:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12405:35:4"
															},
															"nodeType": "YulIf",
															"src": "12402:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12533:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12560:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12547:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12547:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12537:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12576:87:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12636:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12644:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12632:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12632:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12651:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12659:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12585:46:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12585:78:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12576:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12370:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12378:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12386:5:4",
														"type": ""
													}
												],
												"src": "12331:338:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:817:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12848:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12850:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12850:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12850:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12822:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12831:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12818:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12818:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12843:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12814:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12814:33:4"
															},
															"nodeType": "YulIf",
															"src": "12811:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "12941:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12956:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12970:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12960:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12985:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13020:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13031:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13016:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13016:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13040:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12995:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12995:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12985:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13068:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13083:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13097:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13087:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13113:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13148:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13159:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13144:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13144:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13168:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13123:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13123:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13113:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13196:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13211:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13225:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13215:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13241:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13276:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13287:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13272:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13272:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13296:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13251:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13251:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "13241:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13324:287:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13339:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13370:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13381:2:4",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13366:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13366:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13353:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13353:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13343:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13432:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13434:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13434:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13434:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13404:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13412:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13401:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13401:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "13398:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13529:72:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13573:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13584:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13569:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13569:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13593:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13539:29:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13539:62:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "13529:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12747:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12758:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12770:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12778:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12786:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12794:6:4",
														"type": ""
													}
												],
												"src": "12675:943:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13707:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13753:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13755:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13755:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13755:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13728:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13737:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13724:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13724:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13749:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13720:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13720:32:4"
															},
															"nodeType": "YulIf",
															"src": "13717:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "13846:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13861:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13875:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13865:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13890:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13925:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13936:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13921:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13921:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13945:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13900:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13900:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13890:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13973:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13988:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14002:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13992:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14018:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14053:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14064:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14049:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14049:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14073:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14028:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14028:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "14018:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13669:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13680:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13692:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13700:6:4",
														"type": ""
													}
												],
												"src": "13624:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14132:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14149:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14152:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14142:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14142:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14142:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14246:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14249:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14239:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14239:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14270:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14273:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14263:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14263:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14263:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "14104:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14341:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14351:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14365:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14371:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14361:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14361:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14351:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14382:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14412:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14418:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14408:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14408:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14386:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14459:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14473:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14487:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14495:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14483:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14483:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14473:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14439:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14432:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14432:26:4"
															},
															"nodeType": "YulIf",
															"src": "14429:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14562:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "14576:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14576:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14576:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14526:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14549:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14557:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14546:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14546:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14523:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14523:38:4"
															},
															"nodeType": "YulIf",
															"src": "14520:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14325:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14334:6:4",
														"type": ""
													}
												],
												"src": "14290:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14670:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14680:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "14688:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14680:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14708:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14711:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14701:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14701:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14724:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14742:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14745:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "14732:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14732:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14724:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14657:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14665:4:4",
														"type": ""
													}
												],
												"src": "14616:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14807:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14817:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14835:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14842:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14831:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14831:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14847:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14827:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14827:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14817:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14790:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14800:6:4",
														"type": ""
													}
												],
												"src": "14763:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14915:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14925:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "14950:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14956:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "14946:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14946:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "14925:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "14890:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14896:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "14906:8:4",
														"type": ""
													}
												],
												"src": "14862:107:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15051:317:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15061:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "15082:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15094:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15078:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15078:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "15065:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15105:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "15136:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15147:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "15117:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15117:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "15109:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15223:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "15254:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "15265:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "15235:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15235:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "15223:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15283:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15296:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "15307:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15303:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15303:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15292:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15292:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15283:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15322:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15335:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "15346:8:4"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "15356:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15342:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15342:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15332:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15332:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15322:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15012:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "15019:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "15031:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15044:6:4",
														"type": ""
													}
												],
												"src": "14975:393:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15406:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15416:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15423:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15416:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15392:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15402:3:4",
														"type": ""
													}
												],
												"src": "15374:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15500:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15510:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15568:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15550:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15550:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "15541:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15541:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15523:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15523:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15510:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15480:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15490:9:4",
														"type": ""
													}
												],
												"src": "15440:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15635:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15645:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15652:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15645:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15621:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15631:3:4",
														"type": ""
													}
												],
												"src": "15588:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15745:193:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15755:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "15810:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15779:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15779:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "15759:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "15834:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "15874:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "15868:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15868:11:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15881:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "15913:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15889:23:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15889:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "15840:27:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15840:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "15827:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15827:105:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15827:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "15722:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15728:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "15736:7:4",
														"type": ""
													}
												],
												"src": "15669:269:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15993:24:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16003:8:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16010:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16003:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15989:3:4",
														"type": ""
													}
												],
												"src": "15944:73:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16076:136:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16086:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16100:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16100:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "16090:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16185:4:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16191:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "16199:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16141:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16141:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16141:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16062:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16068:6:4",
														"type": ""
													}
												],
												"src": "16023:189:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16268:136:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16335:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "16379:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16386:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "16349:29:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16349:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16349:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "16288:5:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "16295:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16285:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16285:14:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16300:26:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16302:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "16315:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16322:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16311:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16311:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "16302:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16282:2:4",
																"statements": []
															},
															"src": "16278:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "16256:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16263:3:4",
														"type": ""
													}
												],
												"src": "16218:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16489:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16515:431:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16529:54:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "16577:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "16545:31:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16545:38:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "16533:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16596:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "16619:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "16647:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "16629:17:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16629:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16615:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16615:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "16600:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "16816:27:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "16818:23:4",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "16833:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "16818:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "16800:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16812:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "16797:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16797:18:4"
																		},
																		"nodeType": "YulIf",
																		"src": "16794:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "16885:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "16902:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "16930:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "16912:17:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16912:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16898:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16898:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "16856:28:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16856:80:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16856:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "16506:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16511:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16503:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16503:11:4"
															},
															"nodeType": "YulIf",
															"src": "16500:446:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "16465:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "16472:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "16477:10:4",
														"type": ""
													}
												],
												"src": "16410:543:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17022:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17032:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "17057:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17063:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17053:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17053:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17032:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "16997:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17003:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17013:8:4",
														"type": ""
													}
												],
												"src": "16959:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17133:118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17143:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17192:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "17195:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "17188:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17188:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17207:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "17203:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17203:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "17159:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17159:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "17155:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17155:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "17147:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17220:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17234:4:4"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "17240:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17230:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17230:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17220:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17110:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "17116:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17126:6:4",
														"type": ""
													}
												],
												"src": "17082:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17337:214:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17470:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17497:4:4"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "17503:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "17478:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17478:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17470:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17516:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17527:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17537:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "17540:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "17533:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17533:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17524:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17524:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "17516:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17318:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "17324:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "17332:4:4",
														"type": ""
													}
												],
												"src": "17256:295:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17648:1303:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17659:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "17706:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "17673:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17673:37:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "17663:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17795:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17797:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17797:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17797:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "17767:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17775:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17764:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17764:30:4"
															},
															"nodeType": "YulIf",
															"src": "17761:56:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17827:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "17873:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "17867:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17867:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "17841:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17841:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "17831:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "17972:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "17978:6:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "17986:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "17926:45:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17926:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17926:67:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18003:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18020:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "18007:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18031:17:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18044:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "18031:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18095:611:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18109:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "18128:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18140:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "18136:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18136:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "18124:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18124:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "18113:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18160:51:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18206:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "18174:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18174:37:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "18164:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18224:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18233:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "18228:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18292:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "18317:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "18335:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "18340:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "18331:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "18331:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "18325:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18325:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "18310:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18310:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18310:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "18369:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "18383:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18391:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18379:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18379:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "18369:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "18410:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "18427:9:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18438:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18423:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18423:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "18410:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18258:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "18261:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "18255:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18255:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "18270:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "18272:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "18281:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18284:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18277:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18277:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "18272:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "18251:3:4",
																					"statements": []
																				},
																				"src": "18247:208:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18491:156:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "18509:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "18536:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "18541:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "18532:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18532:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "18526:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18526:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "18513:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "18576:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "18603:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "18618:6:4"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "18626:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "18614:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "18614:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "18584:18:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18584:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "18569:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18569:64:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18569:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "18474:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "18483:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "18471:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18471:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "18468:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18667:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "18681:6:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "18689:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "18677:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "18677:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18693:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18673:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18673:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "18660:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18660:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18660:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18088:618:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18093:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18723:222:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18737:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18750:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "18741:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18774:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "18792:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "18811:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "18816:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "18807:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "18807:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "18801:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18801:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "18792:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "18767:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "18764:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18861:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "18920:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "18927:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "18867:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18867:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "18854:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18854:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18854:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18715:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18068:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18076:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18065:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "18065:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "18058:887:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "17637:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "17643:3:4",
														"type": ""
													}
												],
												"src": "17556:1395:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19063:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19085:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19093:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19081:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19081:14:4"
																	},
																	{
																		"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19097:31:4",
																		"type": "",
																		"value": "you are not approved  to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19074:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "19074:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19074:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19055:6:4",
														"type": ""
													}
												],
												"src": "18957:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19288:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19298:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19364:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19369:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19305:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "19305:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19298:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19470:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
																	"nodeType": "YulIdentifier",
																	"src": "19381:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "19381:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19381:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19483:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19494:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19499:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19490:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "19490:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19483:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19276:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19284:3:4",
														"type": ""
													}
												],
												"src": "19142:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19685:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19695:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19707:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19718:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19703:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "19703:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19695:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19742:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19753:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19738:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19738:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19761:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19767:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19757:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19757:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19731:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "19731:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19731:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19787:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19921:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19795:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "19795:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19787:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19665:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19680:4:4",
														"type": ""
													}
												],
												"src": "19514:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20053:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20063:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20078:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20063:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20025:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20030:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20041:11:4",
														"type": ""
													}
												],
												"src": "19939:148:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20203:280:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20213:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20260:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "20227:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20227:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20217:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20275:96:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20359:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20364:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20282:76:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20282:89:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20275:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20419:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20426:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20415:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20415:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20433:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20438:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "20380:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20380:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20380:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20454:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20465:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20470:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20461:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20461:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20454:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20184:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20191:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20199:3:4",
														"type": ""
													}
												],
												"src": "20093:390:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20620:767:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20630:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20653:5:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "20647:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20647:12:4"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "20634:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20668:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "20708:9:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "20682:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20682:36:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20672:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20727:96:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20811:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20816:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20734:76:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20734:89:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20727:3:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20872:159:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "20925:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "20934:9:4"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "20949:4:4",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "20945:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "20945:9:4"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "20930:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20930:25:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "20918:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20918:38:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20918:38:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "20969:52:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "20980:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "20989:6:4"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "21011:6:4"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "21004:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "21004:14:4"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "20997:6:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "20997:22:4"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "20985:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20985:35:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20976:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20976:45:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "20969:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "20865:166:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20870:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "21047:334:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21092:53:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "21139:5:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "21107:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21107:38:4"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "21096:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21158:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21167:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "21162:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "21225:110:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "21254:3:4"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "21259:1:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "21250:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21250:11:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "21269:7:4"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "21263:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21263:14:4"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "21243:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21243:35:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "21243:35:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "21295:26:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "21310:7:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21319:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21306:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21306:15:4"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "21295:7:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21192:1:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21195:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "21189:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21189:13:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "21203:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "21205:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "21214:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21217:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21210:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21210:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21205:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "21185:3:4",
																					"statements": []
																				},
																				"src": "21181:154:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "21348:23:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "21359:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21364:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21355:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21355:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "21348:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "21040:341:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21045:1:4",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "20843:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20854:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20839:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20839:17:4"
															},
															"nodeType": "YulSwitch",
															"src": "20832:549:4"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20601:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20608:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20616:3:4",
														"type": ""
													}
												],
												"src": "20513:874:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21622:360:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21633:102:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21722:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21731:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21640:81:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "21640:95:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21633:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21745:102:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21834:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21843:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21752:81:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "21752:95:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21745:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21857:99:4",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21943:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21952:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21864:78:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "21864:92:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21857:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21966:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21973:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21966:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21585:3:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21591:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21599:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21607:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21618:3:4",
														"type": ""
													}
												],
												"src": "21393:589:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22094:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22116:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22124:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22112:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22128:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22105:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22105:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22105:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22184:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22192:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22180:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22180:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22197:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22173:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22173:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22173:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22086:6:4",
														"type": ""
													}
												],
												"src": "21988:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22365:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22375:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22441:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22446:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22382:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22382:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22375:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22547:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "22458:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22458:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22458:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22560:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22571:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22576:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22567:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22567:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22560:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22353:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22361:3:4",
														"type": ""
													}
												],
												"src": "22219:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22762:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22772:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22784:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22795:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22780:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22780:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22772:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22819:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22830:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22815:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22815:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22838:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22844:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22834:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22834:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22808:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22808:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22808:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22864:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22998:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22872:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "22872:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22864:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22742:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22757:4:4",
														"type": ""
													}
												],
												"src": "22591:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23044:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23061:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23064:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23054:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23054:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23054:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23158:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23161:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23151:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23151:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23151:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23182:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23185:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23175:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23175:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23175:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "23016:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23245:128:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23255:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23282:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23264:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23264:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23255:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23316:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23318:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23318:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23318:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23303:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23310:4:4",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23300:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23300:15:4"
															},
															"nodeType": "YulIf",
															"src": "23297:41:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23347:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23358:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23365:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "23354:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23354:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23347:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23231:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23241:3:4",
														"type": ""
													}
												],
												"src": "23202:171:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23485:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23507:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23515:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23503:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23503:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23519:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23496:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23496:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23496:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23477:6:4",
														"type": ""
													}
												],
												"src": "23379:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23713:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23723:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23789:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23794:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23730:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23730:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23723:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23895:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "23806:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23806:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23806:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23908:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23919:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23924:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23915:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "23915:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23908:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23701:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23709:3:4",
														"type": ""
													}
												],
												"src": "23567:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24110:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24120:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24132:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24143:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24128:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24128:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24120:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24167:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24178:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24163:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24163:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24186:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24192:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24182:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24182:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24156:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24156:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24156:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24212:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24346:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24220:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24220:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24212:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24090:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24105:4:4",
														"type": ""
													}
												],
												"src": "23939:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24422:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24433:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24449:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24443:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24443:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24433:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24405:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24415:6:4",
														"type": ""
													}
												],
												"src": "24364:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24563:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24580:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24585:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24573:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24573:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24573:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24601:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24620:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24625:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24616:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24616:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24601:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24535:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24540:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24551:11:4",
														"type": ""
													}
												],
												"src": "24468:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24732:283:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24742:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24788:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "24756:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24756:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "24746:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24803:77:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24868:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24873:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24810:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24810:70:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24803:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24928:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24935:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24924:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24942:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24947:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "24889:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24889:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24889:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24963:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24974:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25001:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "24979:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24979:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24970:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "24970:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24963:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24713:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24720:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24728:3:4",
														"type": ""
													}
												],
												"src": "24642:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25221:440:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25231:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25243:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25254:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25239:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25239:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25231:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25312:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25325:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25336:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25321:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25321:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25268:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25268:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25268:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25393:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25406:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25417:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25402:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25402:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25349:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25349:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25349:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25475:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25488:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25499:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25484:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25484:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25431:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25431:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25431:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25524:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25535:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25520:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25520:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25544:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25550:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25540:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25540:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25513:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25513:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25513:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25570:84:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "25640:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25649:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25578:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25578:76:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25570:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25169:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "25181:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25197:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25205:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25216:4:4",
														"type": ""
													}
												],
												"src": "25021:640:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25729:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25739:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "25754:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25748:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25748:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "25739:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25796:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "25770:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25770:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25770:32:4"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "25707:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25715:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25723:5:4",
														"type": ""
													}
												],
												"src": "25667:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25890:273:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25936:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "25938:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25938:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25938:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25911:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25920:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25907:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25907:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25932:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25903:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "25903:32:4"
															},
															"nodeType": "YulIf",
															"src": "25900:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "26029:127:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "26044:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26058:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "26048:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "26073:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "26118:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "26129:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "26114:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26114:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26138:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "26083:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26083:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "26073:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25860:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25871:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25883:6:4",
														"type": ""
													}
												],
												"src": "25814:349:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5(memPtr) {\n\n        mstore(add(memPtr, 0), \"you are not approved  to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF0C7B3AA EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xF259A29E EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DB JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xDC76668D EQ PUSH2 0x50D JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xB6B285D9 EQ PUSH2 0x48B JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x50CAA341 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x50CAA341 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x5503A0E8 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x37B JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E0 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x16BA10E0 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x270 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0xA89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0xD31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x246F JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x2550 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x1038 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C5 PUSH2 0x124E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x65F JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x68F JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6A5 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x701 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x733 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x747 PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x792 DUP3 DUP3 PUSH1 0x1 PUSH2 0x13E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x79E PUSH2 0x1511 JUMP JUMPDEST DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x281F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BB PUSH2 0x158F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D3 DUP3 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x848 JUMPI PUSH2 0x847 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x854 DUP5 PUSH2 0x1680 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x86A DUP2 DUP8 PUSH2 0x865 PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x895 JUMPI PUSH2 0x87F DUP7 PUSH2 0x87A PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x894 JUMPI PUSH2 0x893 PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x8A2 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x16F3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0xC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x97B DUP6 PUSH2 0x957 DUP9 DUP9 DUP8 PUSH2 0x16F9 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0xA01 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x9FF JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x9FE JUMPI DUP4 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 SUB PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH2 0xA80 DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0x174C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB13 SWAP1 PUSH2 0x293D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB26 DUP3 DUP3 PUSH2 0x1752 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB45 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBC1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xBEC SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC18 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC65 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC3A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC65 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC48 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0x1511 JUMP JUMPDEST DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH2 0xC84 SWAP2 SWAP1 PUSH2 0x281F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 DUP3 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0xD43 PUSH1 0x0 PUSH2 0x1770 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD7D SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDA9 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDF6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDCB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 PUSH2 0xE0D PUSH2 0x16A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEBA PUSH2 0x16A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF71 DUP5 DUP5 DUP5 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xFB2 JUMPI PUSH2 0xF9C DUP5 DUP5 DUP5 DUP5 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0xFB1 JUMPI PUSH2 0xFB0 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFC3 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0xFD8 JUMPI PUSH2 0xFD7 PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE2 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1030 JUMP JUMPDEST DUP1 PUSH2 0x100C DUP5 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1020 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1058 DUP3 PUSH2 0xC88 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1078 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1150 DUP2 PUSH2 0x1A45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x125B SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1287 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x12E4 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134A SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x135C DUP2 PUSH2 0x1770 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x136A PUSH2 0x158F JUMP JUMPDEST GT PUSH2 0x13D3 JUMPI PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0x13D2 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 SUB PUSH2 0x13AB JUMPI DUP3 PUSH2 0x13A4 SWAP1 PUSH2 0x2B0E JUMP JUMPDEST SWAP3 POP PUSH2 0x137C JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13ED DUP4 PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x142F JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1416 PUSH2 0x16A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x145B JUMPI PUSH2 0x1445 DUP2 PUSH2 0x1440 PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x145A JUMPI PUSH2 0x1459 PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1519 PUSH2 0x1A53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1537 PUSH2 0xD45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x159F PUSH2 0x158F JUMP JUMPDEST GT PUSH2 0x166A JUMPI PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1641 JUMPI PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB ISZERO PUSH2 0x163C JUMPI PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0x167B JUMPI PUSH2 0x163B PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0x167B JUMPI JUMPDEST PUSH2 0x167A PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x1710 DUP7 DUP7 DUP5 PUSH2 0x1A5B JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x176C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1A64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x185A PUSH2 0x16A7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18B8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B5 SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1910 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1972 SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x199E SWAP1 PUSH2 0x2642 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A30 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1A0E JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A50 DUP2 PUSH1 0x0 PUSH2 0x1AEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A6E DUP4 DUP4 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x1AE5 JUMPI PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x1AAF PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x1AC4 JUMPI PUSH2 0x1AC3 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x1A9C JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1AE2 JUMPI PUSH2 0x1AE1 PUSH1 0x0 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF5 DUP4 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1B08 DUP7 PUSH2 0x1680 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1B50 JUMPI PUSH2 0x1B24 DUP2 DUP5 PUSH2 0x1B1F PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x1B4F JUMPI PUSH2 0x1B39 DUP4 PUSH2 0x1B34 PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1B4E JUMPI PUSH2 0x1B4D PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1B5E DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x16F3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B69 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SUB PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C11 DUP4 PUSH2 0x1BCE DUP6 PUSH1 0x0 DUP9 PUSH2 0x16F9 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 OR OR PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND SUB PUSH2 0x1C97 JUMPI PUSH1 0x0 PUSH1 0x1 DUP8 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x1C95 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1C94 JUMPI DUP5 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP6 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D01 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH2 0x1D48 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x1D68 DUP4 PUSH2 0x1D59 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x1D62 DUP6 PUSH2 0x1E7F JUMP JUMPDEST OR PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1E20 JUMPI PUSH2 0x1E1F PUSH4 0x2E076300 PUSH1 0xE0 SHL PUSH2 0x13D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x1E2D JUMPI DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1E7A PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x174C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ED8 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF5 DUP2 PUSH2 0x1ECF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1F DUP5 DUP3 DUP6 ADD PUSH2 0x1EE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3D DUP2 PUSH2 0x1F28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC0 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x1FCA DUP2 DUP6 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x1FE3 DUP2 PUSH2 0x1FA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2008 DUP2 DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2023 DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP2 EQ PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2040 DUP2 PUSH2 0x201A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x205C JUMPI PUSH2 0x205B PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x206A DUP5 DUP3 DUP6 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209E DUP3 PUSH2 0x2073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20AE DUP2 PUSH2 0x2093 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x2093 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F5 DUP2 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2120 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2131 DUP6 DUP3 DUP7 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x217D DUP3 PUSH2 0x1FA4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x219C JUMPI PUSH2 0x219B PUSH2 0x2145 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AF PUSH2 0x1E8F JUMP JUMPDEST SWAP1 POP PUSH2 0x21BB DUP3 DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21DB JUMPI PUSH2 0x21DA PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x21E4 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2213 PUSH2 0x220E DUP5 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x222F JUMPI PUSH2 0x222E PUSH2 0x2140 JUMP JUMPDEST JUMPDEST PUSH2 0x223A DUP5 DUP3 DUP6 PUSH2 0x21F1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x213B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2267 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2200 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A4 JUMPI PUSH2 0x22A3 PUSH2 0x1E9E JUMP JUMPDEST JUMPDEST PUSH2 0x22B0 DUP5 DUP3 DUP6 ADD PUSH2 0x2242 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22FC JUMPI PUSH2 0x22FB PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x230A DUP7 DUP3 DUP8 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x231B DUP7 DUP3 DUP8 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x232C DUP7 DUP3 DUP8 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236B DUP2 PUSH2 0x2010 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237D DUP4 DUP4 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A1 DUP3 PUSH2 0x2336 JUMP JUMPDEST PUSH2 0x23AB DUP2 DUP6 PUSH2 0x2341 JUMP JUMPDEST SWAP4 POP PUSH2 0x23B6 DUP4 PUSH2 0x2352 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23E7 JUMPI DUP2 MLOAD PUSH2 0x23CE DUP9 DUP3 PUSH2 0x2371 JUMP JUMPDEST SWAP8 POP PUSH2 0x23D9 DUP4 PUSH2 0x2389 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23BA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x240E DUP2 DUP5 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x242C JUMPI PUSH2 0x242B PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x243A DUP5 DUP3 DUP6 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x244C DUP2 PUSH2 0x1F28 JUMP JUMPDEST DUP2 EQ PUSH2 0x2457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2469 DUP2 PUSH2 0x2443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH2 0x2485 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2494 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A5 DUP6 DUP3 DUP7 ADD PUSH2 0x245A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24CA JUMPI PUSH2 0x24C9 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x24D3 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F3 PUSH2 0x24EE DUP5 PUSH2 0x24AF JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x250F JUMPI PUSH2 0x250E PUSH2 0x2140 JUMP JUMPDEST JUMPDEST PUSH2 0x251A DUP5 DUP3 DUP6 PUSH2 0x21F1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2537 JUMPI PUSH2 0x2536 PUSH2 0x213B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2547 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2578 DUP8 DUP3 DUP9 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2589 DUP8 DUP3 DUP9 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x259A DUP8 DUP3 DUP9 ADD PUSH2 0x2031 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25BB JUMPI PUSH2 0x25BA PUSH2 0x1E9E JUMP JUMPDEST JUMPDEST PUSH2 0x25C7 DUP8 DUP3 DUP9 ADD PUSH2 0x2522 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F8 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2609 DUP6 DUP3 DUP7 ADD PUSH2 0x20E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x265A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x266D JUMPI PUSH2 0x266C PUSH2 0x2613 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x26D5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2698 JUMP JUMPDEST PUSH2 0x26DF DUP7 DUP4 PUSH2 0x2698 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271C PUSH2 0x2717 PUSH2 0x2712 DUP5 PUSH2 0x2010 JUMP JUMPDEST PUSH2 0x26F7 JUMP JUMPDEST PUSH2 0x2010 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2736 DUP4 PUSH2 0x2701 JUMP JUMPDEST PUSH2 0x274A PUSH2 0x2742 DUP3 PUSH2 0x2723 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26A5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x275F PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x276A DUP2 DUP5 DUP5 PUSH2 0x272D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x278E JUMPI PUSH2 0x2783 PUSH1 0x0 DUP3 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2770 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27D3 JUMPI PUSH2 0x27A4 DUP2 PUSH2 0x2673 JUMP JUMPDEST PUSH2 0x27AD DUP5 PUSH2 0x2688 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27D0 PUSH2 0x27C8 DUP6 PUSH2 0x2688 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x276F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27D8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280F DUP4 DUP4 PUSH2 0x27E5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2828 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2841 JUMPI PUSH2 0x2840 PUSH2 0x2145 JUMP JUMPDEST JUMPDEST PUSH2 0x284B DUP3 SLOAD PUSH2 0x2642 JUMP JUMPDEST PUSH2 0x2856 DUP3 DUP3 DUP6 PUSH2 0x2792 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2889 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2877 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2881 DUP6 DUP3 PUSH2 0x2803 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2897 DUP7 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28BF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x289A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28DC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28D8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27E5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F7420617070726F7665642020746F206D696E74000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2927 PUSH1 0x1D DUP4 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2932 DUP3 PUSH2 0x28F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2956 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x297D DUP2 DUP6 PUSH2 0x295D JUMP JUMPDEST SWAP4 POP PUSH2 0x298D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F7A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x29A6 DUP2 PUSH2 0x2642 JUMP JUMPDEST PUSH2 0x29B0 DUP2 DUP7 PUSH2 0x295D JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x29CB JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x29E0 JUMPI PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2A13 JUMP JUMPDEST PUSH2 0x29E9 DUP6 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A0B JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29EC JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A28 DUP3 DUP7 PUSH2 0x2968 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A34 DUP3 DUP6 PUSH2 0x2968 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A40 DUP3 DUP5 PUSH2 0x2999 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA9 PUSH1 0x26 DUP4 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB4 DUP3 PUSH2 0x2A4D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AD8 DUP2 PUSH2 0x2A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B19 DUP3 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2B2C JUMPI PUSH2 0x2B2B PUSH2 0x2ADF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6D PUSH1 0x20 DUP4 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B78 DUP3 PUSH2 0x2B37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9C DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCA DUP3 PUSH2 0x2BA3 JUMP JUMPDEST PUSH2 0x2BD4 DUP2 DUP6 PUSH2 0x2BAE JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x2BED DUP2 PUSH2 0x1FA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C0D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x2C1A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x2C27 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22B9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C39 DUP2 DUP5 PUSH2 0x2BBF JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C53 DUP2 PUSH2 0x1ECF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C6F JUMPI PUSH2 0x2C6E PUSH2 0x1E99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C7D DUP5 DUP3 DUP6 ADD PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE SWAP3 SWAP10 REVERT SWAP8 POP 0xE2 PUSH11 0x79E826D247E930489314E9 PUSH28 0xF299EF77854DB6896B5238D464736F6C634300081200330000000000 ",
							"sourceMap": "329:29409:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5455:362;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5830:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11360:227;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11222:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6895:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3530:323;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13576:3058;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7156:238;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16730:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7823:112;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2500:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6777:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7946:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4247:242;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5944:104:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11600:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7011:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16937:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6062:337;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7408:243;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11847:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7659:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5455:362:3;5540:4;5602:10;5587:25;;:11;:25;;;;:102;;;;5679:10;5664:25;;:11;:25;;;;5587:102;:179;;;;5756:10;5741:25;;:11;:25;;;;5587:179;5567:199;;5455:362;;;:::o;5830:100::-;5884:13;5917:5;5910:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:100;:::o;11360:227::-;11436:7;11461:16;11469:7;11461;:16::i;:::-;11456:73;;11479:50;11487:41;;;11479:7;:50::i;:::-;11456:73;11549:15;:24;11565:7;11549:24;;;;;;;;;;;:30;;;;;;;;;;;;11542:37;;11360:227;;;:::o;11222:124::-;11311:27;11320:2;11324:7;11333:4;11311:8;:27::i;:::-;11222:124;;:::o;6895:108::-;1094:13:0;:11;:13::i;:::-;6985:10:3::1;6973:9;:22;;;;;;:::i;:::-;;6895:108:::0;:::o;3530:323::-;3591:7;3819:15;:13;:15::i;:::-;3804:12;;3788:13;;:28;:46;3781:53;;3530:323;:::o;13576:3058::-;13718:27;13748;13767:7;13748:18;:27::i;:::-;13718:57;;1974:14;13919:4;13903:22;;:41;13880:66;;14004:4;13963:45;;13979:19;13963:45;;;13959:95;;14010:44;14018:35;;;14010:7;:44::i;:::-;13959:95;14068:27;14097:23;14124:35;14151:7;14124:26;:35::i;:::-;14067:92;;;;14259:68;14284:15;14301:4;14307:19;:17;:19::i;:::-;14259:24;:68::i;:::-;14254:189;;14347:43;14364:4;14370:19;:17;:19::i;:::-;14347:16;:43::i;:::-;14342:101;;14392:51;14400:42;;;14392:7;:51::i;:::-;14342:101;14254:189;14456:43;14478:4;14484:2;14488:7;14497:1;14456:21;:43::i;:::-;14592:15;14589:160;;;14732:1;14711:19;14704:30;14589:160;14877:18;:24;14896:4;14877:24;;;;;;;;;;;;;;;;14875:26;;;;;;;;;;;;14946:18;:22;14965:2;14946:22;;;;;;;;;;;;;;;;14944:24;;;;;;;;;;;15055:146;15092:2;15141:45;15156:4;15162:2;15166:19;15141:14;:45::i;:::-;1572:8;15113:73;15055:18;:146::i;:::-;15026:17;:26;15044:7;15026:26;;;;;;;;;;;:175;;;;15372:1;1572:8;15321:19;:47;:52;15317:627;;15394:19;15426:1;15416:7;:11;15394:33;;15583:1;15549:17;:30;15567:11;15549:30;;;;;;;;;;;;:35;15545:384;;15687:13;;15672:11;:28;15668:242;;15867:19;15834:17;:30;15852:11;15834:30;;;;;;;;;;;:52;;;;15668:242;15545:384;15375:569;15317:627;16057:16;1974:14;16092:2;16076:20;;:39;16057:58;;16456:7;16420:8;16386:4;16328:25;16273:1;16216;16193:299;16529:1;16517:8;:13;16513:58;;16532:39;16540:30;;;16532:7;:39::i;:::-;16513:58;16584:42;16605:4;16611:2;16615:7;16624:1;16584:20;:42::i;:::-;13707:2927;;;;13576:3058;;;:::o;7156:238::-;7310:4;7268:46;;:27;:39;7296:10;7268:39;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;7260:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;7356:22;7366:3;7371:6;7356:9;:22::i;:::-;7156:238;;:::o;16730:193::-;16876:39;16893:4;16899:2;16903:7;16876:39;;;;;;;;;;;;:16;:39::i;:::-;16730:193;;;:::o;7823:112::-;7872:13;7903:12;:24;7916:10;7903:24;;;;;;;;;;;;;;;7896:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7823:112;:::o;2500:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6777:105::-;1094:13:0;:11;:13::i;:::-;6863:11:3::1;6852:8;:22;;;;;;:::i;:::-;;6777:105:::0;:::o;7946:152::-;8018:7;8061:27;8080:7;8061:18;:27::i;:::-;8038:52;;7946:152;;;:::o;4247:242::-;4319:7;4360:1;4343:19;;:5;:19;;;4339:69;;4364:44;4372:35;;;4364:7;:44::i;:::-;4339:69;516:13;4426:18;:25;4445:5;4426:25;;;;;;;;;;;;;;;;:55;4419:62;;4247:242;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;5944:104:3:-;6000:13;6033:7;6026:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5944:104;:::o;11600:234::-;11747:8;11695:18;:39;11714:19;:17;:19::i;:::-;11695:39;;;;;;;;;;;;;;;:49;11735:8;11695:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;11807:8;11771:55;;11786:19;:17;:19::i;:::-;11771:55;;;11817:8;11771:55;;;;;;:::i;:::-;;;;;;;;11600:234;;:::o;7011:132::-;7122:4;7088:27;:32;7116:3;7088:32;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7011:132;:::o;16937:416::-;17112:31;17125:4;17131:2;17135:7;17112:12;:31::i;:::-;17176:1;17158:2;:14;;;:19;17154:192;;17197:56;17228:4;17234:2;17238:7;17247:5;17197:30;:56::i;:::-;17192:154;;17274:56;17282:47;;;17274:7;:56::i;:::-;17192:154;17154:192;16937:416;;;;:::o;6062:337::-;6135:13;6166:16;6174:7;6166;:16::i;:::-;6161:68;;6184:45;6192:36;;;6184:7;:45::i;:::-;6161:68;6242:21;6266:10;:8;:10::i;:::-;6242:34;;6319:1;6300:7;6294:21;:26;:97;;;;;;;;;;;;;;;;;6347:7;6356:18;6366:7;6356:9;:18::i;:::-;6375:9;6330:55;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6294:97;6287:104;;;6062:337;;;:::o;7408:243::-;7490:10;7474:26;;:14;7482:5;7474:7;:14::i;:::-;:26;;;7466:35;;;;;;7558:4;7512:26;:38;7539:10;7512:38;;;;;;;;;;;;;;;:45;7551:5;7512:45;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;7575:12;:24;7588:10;7575:24;;;;;;;;;;;;;;;7605:5;7575:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7629:12;7635:5;7629;:12::i;:::-;7408:243;:::o;11847:164::-;11944:4;11968:18;:25;11987:5;11968:25;;;;;;;;;;;;;;;:35;11994:8;11968:35;;;;;;;;;;;;;;;;;;;;;;;;;11961:42;;11847:164;;;;:::o;7659:144::-;7726:4;7750:26;:38;7777:10;7750:38;;;;;;;;;;;;;;;:45;7789:5;7750:45;;;;;;;;;;;;;;;;;;;;;7743:52;;7659:144;;;:::o;2471:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;12024:368:3:-;12089:11;12136:7;12117:15;:13;:15::i;:::-;:26;12113:272;;12174:13;;12164:7;:23;12160:214;;;12208:14;12241:60;12289:1;12258:17;:26;12276:7;12258:26;;;;;;;;;;;;12249:35;;;12248:42;12241:60;;12292:9;;;;:::i;:::-;;;12241:60;;;12357:1;1292:8;12329:6;:24;:29;12320:38;;12189:185;12160:214;12113:272;12024:368;;;:::o;29570:165::-;29671:13;29665:4;29658:27;29712:4;29706;29699:18;23069:474;23198:13;23214:16;23222:7;23214;:16::i;:::-;23198:32;;23247:13;:45;;;;;23287:5;23264:28;;:19;:17;:19::i;:::-;:28;;;;23247:45;23243:201;;;23312:44;23329:5;23336:19;:17;:19::i;:::-;23312:16;:44::i;:::-;23307:137;;23377:51;23385:42;;;23377:7;:51::i;:::-;23307:137;23243:201;23489:2;23456:15;:24;23472:7;23456:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;23527:7;23523:2;23507:28;;23516:5;23507:28;;;;;;;;;;;;23187:356;23069:474;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;3309:92:3:-;3365:7;3309:92;:::o;8831:1196::-;8898:14;8948:7;8929:15;:13;:15::i;:::-;:26;8925:1037;;8981:17;:26;8999:7;8981:26;;;;;;;;;;;;8972:35;;9117:1;9107:6;:11;9103:772;;9154:13;;9143:7;:24;9139:77;;9169:47;9177:38;;;9169:7;:47::i;:::-;9139:77;9253:607;9331:17;:28;9349:9;;;;;;;9331:28;;;;;;;;;;;;9322:37;;9419:1;9409:6;:11;9405:25;9422:8;9405:25;9485:1;1292:8;9457:6;:24;:29;9453:48;9488:13;9453:48;9793:47;9801:38;;;9793:7;:47::i;:::-;9253:607;;;9103:772;9934:1;1292:8;9906:6;:24;:29;9902:48;9937:13;9902:48;8925:1037;9972:47;9980:38;;;9972:7;:47::i;:::-;8831:1196;;;;:::o;13078:485::-;13180:27;13209:23;13250:38;13291:15;:24;13307:7;13291:24;;;;;;;;;;;13250:65;;13468:18;13445:41;;13525:19;13519:26;13500:45;;13430:126;13078:485;;;:::o;27551:105::-;27611:7;27638:10;27631:17;;27551:105;:::o;12406:659::-;12555:11;12720:16;12713:5;12709:28;12700:37;;12880:16;12869:9;12865:32;12852:45;;13030:15;13019:9;13016:30;13008:5;12997:9;12994:20;12991:56;12981:66;;12406:659;;;;;:::o;17367:159::-;;;;;:::o;27226:311::-;27361:7;27381:16;1696:3;27407:19;:41;;27381:68;;1696:3;27475:31;27486:4;27492:2;27496:9;27475:10;:31::i;:::-;27467:40;;:62;;27460:69;;;27226:311;;;;;:::o;10421:450::-;10501:14;10669:16;10662:5;10658:28;10649:37;;10846:5;10832:11;10807:23;10803:41;10800:52;10793:5;10790:63;10780:73;;10421:450;;;;:::o;17539:158::-;;;;;:::o;22826:112::-;22903:27;22913:2;22917:8;22903:27;;;;;;;;;;;;:9;:27::i;:::-;22826:112;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;17710:691:3:-;17873:4;17919:2;17894:45;;;17940:19;:17;:19::i;:::-;17961:4;17967:7;17976:5;17894:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17890:504;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18194:1;18177:6;:13;:18;18173:115;;18216:56;18224:47;;;18216:7;:56::i;:::-;18173:115;18360:6;18354:13;18345:6;18341:2;18337:15;18330:38;17890:504;18063:54;;;18053:64;;;:6;:64;;;;18046:71;;;17710:691;;;;;;:::o;6661:100::-;6712:13;6745:8;6738:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6661:100;:::o;27758:1745::-;27823:17;28257:4;28250;28244:11;28240:22;28349:1;28343:4;28336:15;28424:4;28421:1;28417:12;28410:19;;28506:1;28501:3;28494:14;28610:3;28849:5;28831:428;28857:1;28831:428;;;28897:1;28892:3;28888:11;28881:18;;29068:2;29062:4;29058:13;29054:2;29050:22;29045:3;29037:36;29162:2;29156:4;29152:13;29144:21;;29229:4;28831:428;29219:25;28831:428;28835:21;29298:3;29293;29289:13;29413:4;29408:3;29404:14;29397:21;;29478:6;29473:3;29466:19;27862:1634;;;27758:1745;;;:::o;23556:89::-;23616:21;23622:7;23631:5;23616;:21::i;:::-;23556:89;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;27065:147:3:-;27202:6;27065:147;;;;;:::o;22034:708::-;22165:19;22171:2;22175:8;22165:5;:19::i;:::-;22244:1;22226:2;:14;;;:19;22222:502;;22266:11;22280:13;;22266:27;;22312:13;22334:8;22328:3;:14;22312:30;;22361:242;22392:62;22431:1;22435:2;22439:7;;;;;;22448:5;22392:30;:62::i;:::-;22387:176;;22483:56;22491:47;;;22483:7;:56::i;:::-;22387:176;22598:3;22590:5;:11;22361:242;;22685:3;22668:13;;:20;22664:44;;22690:18;22705:1;22698:9;;22690:7;:18::i;:::-;22664:44;22247:477;;22222:502;22034:708;;;:::o;23658:2839::-;23738:27;23768;23787:7;23768:18;:27::i;:::-;23738:57;;23808:12;23839:19;23808:52;;23874:27;23903:23;23930:35;23957:7;23930:26;:35::i;:::-;23873:92;;;;23982:13;23978:325;;;24103:68;24128:15;24145:4;24151:19;:17;:19::i;:::-;24103:24;:68::i;:::-;24098:193;;24195:43;24212:4;24218:19;:17;:19::i;:::-;24195:16;:43::i;:::-;24190:101;;24240:51;24248:42;;;24240:7;:51::i;:::-;24190:101;24098:193;23978:325;24315:51;24337:4;24351:1;24355:7;24364:1;24315:21;:51::i;:::-;24459:15;24456:160;;;24599:1;24578:19;24571:30;24456:160;25026:1;781:3;24996:1;:26;;24995:32;24967:18;:24;24986:4;24967:24;;;;;;;;;;;;;;;;:60;;;;;;;;;;;25294:176;25331:4;25402:53;25417:4;25431:1;25435:19;25402:14;:53::i;:::-;1572:8;1292;25355:43;25354:101;25294:18;:176::i;:::-;25265:17;:26;25283:7;25265:26;;;;;;;;;;;:205;;;;25641:1;1572:8;25590:19;:47;:52;25586:627;;25663:19;25695:1;25685:7;:11;25663:33;;25852:1;25818:17;:30;25836:11;25818:30;;;;;;;;;;;;:35;25814:384;;25956:13;;25941:11;:28;25937:242;;26136:19;26103:17;:30;26121:11;26103:30;;;;;;;;;;;:52;;;;25937:242;25814:384;25644:569;25586:627;26268:7;26264:1;26241:35;;26250:4;26241:35;;;;;;;;;;;;26287:50;26308:4;26322:1;26326:7;26335:1;26287:20;:50::i;:::-;26464:12;;:14;;;;;;;;;;;;;23727:2770;;;;23658:2839;;:::o;18415:2305::-;18488:20;18511:13;;18488:36;;18551:1;18539:8;:13;18535:53;;18554:34;18562:25;;;18554:7;:34::i;:::-;18535:53;18601:61;18631:1;18635:2;18639:12;18653:8;18601:21;:61::i;:::-;19135:139;19172:2;19226:33;19249:1;19253:2;19257:1;19226:14;:33::i;:::-;19193:30;19214:8;19193:20;:30::i;:::-;:66;19135:18;:139::i;:::-;19101:17;:31;19119:12;19101:31;;;;;;;;;;;:173;;;;19561:1;654:2;19531:1;:26;;19530:32;19518:8;:45;19492:18;:22;19511:2;19492:22;;;;;;;;;;;;;;;;:71;;;;;;;;;;;19674:16;1974:14;19709:2;19693:20;;:39;19674:58;;19765:1;19753:8;:13;19749:54;;19768:35;19776:26;;;19768:7;:35::i;:::-;19749:54;19820:11;19849:8;19834:12;:23;19820:37;;19872:15;19890:12;19872:30;;19919:676;20338:7;20294:8;20249:1;20183:25;20120:1;20055;20024:358;20590:3;20577:9;;;;;;:16;19919:676;;20627:3;20611:13;:19;;;;18850:1792;;;20652:60;20681:1;20685:2;20689:12;20703:8;20652:20;:60::i;:::-;18477:2243;18415:2305;;:::o;10884:324::-;10954:14;11187:1;11177:8;11174:15;11148:24;11144:46;11134:56;;10884:324;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:117;5122:1;5119;5112:12;5136:180;5184:77;5181:1;5174:88;5281:4;5278:1;5271:15;5305:4;5302:1;5295:15;5322:281;5405:27;5427:4;5405:27;:::i;:::-;5397:6;5393:40;5535:6;5523:10;5520:22;5499:18;5487:10;5484:34;5481:62;5478:88;;;5546:18;;:::i;:::-;5478:88;5586:10;5582:2;5575:22;5365:238;5322:281;;:::o;5609:129::-;5643:6;5670:20;;:::i;:::-;5660:30;;5699:33;5727:4;5719:6;5699:33;:::i;:::-;5609:129;;;:::o;5744:308::-;5806:4;5896:18;5888:6;5885:30;5882:56;;;5918:18;;:::i;:::-;5882:56;5956:29;5978:6;5956:29;:::i;:::-;5948:37;;6040:4;6034;6030:15;6022:23;;5744:308;;;:::o;6058:146::-;6155:6;6150:3;6145;6132:30;6196:1;6187:6;6182:3;6178:16;6171:27;6058:146;;;:::o;6210:425::-;6288:5;6313:66;6329:49;6371:6;6329:49;:::i;:::-;6313:66;:::i;:::-;6304:75;;6402:6;6395:5;6388:21;6440:4;6433:5;6429:16;6478:3;6469:6;6464:3;6460:16;6457:25;6454:112;;;6485:79;;:::i;:::-;6454:112;6575:54;6622:6;6617:3;6612;6575:54;:::i;:::-;6294:341;6210:425;;;;;:::o;6655:340::-;6711:5;6760:3;6753:4;6745:6;6741:17;6737:27;6727:122;;6768:79;;:::i;:::-;6727:122;6885:6;6872:20;6910:79;6985:3;6977:6;6970:4;6962:6;6958:17;6910:79;:::i;:::-;6901:88;;6717:278;6655:340;;;;:::o;7001:509::-;7070:6;7119:2;7107:9;7098:7;7094:23;7090:32;7087:119;;;7125:79;;:::i;:::-;7087:119;7273:1;7262:9;7258:17;7245:31;7303:18;7295:6;7292:30;7289:117;;;7325:79;;:::i;:::-;7289:117;7430:63;7485:7;7476:6;7465:9;7461:22;7430:63;:::i;:::-;7420:73;;7216:287;7001:509;;;;:::o;7516:118::-;7603:24;7621:5;7603:24;:::i;:::-;7598:3;7591:37;7516:118;;:::o;7640:222::-;7733:4;7771:2;7760:9;7756:18;7748:26;;7784:71;7852:1;7841:9;7837:17;7828:6;7784:71;:::i;:::-;7640:222;;;;:::o;7868:619::-;7945:6;7953;7961;8010:2;7998:9;7989:7;7985:23;7981:32;7978:119;;;8016:79;;:::i;:::-;7978:119;8136:1;8161:53;8206:7;8197:6;8186:9;8182:22;8161:53;:::i;:::-;8151:63;;8107:117;8263:2;8289:53;8334:7;8325:6;8314:9;8310:22;8289:53;:::i;:::-;8279:63;;8234:118;8391:2;8417:53;8462:7;8453:6;8442:9;8438:22;8417:53;:::i;:::-;8407:63;;8362:118;7868:619;;;;;:::o;8493:114::-;8560:6;8594:5;8588:12;8578:22;;8493:114;;;:::o;8613:184::-;8712:11;8746:6;8741:3;8734:19;8786:4;8781:3;8777:14;8762:29;;8613:184;;;;:::o;8803:132::-;8870:4;8893:3;8885:11;;8923:4;8918:3;8914:14;8906:22;;8803:132;;;:::o;8941:108::-;9018:24;9036:5;9018:24;:::i;:::-;9013:3;9006:37;8941:108;;:::o;9055:179::-;9124:10;9145:46;9187:3;9179:6;9145:46;:::i;:::-;9223:4;9218:3;9214:14;9200:28;;9055:179;;;;:::o;9240:113::-;9310:4;9342;9337:3;9333:14;9325:22;;9240:113;;;:::o;9389:732::-;9508:3;9537:54;9585:5;9537:54;:::i;:::-;9607:86;9686:6;9681:3;9607:86;:::i;:::-;9600:93;;9717:56;9767:5;9717:56;:::i;:::-;9796:7;9827:1;9812:284;9837:6;9834:1;9831:13;9812:284;;;9913:6;9907:13;9940:63;9999:3;9984:13;9940:63;:::i;:::-;9933:70;;10026:60;10079:6;10026:60;:::i;:::-;10016:70;;9872:224;9859:1;9856;9852:9;9847:14;;9812:284;;;9816:14;10112:3;10105:10;;9513:608;;;9389:732;;;;:::o;10127:373::-;10270:4;10308:2;10297:9;10293:18;10285:26;;10357:9;10351:4;10347:20;10343:1;10332:9;10328:17;10321:47;10385:108;10488:4;10479:6;10385:108;:::i;:::-;10377:116;;10127:373;;;;:::o;10506:329::-;10565:6;10614:2;10602:9;10593:7;10589:23;10585:32;10582:119;;;10620:79;;:::i;:::-;10582:119;10740:1;10765:53;10810:7;10801:6;10790:9;10786:22;10765:53;:::i;:::-;10755:63;;10711:117;10506:329;;;;:::o;10841:116::-;10911:21;10926:5;10911:21;:::i;:::-;10904:5;10901:32;10891:60;;10947:1;10944;10937:12;10891:60;10841:116;:::o;10963:133::-;11006:5;11044:6;11031:20;11022:29;;11060:30;11084:5;11060:30;:::i;:::-;10963:133;;;;:::o;11102:468::-;11167:6;11175;11224:2;11212:9;11203:7;11199:23;11195:32;11192:119;;;11230:79;;:::i;:::-;11192:119;11350:1;11375:53;11420:7;11411:6;11400:9;11396:22;11375:53;:::i;:::-;11365:63;;11321:117;11477:2;11503:50;11545:7;11536:6;11525:9;11521:22;11503:50;:::i;:::-;11493:60;;11448:115;11102:468;;;;;:::o;11576:307::-;11637:4;11727:18;11719:6;11716:30;11713:56;;;11749:18;;:::i;:::-;11713:56;11787:29;11809:6;11787:29;:::i;:::-;11779:37;;11871:4;11865;11861:15;11853:23;;11576:307;;;:::o;11889:423::-;11966:5;11991:65;12007:48;12048:6;12007:48;:::i;:::-;11991:65;:::i;:::-;11982:74;;12079:6;12072:5;12065:21;12117:4;12110:5;12106:16;12155:3;12146:6;12141:3;12137:16;12134:25;12131:112;;;12162:79;;:::i;:::-;12131:112;12252:54;12299:6;12294:3;12289;12252:54;:::i;:::-;11972:340;11889:423;;;;;:::o;12331:338::-;12386:5;12435:3;12428:4;12420:6;12416:17;12412:27;12402:122;;12443:79;;:::i;:::-;12402:122;12560:6;12547:20;12585:78;12659:3;12651:6;12644:4;12636:6;12632:17;12585:78;:::i;:::-;12576:87;;12392:277;12331:338;;;;:::o;12675:943::-;12770:6;12778;12786;12794;12843:3;12831:9;12822:7;12818:23;12814:33;12811:120;;;12850:79;;:::i;:::-;12811:120;12970:1;12995:53;13040:7;13031:6;13020:9;13016:22;12995:53;:::i;:::-;12985:63;;12941:117;13097:2;13123:53;13168:7;13159:6;13148:9;13144:22;13123:53;:::i;:::-;13113:63;;13068:118;13225:2;13251:53;13296:7;13287:6;13276:9;13272:22;13251:53;:::i;:::-;13241:63;;13196:118;13381:2;13370:9;13366:18;13353:32;13412:18;13404:6;13401:30;13398:117;;;13434:79;;:::i;:::-;13398:117;13539:62;13593:7;13584:6;13573:9;13569:22;13539:62;:::i;:::-;13529:72;;13324:287;12675:943;;;;;;;:::o;13624:474::-;13692:6;13700;13749:2;13737:9;13728:7;13724:23;13720:32;13717:119;;;13755:79;;:::i;:::-;13717:119;13875:1;13900:53;13945:7;13936:6;13925:9;13921:22;13900:53;:::i;:::-;13890:63;;13846:117;14002:2;14028:53;14073:7;14064:6;14053:9;14049:22;14028:53;:::i;:::-;14018:63;;13973:118;13624:474;;;;;:::o;14104:180::-;14152:77;14149:1;14142:88;14249:4;14246:1;14239:15;14273:4;14270:1;14263:15;14290:320;14334:6;14371:1;14365:4;14361:12;14351:22;;14418:1;14412:4;14408:12;14439:18;14429:81;;14495:4;14487:6;14483:17;14473:27;;14429:81;14557:2;14549:6;14546:14;14526:18;14523:38;14520:84;;14576:18;;:::i;:::-;14520:84;14341:269;14290:320;;;:::o;14616:141::-;14665:4;14688:3;14680:11;;14711:3;14708:1;14701:14;14745:4;14742:1;14732:18;14724:26;;14616:141;;;:::o;14763:93::-;14800:6;14847:2;14842;14835:5;14831:14;14827:23;14817:33;;14763:93;;;:::o;14862:107::-;14906:8;14956:5;14950:4;14946:16;14925:37;;14862:107;;;;:::o;14975:393::-;15044:6;15094:1;15082:10;15078:18;15117:97;15147:66;15136:9;15117:97;:::i;:::-;15235:39;15265:8;15254:9;15235:39;:::i;:::-;15223:51;;15307:4;15303:9;15296:5;15292:21;15283:30;;15356:4;15346:8;15342:19;15335:5;15332:30;15322:40;;15051:317;;14975:393;;;;;:::o;15374:60::-;15402:3;15423:5;15416:12;;15374:60;;;:::o;15440:142::-;15490:9;15523:53;15541:34;15550:24;15568:5;15550:24;:::i;:::-;15541:34;:::i;:::-;15523:53;:::i;:::-;15510:66;;15440:142;;;:::o;15588:75::-;15631:3;15652:5;15645:12;;15588:75;;;:::o;15669:269::-;15779:39;15810:7;15779:39;:::i;:::-;15840:91;15889:41;15913:16;15889:41;:::i;:::-;15881:6;15874:4;15868:11;15840:91;:::i;:::-;15834:4;15827:105;15745:193;15669:269;;;:::o;15944:73::-;15989:3;15944:73;:::o;16023:189::-;16100:32;;:::i;:::-;16141:65;16199:6;16191;16185:4;16141:65;:::i;:::-;16076:136;16023:189;;:::o;16218:186::-;16278:120;16295:3;16288:5;16285:14;16278:120;;;16349:39;16386:1;16379:5;16349:39;:::i;:::-;16322:1;16315:5;16311:13;16302:22;;16278:120;;;16218:186;;:::o;16410:543::-;16511:2;16506:3;16503:11;16500:446;;;16545:38;16577:5;16545:38;:::i;:::-;16629:29;16647:10;16629:29;:::i;:::-;16619:8;16615:44;16812:2;16800:10;16797:18;16794:49;;;16833:8;16818:23;;16794:49;16856:80;16912:22;16930:3;16912:22;:::i;:::-;16902:8;16898:37;16885:11;16856:80;:::i;:::-;16515:431;;16500:446;16410:543;;;:::o;16959:117::-;17013:8;17063:5;17057:4;17053:16;17032:37;;16959:117;;;;:::o;17082:169::-;17126:6;17159:51;17207:1;17203:6;17195:5;17192:1;17188:13;17159:51;:::i;:::-;17155:56;17240:4;17234;17230:15;17220:25;;17133:118;17082:169;;;;:::o;17256:295::-;17332:4;17478:29;17503:3;17497:4;17478:29;:::i;:::-;17470:37;;17540:3;17537:1;17533:11;17527:4;17524:21;17516:29;;17256:295;;;;:::o;17556:1395::-;17673:37;17706:3;17673:37;:::i;:::-;17775:18;17767:6;17764:30;17761:56;;;17797:18;;:::i;:::-;17761:56;17841:38;17873:4;17867:11;17841:38;:::i;:::-;17926:67;17986:6;17978;17972:4;17926:67;:::i;:::-;18020:1;18044:4;18031:17;;18076:2;18068:6;18065:14;18093:1;18088:618;;;;18750:1;18767:6;18764:77;;;18816:9;18811:3;18807:19;18801:26;18792:35;;18764:77;18867:67;18927:6;18920:5;18867:67;:::i;:::-;18861:4;18854:81;18723:222;18058:887;;18088:618;18140:4;18136:9;18128:6;18124:22;18174:37;18206:4;18174:37;:::i;:::-;18233:1;18247:208;18261:7;18258:1;18255:14;18247:208;;;18340:9;18335:3;18331:19;18325:26;18317:6;18310:42;18391:1;18383:6;18379:14;18369:24;;18438:2;18427:9;18423:18;18410:31;;18284:4;18281:1;18277:12;18272:17;;18247:208;;;18483:6;18474:7;18471:19;18468:179;;;18541:9;18536:3;18532:19;18526:26;18584:48;18626:4;18618:6;18614:17;18603:9;18584:48;:::i;:::-;18576:6;18569:64;18491:156;18468:179;18693:1;18689;18681:6;18677:14;18673:22;18667:4;18660:36;18095:611;;;18058:887;;17648:1303;;;17556:1395;;:::o;18957:179::-;19097:31;19093:1;19085:6;19081:14;19074:55;18957:179;:::o;19142:366::-;19284:3;19305:67;19369:2;19364:3;19305:67;:::i;:::-;19298:74;;19381:93;19470:3;19381:93;:::i;:::-;19499:2;19494:3;19490:12;19483:19;;19142:366;;;:::o;19514:419::-;19680:4;19718:2;19707:9;19703:18;19695:26;;19767:9;19761:4;19757:20;19753:1;19742:9;19738:17;19731:47;19795:131;19921:4;19795:131;:::i;:::-;19787:139;;19514:419;;;:::o;19939:148::-;20041:11;20078:3;20063:18;;19939:148;;;;:::o;20093:390::-;20199:3;20227:39;20260:5;20227:39;:::i;:::-;20282:89;20364:6;20359:3;20282:89;:::i;:::-;20275:96;;20380:65;20438:6;20433:3;20426:4;20419:5;20415:16;20380:65;:::i;:::-;20470:6;20465:3;20461:16;20454:23;;20203:280;20093:390;;;;:::o;20513:874::-;20616:3;20653:5;20647:12;20682:36;20708:9;20682:36;:::i;:::-;20734:89;20816:6;20811:3;20734:89;:::i;:::-;20727:96;;20854:1;20843:9;20839:17;20870:1;20865:166;;;;21045:1;21040:341;;;;20832:549;;20865:166;20949:4;20945:9;20934;20930:25;20925:3;20918:38;21011:6;21004:14;20997:22;20989:6;20985:35;20980:3;20976:45;20969:52;;20865:166;;21040:341;21107:38;21139:5;21107:38;:::i;:::-;21167:1;21181:154;21195:6;21192:1;21189:13;21181:154;;;21269:7;21263:14;21259:1;21254:3;21250:11;21243:35;21319:1;21310:7;21306:15;21295:26;;21217:4;21214:1;21210:12;21205:17;;21181:154;;;21364:6;21359:3;21355:16;21348:23;;21047:334;;20832:549;;20620:767;;20513:874;;;;:::o;21393:589::-;21618:3;21640:95;21731:3;21722:6;21640:95;:::i;:::-;21633:102;;21752:95;21843:3;21834:6;21752:95;:::i;:::-;21745:102;;21864:92;21952:3;21943:6;21864:92;:::i;:::-;21857:99;;21973:3;21966:10;;21393:589;;;;;;:::o;21988:225::-;22128:34;22124:1;22116:6;22112:14;22105:58;22197:8;22192:2;22184:6;22180:15;22173:33;21988:225;:::o;22219:366::-;22361:3;22382:67;22446:2;22441:3;22382:67;:::i;:::-;22375:74;;22458:93;22547:3;22458:93;:::i;:::-;22576:2;22571:3;22567:12;22560:19;;22219:366;;;:::o;22591:419::-;22757:4;22795:2;22784:9;22780:18;22772:26;;22844:9;22838:4;22834:20;22830:1;22819:9;22815:17;22808:47;22872:131;22998:4;22872:131;:::i;:::-;22864:139;;22591:419;;;:::o;23016:180::-;23064:77;23061:1;23054:88;23161:4;23158:1;23151:15;23185:4;23182:1;23175:15;23202:171;23241:3;23264:24;23282:5;23264:24;:::i;:::-;23255:33;;23310:4;23303:5;23300:15;23297:41;;23318:18;;:::i;:::-;23297:41;23365:1;23358:5;23354:13;23347:20;;23202:171;;;:::o;23379:182::-;23519:34;23515:1;23507:6;23503:14;23496:58;23379:182;:::o;23567:366::-;23709:3;23730:67;23794:2;23789:3;23730:67;:::i;:::-;23723:74;;23806:93;23895:3;23806:93;:::i;:::-;23924:2;23919:3;23915:12;23908:19;;23567:366;;;:::o;23939:419::-;24105:4;24143:2;24132:9;24128:18;24120:26;;24192:9;24186:4;24182:20;24178:1;24167:9;24163:17;24156:47;24220:131;24346:4;24220:131;:::i;:::-;24212:139;;23939:419;;;:::o;24364:98::-;24415:6;24449:5;24443:12;24433:22;;24364:98;;;:::o;24468:168::-;24551:11;24585:6;24580:3;24573:19;24625:4;24620:3;24616:14;24601:29;;24468:168;;;;:::o;24642:373::-;24728:3;24756:38;24788:5;24756:38;:::i;:::-;24810:70;24873:6;24868:3;24810:70;:::i;:::-;24803:77;;24889:65;24947:6;24942:3;24935:4;24928:5;24924:16;24889:65;:::i;:::-;24979:29;25001:6;24979:29;:::i;:::-;24974:3;24970:39;24963:46;;24732:283;24642:373;;;;:::o;25021:640::-;25216:4;25254:3;25243:9;25239:19;25231:27;;25268:71;25336:1;25325:9;25321:17;25312:6;25268:71;:::i;:::-;25349:72;25417:2;25406:9;25402:18;25393:6;25349:72;:::i;:::-;25431;25499:2;25488:9;25484:18;25475:6;25431:72;:::i;:::-;25550:9;25544:4;25540:20;25535:2;25524:9;25520:18;25513:48;25578:76;25649:4;25640:6;25578:76;:::i;:::-;25570:84;;25021:640;;;;;;;:::o;25667:141::-;25723:5;25754:6;25748:13;25739:22;;25770:32;25796:5;25770:32;:::i;:::-;25667:141;;;;:::o;25814:349::-;25883:6;25932:2;25920:9;25911:7;25907:23;25903:32;25900:119;;;25938:79;;:::i;:::-;25900:119;26058:1;26083:63;26138:7;26129:6;26118:9;26114:22;26083:63;:::i;:::-;26073:73;;26029:127;25814:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2290400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2905",
								"baseURI_()": "infinite",
								"checkredeemednftid()": "infinite",
								"checkredemmedphysicalitem(uint256)": "2977",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2589",
								"ownerOf(uint256)": "infinite",
								"redeemPhysicalItem(uint256)": "infinite",
								"renounceOwnership()": "30443",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"setUriSuffix(string)": "infinite",
								"setapprovedcontractaddress(address)": "24945",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4710",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30854",
								"uriSuffix()": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedSlotAndAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "40",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 329,
									"end": 29738,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2500,
									"end": 2528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2500,
									"end": 2528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 3138,
									"end": 3296,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3213,
									"end": 3218,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3205,
									"end": 3210,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3205,
									"end": 3218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3205,
									"end": 3218,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3239,
									"end": 3246,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3229,
									"end": 3236,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3229,
									"end": 3246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3229,
									"end": 3246,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3273,
									"end": 3288,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 3273,
									"end": 3286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 3273,
									"end": 3286,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3273,
									"end": 3286,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3273,
									"end": 3288,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3273,
									"end": 3288,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3273,
									"end": 3288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3273,
									"end": 3288,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 3273,
									"end": 3288,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3257,
									"end": 3270,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3257,
									"end": 3288,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3257,
									"end": 3288,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3257,
									"end": 3288,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3257,
									"end": 3288,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3138,
									"end": 3296,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3309,
									"end": 3401,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 3309,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3365,
									"end": 3372,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3309,
									"end": 3401,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3309,
									"end": 3401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "90"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 4,
									"value": "90"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 4,
									"value": "91"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "93"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 4,
									"value": "93"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "107"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "108"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 4,
									"value": "108"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "106"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 4,
									"value": "107"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "113"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 4,
									"value": "113"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 4,
									"value": "106"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5267,
									"end": 5273,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5300,
									"end": 5302,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5294,
									"end": 5303,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5284,
									"end": 5303,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5234,
									"end": 5309,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5234,
									"end": 5309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5424,
									"end": 5425,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5414,
									"end": 5426,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 5438,
									"end": 5555,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5547,
									"end": 5548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5544,
									"end": 5545,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5537,
									"end": 5549,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 5561,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5670,
									"end": 5671,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5667,
									"end": 5668,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5660,
									"end": 5672,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 5684,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5791,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5848,
									"end": 5854,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5899,
									"end": 5901,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 5895,
									"end": 5902,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 5890,
									"end": 5892,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 5883,
									"end": 5888,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5879,
									"end": 5893,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5875,
									"end": 5903,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5865,
									"end": 5903,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5807,
									"end": 5909,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5807,
									"end": 5909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "123"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 5998,
									"end": 6025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "tag",
									"source": 4,
									"value": "123"
								},
								{
									"begin": 5998,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5990,
									"end": 5996,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5986,
									"end": 6026,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6128,
									"end": 6134,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6116,
									"end": 6126,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6113,
									"end": 6135,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6092,
									"end": 6110,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6080,
									"end": 6090,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6077,
									"end": 6111,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6136,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "124"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 6139,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "tag",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6139,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "tag",
									"source": 4,
									"value": "124"
								},
								{
									"begin": 6071,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6179,
									"end": 6189,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6175,
									"end": 6177,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6168,
									"end": 6190,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5958,
									"end": 6196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5915,
									"end": 6196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5915,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6236,
									"end": 6242,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6263,
									"end": 6283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "tag",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6253,
									"end": 6283,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "128"
								},
								{
									"begin": 6320,
									"end": 6324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6312,
									"end": 6318,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6292,
									"end": 6325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "tag",
									"source": 4,
									"value": "128"
								},
								{
									"begin": 6292,
									"end": 6325,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6202,
									"end": 6331,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6202,
									"end": 6331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6399,
									"end": 6403,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6489,
									"end": 6507,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6478,
									"end": 6508,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 6511,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "tag",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 6511,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "tag",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 6475,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 6549,
									"end": 6578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "tag",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 6549,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6541,
									"end": 6578,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6633,
									"end": 6637,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6627,
									"end": 6631,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6623,
									"end": 6638,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6615,
									"end": 6638,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6337,
									"end": 6645,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6337,
									"end": 6645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6732,
									"end": 6733,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "tag",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6756,
									"end": 6762,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6753,
									"end": 6754,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6750,
									"end": 6763,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "136"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6841,
									"end": 6842,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6836,
									"end": 6839,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6832,
									"end": 6843,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6826,
									"end": 6844,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6822,
									"end": 6823,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6817,
									"end": 6820,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6813,
									"end": 6824,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6806,
									"end": 6845,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6778,
									"end": 6780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6775,
									"end": 6776,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6771,
									"end": 6781,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6766,
									"end": 6781,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6766,
									"end": 6781,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "tag",
									"source": 4,
									"value": "136"
								},
								{
									"begin": 6742,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6889,
									"end": 6890,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6880,
									"end": 6886,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6875,
									"end": 6878,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6871,
									"end": 6887,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6864,
									"end": 6891,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6713,
									"end": 6897,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6651,
									"end": 6897,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6651,
									"end": 6897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6992,
									"end": 6997,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7075,
									"end": 7081,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7033,
									"end": 7082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "tag",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7033,
									"end": 7082,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 7017,
									"end": 7083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "tag",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7017,
									"end": 7083,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7008,
									"end": 7083,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7008,
									"end": 7083,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7106,
									"end": 7112,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7099,
									"end": 7104,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7113,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7144,
									"end": 7148,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7137,
									"end": 7142,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7133,
									"end": 7149,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7182,
									"end": 7185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7173,
									"end": 7179,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7168,
									"end": 7171,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7164,
									"end": 7180,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7161,
									"end": 7186,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "140"
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7189,
									"end": 7268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "tag",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 7189,
									"end": 7268,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "tag",
									"source": 4,
									"value": "140"
								},
								{
									"begin": 7158,
									"end": 7270,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "142"
								},
								{
									"begin": 7324,
									"end": 7330,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7319,
									"end": 7322,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7314,
									"end": 7317,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 7279,
									"end": 7331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "142"
								},
								{
									"begin": 7279,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6998,
									"end": 7337,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6903,
									"end": 7337,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6903,
									"end": 7337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7429,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7473,
									"end": 7476,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7466,
									"end": 7470,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7458,
									"end": 7464,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7454,
									"end": 7471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7450,
									"end": 7477,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "144"
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "145"
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 7481,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "tag",
									"source": 4,
									"value": "145"
								},
								{
									"begin": 7481,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "tag",
									"source": 4,
									"value": "144"
								},
								{
									"begin": 7440,
									"end": 7562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7591,
									"end": 7597,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7585,
									"end": 7598,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "146"
								},
								{
									"begin": 7702,
									"end": 7705,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7694,
									"end": 7700,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7687,
									"end": 7691,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7679,
									"end": 7685,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7675,
									"end": 7692,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 7616,
									"end": 7706,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "tag",
									"source": 4,
									"value": "146"
								},
								{
									"begin": 7616,
									"end": 7706,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7607,
									"end": 7706,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7607,
									"end": 7706,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7430,
									"end": 7712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7357,
									"end": 7712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7357,
									"end": 7712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7817,
									"end": 7823,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7825,
									"end": 7831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7874,
									"end": 7876,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7862,
									"end": 7871,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7853,
									"end": 7860,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7849,
									"end": 7872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7845,
									"end": 7877,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "148"
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "149"
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7880,
									"end": 7959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "tag",
									"source": 4,
									"value": "149"
								},
								{
									"begin": 7880,
									"end": 7959,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "tag",
									"source": 4,
									"value": "148"
								},
								{
									"begin": 7842,
									"end": 7961,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8021,
									"end": 8022,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8010,
									"end": 8019,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8006,
									"end": 8023,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8000,
									"end": 8024,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8051,
									"end": 8069,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8043,
									"end": 8049,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8040,
									"end": 8070,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "150"
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "151"
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 8073,
									"end": 8152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "tag",
									"source": 4,
									"value": "151"
								},
								{
									"begin": 8073,
									"end": 8152,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "tag",
									"source": 4,
									"value": "150"
								},
								{
									"begin": 8037,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "152"
								},
								{
									"begin": 8244,
									"end": 8251,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 8235,
									"end": 8241,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8224,
									"end": 8233,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 8220,
									"end": 8242,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 8178,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "tag",
									"source": 4,
									"value": "152"
								},
								{
									"begin": 8178,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8168,
									"end": 8252,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 8168,
									"end": 8252,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7971,
									"end": 8262,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8322,
									"end": 8324,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 8311,
									"end": 8320,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8307,
									"end": 8325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8301,
									"end": 8326,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8353,
									"end": 8371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8345,
									"end": 8351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8342,
									"end": 8372,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "153"
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "154"
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 8375,
									"end": 8454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "tag",
									"source": 4,
									"value": "154"
								},
								{
									"begin": 8375,
									"end": 8454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "tag",
									"source": 4,
									"value": "153"
								},
								{
									"begin": 8339,
									"end": 8456,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "155"
								},
								{
									"begin": 8546,
									"end": 8553,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 8537,
									"end": 8543,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8526,
									"end": 8535,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 8480,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "tag",
									"source": 4,
									"value": "155"
								},
								{
									"begin": 8480,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8470,
									"end": 8554,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8470,
									"end": 8554,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8272,
									"end": 8564,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7718,
									"end": 8571,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7718,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 29738,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220559299fd9750e26a79e826d247e930489314e97bf299ef77854db6896b5238d464736f6c63430008120033",
									".code": [
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "F0C7B3AA"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "F259A29E"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "DC76668D"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "B6B285D9"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "50CAA341"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "50CAA341"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "5503A0E8"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "55F804B3"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "16BA10E0"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 329,
											"end": 29738,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5455,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5455,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5455,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5830,
											"end": 5930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5830,
											"end": 5930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 11360,
											"end": 11587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 11360,
											"end": 11587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 11360,
											"end": 11587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 11222,
											"end": 11346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 11222,
											"end": 11346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6895,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6895,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3530,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3530,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 13576,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 13576,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 7156,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7156,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 16730,
											"end": 16923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 16730,
											"end": 16923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 7823,
											"end": 7935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7823,
											"end": 7935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2500,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2500,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6777,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6777,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7946,
											"end": 8098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7946,
											"end": 8098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 7946,
											"end": 8098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4247,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4247,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4247,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5944,
											"end": 6048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5944,
											"end": 6048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 11600,
											"end": 11834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 11600,
											"end": 11834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7011,
											"end": 7143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7011,
											"end": 7143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 16937,
											"end": 17353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 16937,
											"end": 17353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6062,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6062,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6062,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7408,
											"end": 7651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7408,
											"end": 7651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 11847,
											"end": 12011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 11847,
											"end": 12011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 11847,
											"end": 12011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7659,
											"end": 7803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 7659,
											"end": 7803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 7659,
											"end": 7803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2471,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2471,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5612,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5689,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5587,
											"end": 5689,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5689,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD"
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5689,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5587,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5587,
											"end": 5766,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5766,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F"
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5766,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5766,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5587,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5884,
											"end": 5897,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5917,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5910,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5910,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11436,
											"end": 11443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11461,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 11469,
											"end": 11476,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 11461,
											"end": 11477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11477,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 11461,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11456,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 11456,
											"end": 11529,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11479,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 11487,
											"end": 11528,
											"name": "PUSH",
											"source": 3,
											"value": "CF4700E4"
										},
										{
											"begin": 11487,
											"end": 11528,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 11487,
											"end": 11528,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 11479,
											"end": 11486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 11479,
											"end": 11529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11479,
											"end": 11529,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 11479,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11456,
											"end": 11529,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 11456,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11564,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11565,
											"end": 11572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11549,
											"end": 11573,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11542,
											"end": 11579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11542,
											"end": 11579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11311,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 11320,
											"end": 11322,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11324,
											"end": 11331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11337,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11311,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 11311,
											"end": 11338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11311,
											"end": 11338,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 11311,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6973,
											"end": 6982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6973,
											"end": 6995,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6973,
											"end": 6995,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6895,
											"end": 7003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3591,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3819,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3819,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3819,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3801,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3788,
											"end": 3801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3816,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13718,
											"end": 13745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13748,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 13767,
											"end": 13774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13748,
											"end": 13766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 13748,
											"end": 13775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13748,
											"end": 13775,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 13748,
											"end": 13775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13718,
											"end": 13775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13718,
											"end": 13775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1988,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13919,
											"end": 13923,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13903,
											"end": 13925,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13903,
											"end": 13925,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13903,
											"end": 13944,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13880,
											"end": 13946,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 13880,
											"end": 13946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14004,
											"end": 14008,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13963,
											"end": 14008,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13963,
											"end": 14008,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13963,
											"end": 14008,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13963,
											"end": 14008,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13963,
											"end": 14008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13959,
											"end": 14054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 13959,
											"end": 14054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14010,
											"end": 14054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 14018,
											"end": 14053,
											"name": "PUSH",
											"source": 3,
											"value": "A1148100"
										},
										{
											"begin": 14018,
											"end": 14053,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14018,
											"end": 14053,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14010,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 14010,
											"end": 14054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14010,
											"end": 14054,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 14010,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13959,
											"end": 14054,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 13959,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14068,
											"end": 14095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14097,
											"end": 14120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14124,
											"end": 14159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 14151,
											"end": 14158,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14124,
											"end": 14150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 14124,
											"end": 14159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14124,
											"end": 14159,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 14124,
											"end": 14159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14067,
											"end": 14159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14067,
											"end": 14159,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14067,
											"end": 14159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14067,
											"end": 14159,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14259,
											"end": 14327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 14284,
											"end": 14299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14301,
											"end": 14305,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14307,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 14307,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 14307,
											"end": 14326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14307,
											"end": 14326,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 14307,
											"end": 14326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14259,
											"end": 14283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 14259,
											"end": 14327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14259,
											"end": 14327,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 14259,
											"end": 14327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14254,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 14254,
											"end": 14443,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14347,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 14364,
											"end": 14368,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14370,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 14370,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 14370,
											"end": 14389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14370,
											"end": 14389,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 14370,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14347,
											"end": 14363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 14347,
											"end": 14390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14347,
											"end": 14390,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 14347,
											"end": 14390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14342,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 14342,
											"end": 14443,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14392,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 14400,
											"end": 14442,
											"name": "PUSH",
											"source": 3,
											"value": "59C896BE"
										},
										{
											"begin": 14400,
											"end": 14442,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14400,
											"end": 14442,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14392,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 14392,
											"end": 14443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14392,
											"end": 14443,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 14392,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14342,
											"end": 14443,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 14342,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14254,
											"end": 14443,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 14254,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14456,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 14478,
											"end": 14482,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14484,
											"end": 14486,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14488,
											"end": 14495,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14497,
											"end": 14498,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14456,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 14456,
											"end": 14499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14456,
											"end": 14499,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 14456,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14592,
											"end": 14607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14589,
											"end": 14749,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14589,
											"end": 14749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 14589,
											"end": 14749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14732,
											"end": 14733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14704,
											"end": 14734,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14589,
											"end": 14749,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 14589,
											"end": 14749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14895,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14896,
											"end": 14900,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14877,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14964,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14965,
											"end": 14967,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14944,
											"end": 14968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15055,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 15092,
											"end": 15094,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15141,
											"end": 15186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 15156,
											"end": 15160,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 15162,
											"end": 15164,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 15166,
											"end": 15185,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 15141,
											"end": 15155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 15141,
											"end": 15186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15141,
											"end": 15186,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 15141,
											"end": 15186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15113,
											"end": 15186,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 15055,
											"end": 15201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15055,
											"end": 15201,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 15055,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15043,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15044,
											"end": 15051,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15026,
											"end": 15052,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15201,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15026,
											"end": 15201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15372,
											"end": 15373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15321,
											"end": 15340,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15321,
											"end": 15368,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15321,
											"end": 15373,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15317,
											"end": 15944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 15317,
											"end": 15944,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15394,
											"end": 15413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15426,
											"end": 15427,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15416,
											"end": 15423,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15416,
											"end": 15427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15394,
											"end": 15427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15394,
											"end": 15427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15583,
											"end": 15584,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15549,
											"end": 15566,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15567,
											"end": 15578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15584,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15545,
											"end": 15929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 15545,
											"end": 15929,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15687,
											"end": 15700,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15687,
											"end": 15700,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15672,
											"end": 15683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15672,
											"end": 15700,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15668,
											"end": 15910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 15668,
											"end": 15910,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15867,
											"end": 15886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15851,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15852,
											"end": 15863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15834,
											"end": 15864,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15886,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15834,
											"end": 15886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15668,
											"end": 15910,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 15668,
											"end": 15910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15545,
											"end": 15929,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 15545,
											"end": 15929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15375,
											"end": 15944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15317,
											"end": 15944,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 15317,
											"end": 15944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16057,
											"end": 16073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1988,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16092,
											"end": 16094,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 16076,
											"end": 16096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16076,
											"end": 16096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16076,
											"end": 16115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16057,
											"end": 16115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16057,
											"end": 16115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16456,
											"end": 16463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16420,
											"end": 16428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 16390,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16353,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16273,
											"end": 16274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16216,
											"end": 16217,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16193,
											"end": 16492,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 16529,
											"end": 16530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16517,
											"end": 16525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16517,
											"end": 16530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16513,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 16513,
											"end": 16571,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 16540,
											"end": 16570,
											"name": "PUSH",
											"source": 3,
											"value": "EA553B34"
										},
										{
											"begin": 16540,
											"end": 16570,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 16540,
											"end": 16570,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 16532,
											"end": 16571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16571,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 16532,
											"end": 16571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16513,
											"end": 16571,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 16513,
											"end": 16571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16584,
											"end": 16626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 16605,
											"end": 16609,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 16611,
											"end": 16613,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 16615,
											"end": 16622,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 16624,
											"end": 16625,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16584,
											"end": 16604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 16584,
											"end": 16626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16584,
											"end": 16626,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 16584,
											"end": 16626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13707,
											"end": 16634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13707,
											"end": 16634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13707,
											"end": 16634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13707,
											"end": 16634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13576,
											"end": 16634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7310,
											"end": 7314,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7268,
											"end": 7314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7295,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7306,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7268,
											"end": 7307,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7314,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7260,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 7260,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7366,
											"end": 7369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7377,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 7356,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7356,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 16893,
											"end": 16897,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16899,
											"end": 16901,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16903,
											"end": 16910,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 16876,
											"end": 16915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 16876,
											"end": 16915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7903,
											"end": 7915,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2500,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2500,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6852,
											"end": 6874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8061,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8080,
											"end": 8087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 8061,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8061,
											"end": 8088,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8061,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4361,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4348,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4339,
											"end": 4408,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4372,
											"end": 4407,
											"name": "PUSH",
											"source": 3,
											"value": "8F4EB604"
										},
										{
											"begin": 4372,
											"end": 4407,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4372,
											"end": 4407,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4364,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4408,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4364,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4408,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4339,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4451,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4481,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6000,
											"end": 6013,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6033,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6026,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6026,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 6048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11747,
											"end": 11755,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11713,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 11714,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 11714,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11714,
											"end": 11733,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 11714,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11695,
											"end": 11734,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11743,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11695,
											"end": 11755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11807,
											"end": 11815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11786,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 11786,
											"end": 11803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 11786,
											"end": 11805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11786,
											"end": 11805,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 11786,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11817,
											"end": 11825,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 11771,
											"end": 11826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11771,
											"end": 11826,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7126,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7088,
											"end": 7115,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7116,
											"end": 7119,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17112,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 17125,
											"end": 17129,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17131,
											"end": 17133,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17135,
											"end": 17142,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17112,
											"end": 17124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 17112,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17112,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 17112,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17176,
											"end": 17177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17158,
											"end": 17160,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17158,
											"end": 17172,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17158,
											"end": 17172,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17158,
											"end": 17172,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17158,
											"end": 17177,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17154,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 17154,
											"end": 17346,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17197,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 17228,
											"end": 17232,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17234,
											"end": 17236,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17238,
											"end": 17245,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17247,
											"end": 17252,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17197,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 17197,
											"end": 17253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17197,
											"end": 17253,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 17197,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17192,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 17192,
											"end": 17346,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17274,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 17282,
											"end": 17329,
											"name": "PUSH",
											"source": 3,
											"value": "D1A57ED6"
										},
										{
											"begin": 17282,
											"end": 17329,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17282,
											"end": 17329,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17274,
											"end": 17281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 17274,
											"end": 17330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17274,
											"end": 17330,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 17274,
											"end": 17330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17192,
											"end": 17346,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 17192,
											"end": 17346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17154,
											"end": 17346,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 17154,
											"end": 17346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16937,
											"end": 17353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6135,
											"end": 6148,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6166,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6174,
											"end": 6181,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6166,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6166,
											"end": 6182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6166,
											"end": 6182,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6166,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6161,
											"end": 6229,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 6192,
											"end": 6228,
											"name": "PUSH",
											"source": 3,
											"value": "A14C4B50"
										},
										{
											"begin": 6192,
											"end": 6228,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6192,
											"end": 6228,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6184,
											"end": 6229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6229,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 6184,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6229,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6161,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 6266,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 6266,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6276,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 6266,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6242,
											"end": 6276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6315,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6320,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6366,
											"end": 6373,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6356,
											"end": 6374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6375,
											"end": 6384,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6330,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 6294,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6391,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6391,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6062,
											"end": 6399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7490,
											"end": 7500,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7474,
											"end": 7500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7482,
											"end": 7487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7474,
											"end": 7488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7488,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7474,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7474,
											"end": 7500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7500,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7562,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7512,
											"end": 7538,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7549,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7550,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7556,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7512,
											"end": 7562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7587,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7598,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7599,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7611,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7629,
											"end": 7641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7641,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 7629,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 11948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11968,
											"end": 11986,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11987,
											"end": 11992,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11968,
											"end": 11993,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11994,
											"end": 12002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11968,
											"end": 12003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 12011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7776,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7777,
											"end": 7787,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7788,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7794,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7750,
											"end": 7795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7743,
											"end": 7795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7743,
											"end": 7795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2471,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2471,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12024,
											"end": 12392,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 12024,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12117,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12117,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 12117,
											"end": 12132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12117,
											"end": 12132,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12117,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12117,
											"end": 12143,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12113,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 12113,
											"end": 12385,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12174,
											"end": 12187,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12174,
											"end": 12187,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12164,
											"end": 12171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12164,
											"end": 12187,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12160,
											"end": 12374,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12160,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 12160,
											"end": 12374,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12208,
											"end": 12222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12258,
											"end": 12275,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12276,
											"end": 12283,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12284,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12248,
											"end": 12290,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 12292,
											"end": 12301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 12241,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12357,
											"end": 12358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12329,
											"end": 12335,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12329,
											"end": 12353,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12329,
											"end": 12358,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12320,
											"end": 12358,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12320,
											"end": 12358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12160,
											"end": 12374,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 12160,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12113,
											"end": 12385,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 12113,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12024,
											"end": 12392,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12024,
											"end": 12392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12024,
											"end": 12392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12024,
											"end": 12392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 29570,
											"end": 29735,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 29570,
											"end": 29735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29671,
											"end": 29684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 29665,
											"end": 29669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29658,
											"end": 29685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 29712,
											"end": 29716,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 29706,
											"end": 29710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29699,
											"end": 29717,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 23069,
											"end": 23543,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 23069,
											"end": 23543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23198,
											"end": 23211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23214,
											"end": 23230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 23222,
											"end": 23229,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23214,
											"end": 23221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 23214,
											"end": 23230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23214,
											"end": 23230,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 23214,
											"end": 23230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23198,
											"end": 23230,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23198,
											"end": 23230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23247,
											"end": 23260,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23247,
											"end": 23292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23247,
											"end": 23292,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23247,
											"end": 23292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 23247,
											"end": 23292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23247,
											"end": 23292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23287,
											"end": 23292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23264,
											"end": 23292,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23264,
											"end": 23292,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23264,
											"end": 23283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 23264,
											"end": 23281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 23264,
											"end": 23283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23264,
											"end": 23283,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 23264,
											"end": 23283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23264,
											"end": 23292,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23264,
											"end": 23292,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23264,
											"end": 23292,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 23264,
											"end": 23292,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23247,
											"end": 23292,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 23247,
											"end": 23292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23243,
											"end": 23444,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23243,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 23243,
											"end": 23444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23312,
											"end": 23356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 23329,
											"end": 23334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23336,
											"end": 23355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 23336,
											"end": 23353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 23336,
											"end": 23355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23336,
											"end": 23355,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 23336,
											"end": 23355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23312,
											"end": 23328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 23312,
											"end": 23356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23312,
											"end": 23356,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 23312,
											"end": 23356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23307,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 23307,
											"end": 23444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23377,
											"end": 23428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 23385,
											"end": 23427,
											"name": "PUSH",
											"source": 3,
											"value": "CFB3B942"
										},
										{
											"begin": 23385,
											"end": 23427,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 23385,
											"end": 23427,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 23377,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 23377,
											"end": 23428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23377,
											"end": 23428,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 23377,
											"end": 23428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23307,
											"end": 23444,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 23307,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23243,
											"end": 23444,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 23243,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23489,
											"end": 23491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23471,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23472,
											"end": 23479,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23456,
											"end": 23480,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23456,
											"end": 23486,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23456,
											"end": 23491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23527,
											"end": 23534,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23523,
											"end": 23525,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23516,
											"end": 23521,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23535,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 23187,
											"end": 23543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23069,
											"end": 23543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23069,
											"end": 23543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23069,
											"end": 23543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23069,
											"end": 23543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3309,
											"end": 3401,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3309,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 10027,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 8831,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8898,
											"end": 8912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 8955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8929,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 8929,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8929,
											"end": 8944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8929,
											"end": 8944,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 8929,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8925,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 8925,
											"end": 9962,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 8998,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8981,
											"end": 9007,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8972,
											"end": 9007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8972,
											"end": 9007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9107,
											"end": 9113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9107,
											"end": 9118,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9103,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 9103,
											"end": 9875,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9167,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9154,
											"end": 9167,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9167,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9139,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 9139,
											"end": 9216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9169,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 9177,
											"end": 9215,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 9177,
											"end": 9215,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9177,
											"end": 9215,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9169,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9169,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9169,
											"end": 9216,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 9169,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9139,
											"end": 9216,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 9139,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9253,
											"end": 9860,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 9253,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9348,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9359,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9322,
											"end": 9359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9322,
											"end": 9359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9419,
											"end": 9420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9409,
											"end": 9415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9409,
											"end": 9420,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9422,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 9405,
											"end": 9430,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9457,
											"end": 9463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9457,
											"end": 9481,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9457,
											"end": 9486,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9453,
											"end": 9501,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9488,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 9453,
											"end": 9501,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9793,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 9801,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 9801,
											"end": 9839,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9801,
											"end": 9839,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9793,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9793,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9793,
											"end": 9840,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 9793,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9253,
											"end": 9860,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 9253,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9253,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 9253,
											"end": 9860,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9103,
											"end": 9875,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 9103,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9934,
											"end": 9935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9906,
											"end": 9912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9906,
											"end": 9930,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9906,
											"end": 9935,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9902,
											"end": 9950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9937,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 9902,
											"end": 9950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8925,
											"end": 9962,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 8925,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9972,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 9980,
											"end": 10018,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 9980,
											"end": 10018,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9980,
											"end": 10018,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9972,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9972,
											"end": 10019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9972,
											"end": 10019,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 9972,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 10027,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 8831,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 10027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 10027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 10027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 10027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13078,
											"end": 13563,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 13078,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13180,
											"end": 13207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13209,
											"end": 13232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13250,
											"end": 13288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13291,
											"end": 13306,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13314,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13291,
											"end": 13315,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 13250,
											"end": 13315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13250,
											"end": 13315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13445,
											"end": 13486,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13445,
											"end": 13486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13525,
											"end": 13544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13519,
											"end": 13545,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13500,
											"end": 13545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13500,
											"end": 13545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13430,
											"end": 13556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13078,
											"end": 13563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13078,
											"end": 13563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13078,
											"end": 13563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13078,
											"end": 13563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 27551,
											"end": 27656,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 27551,
											"end": 27656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27611,
											"end": 27618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27638,
											"end": 27648,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 27631,
											"end": 27648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27631,
											"end": 27648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27551,
											"end": 27656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27551,
											"end": 27656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 13065,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 12406,
											"end": 13065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12555,
											"end": 12566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12713,
											"end": 12718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12709,
											"end": 12737,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12700,
											"end": 12737,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12700,
											"end": 12737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12880,
											"end": 12896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12869,
											"end": 12878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12865,
											"end": 12897,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12852,
											"end": 12897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12852,
											"end": 12897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13030,
											"end": 13045,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13019,
											"end": 13028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13016,
											"end": 13046,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13008,
											"end": 13013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12997,
											"end": 13006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13014,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12991,
											"end": 13047,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12981,
											"end": 13047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12981,
											"end": 13047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 13065,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 13065,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 13065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 13065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 13065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 13065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17367,
											"end": 17526,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 17367,
											"end": 17526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17367,
											"end": 17526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17367,
											"end": 17526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17367,
											"end": 17526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17367,
											"end": 17526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17367,
											"end": 17526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 27226,
											"end": 27537,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 27226,
											"end": 27537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27361,
											"end": 27368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27381,
											"end": 27397,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "E8"
										},
										{
											"begin": 27407,
											"end": 27426,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 27407,
											"end": 27448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27407,
											"end": 27448,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 27381,
											"end": 27449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27381,
											"end": 27449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "E8"
										},
										{
											"begin": 27475,
											"end": 27506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 27486,
											"end": 27490,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 27492,
											"end": 27494,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 27496,
											"end": 27505,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 27475,
											"end": 27485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 27475,
											"end": 27506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 27475,
											"end": 27506,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 27475,
											"end": 27506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27467,
											"end": 27507,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 27467,
											"end": 27507,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27467,
											"end": 27529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27467,
											"end": 27529,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 27460,
											"end": 27529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27460,
											"end": 27529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27460,
											"end": 27529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27226,
											"end": 27537,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 27226,
											"end": 27537,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 27226,
											"end": 27537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27226,
											"end": 27537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27226,
											"end": 27537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27226,
											"end": 27537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10871,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 10421,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10501,
											"end": 10515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10662,
											"end": 10667,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10846,
											"end": 10851,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 10807,
											"end": 10830,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 10803,
											"end": 10844,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10852,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10790,
											"end": 10853,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 10780,
											"end": 10853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10780,
											"end": 10853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10871,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17539,
											"end": 17697,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 17539,
											"end": 17697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17539,
											"end": 17697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17539,
											"end": 17697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17539,
											"end": 17697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17539,
											"end": 17697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17539,
											"end": 17697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22826,
											"end": 22938,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 22826,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 22913,
											"end": 22915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22917,
											"end": 22925,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 22903,
											"end": 22930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 22903,
											"end": 22930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22826,
											"end": 22938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22826,
											"end": 22938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22826,
											"end": 22938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17873,
											"end": 17877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17919,
											"end": 17921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17939,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17894,
											"end": 17939,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17939,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 17940,
											"end": 17957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 17940,
											"end": 17959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 17940,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17961,
											"end": 17965,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17967,
											"end": 17974,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17976,
											"end": 17981,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 17894,
											"end": 17982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 17894,
											"end": 17982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 17894,
											"end": 17982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18194,
											"end": 18195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18183,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18177,
											"end": 18190,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18177,
											"end": 18195,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18173,
											"end": 18288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 18173,
											"end": 18288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18216,
											"end": 18272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 18224,
											"end": 18271,
											"name": "PUSH",
											"source": 3,
											"value": "D1A57ED6"
										},
										{
											"begin": 18224,
											"end": 18271,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 18224,
											"end": 18271,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 18216,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 18216,
											"end": 18272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18216,
											"end": 18272,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 18216,
											"end": 18272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18173,
											"end": 18288,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 18173,
											"end": 18288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18360,
											"end": 18366,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18354,
											"end": 18367,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18345,
											"end": 18351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18341,
											"end": 18343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18337,
											"end": 18352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18330,
											"end": 18368,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 17890,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18063,
											"end": 18117,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 18063,
											"end": 18117,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 18063,
											"end": 18117,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 18053,
											"end": 18117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18053,
											"end": 18117,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18053,
											"end": 18117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18053,
											"end": 18059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18053,
											"end": 18117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18053,
											"end": 18117,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18053,
											"end": 18117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18053,
											"end": 18117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18046,
											"end": 18117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18046,
											"end": 18117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18046,
											"end": 18117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 18401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17710,
											"end": 18401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6761,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 6661,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6725,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6745,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6738,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6738,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 27758,
											"end": 29503,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 27758,
											"end": 29503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27823,
											"end": 27840,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 28257,
											"end": 28261,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 28250,
											"end": 28254,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 28244,
											"end": 28255,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 28240,
											"end": 28262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 28349,
											"end": 28350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 28343,
											"end": 28347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 28336,
											"end": 28351,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 28424,
											"end": 28428,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 28421,
											"end": 28422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 28417,
											"end": 28429,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 28410,
											"end": 28429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 28410,
											"end": 28429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28506,
											"end": 28507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 28501,
											"end": 28504,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 28494,
											"end": 28508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 28610,
											"end": 28613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 28849,
											"end": 28854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 28857,
											"end": 28858,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 28897,
											"end": 28898,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 28892,
											"end": 28895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 28888,
											"end": 28899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 28881,
											"end": 28899,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 28881,
											"end": 28899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29068,
											"end": 29070,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 29062,
											"end": 29066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29058,
											"end": 29071,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 29054,
											"end": 29056,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 29050,
											"end": 29072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29045,
											"end": 29048,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 29037,
											"end": 29073,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 29162,
											"end": 29164,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 29156,
											"end": 29160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29152,
											"end": 29165,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 29144,
											"end": 29165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29144,
											"end": 29165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29229,
											"end": 29233,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 29219,
											"end": 29244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 28831,
											"end": 29259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 28835,
											"end": 28856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29298,
											"end": 29301,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 29293,
											"end": 29296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29289,
											"end": 29302,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 29413,
											"end": 29417,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 29408,
											"end": 29411,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 29404,
											"end": 29418,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 29397,
											"end": 29418,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 29397,
											"end": 29418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29478,
											"end": 29484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 29473,
											"end": 29476,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 29466,
											"end": 29485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27862,
											"end": 29496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27862,
											"end": 29496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27862,
											"end": 29496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27758,
											"end": 29503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27758,
											"end": 29503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27758,
											"end": 29503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27758,
											"end": 29503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23556,
											"end": 23645,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 23556,
											"end": 23645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23616,
											"end": 23637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 23622,
											"end": 23629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23631,
											"end": 23636,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23616,
											"end": 23621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 23616,
											"end": 23637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23616,
											"end": 23637,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 23616,
											"end": 23637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23556,
											"end": 23645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23556,
											"end": 23645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27065,
											"end": 27212,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 27065,
											"end": 27212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27202,
											"end": 27208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27065,
											"end": 27212,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 27065,
											"end": 27212,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 27065,
											"end": 27212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27065,
											"end": 27212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27065,
											"end": 27212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27065,
											"end": 27212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22034,
											"end": 22742,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 22034,
											"end": 22742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22165,
											"end": 22184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 22171,
											"end": 22173,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22175,
											"end": 22183,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22165,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 22165,
											"end": 22184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22165,
											"end": 22184,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 22165,
											"end": 22184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22244,
											"end": 22245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22226,
											"end": 22228,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22226,
											"end": 22240,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22226,
											"end": 22240,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22226,
											"end": 22240,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 22226,
											"end": 22245,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22222,
											"end": 22724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 22222,
											"end": 22724,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22266,
											"end": 22277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22280,
											"end": 22293,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22280,
											"end": 22293,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22266,
											"end": 22293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22266,
											"end": 22293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22312,
											"end": 22325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22334,
											"end": 22342,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22328,
											"end": 22331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22328,
											"end": 22342,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22312,
											"end": 22342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22312,
											"end": 22342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22361,
											"end": 22603,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 22361,
											"end": 22603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22392,
											"end": 22454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 22431,
											"end": 22432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22435,
											"end": 22437,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22446,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22439,
											"end": 22446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22446,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 22439,
											"end": 22446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22448,
											"end": 22453,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22392,
											"end": 22422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 22392,
											"end": 22454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22392,
											"end": 22454,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 22392,
											"end": 22454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22387,
											"end": 22563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 22387,
											"end": 22563,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22483,
											"end": 22539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 22491,
											"end": 22538,
											"name": "PUSH",
											"source": 3,
											"value": "D1A57ED6"
										},
										{
											"begin": 22491,
											"end": 22538,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 22491,
											"end": 22538,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 22483,
											"end": 22490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 22483,
											"end": 22539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22483,
											"end": 22539,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 22483,
											"end": 22539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22387,
											"end": 22563,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 22387,
											"end": 22563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22598,
											"end": 22601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22590,
											"end": 22595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22590,
											"end": 22601,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 22361,
											"end": 22603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 22361,
											"end": 22603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22685,
											"end": 22688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22668,
											"end": 22681,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22668,
											"end": 22681,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22668,
											"end": 22688,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22664,
											"end": 22708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 22664,
											"end": 22708,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22690,
											"end": 22708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 22705,
											"end": 22706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22698,
											"end": 22707,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 22698,
											"end": 22707,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 22690,
											"end": 22697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 22690,
											"end": 22708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22690,
											"end": 22708,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 22690,
											"end": 22708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22664,
											"end": 22708,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 22664,
											"end": 22708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22247,
											"end": 22724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22247,
											"end": 22724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22222,
											"end": 22724,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 22222,
											"end": 22724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22034,
											"end": 22742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22034,
											"end": 22742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22034,
											"end": 22742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22034,
											"end": 22742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23658,
											"end": 26497,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 23658,
											"end": 26497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23738,
											"end": 23765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23768,
											"end": 23795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 23787,
											"end": 23794,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23768,
											"end": 23786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 23768,
											"end": 23795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23768,
											"end": 23795,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 23768,
											"end": 23795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23738,
											"end": 23795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23738,
											"end": 23795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23808,
											"end": 23820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23839,
											"end": 23858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23808,
											"end": 23860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23808,
											"end": 23860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23874,
											"end": 23901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23903,
											"end": 23926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23930,
											"end": 23965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 23957,
											"end": 23964,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 23930,
											"end": 23956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 23930,
											"end": 23965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23930,
											"end": 23965,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 23930,
											"end": 23965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23873,
											"end": 23965,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23873,
											"end": 23965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23873,
											"end": 23965,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23873,
											"end": 23965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23982,
											"end": 23995,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 23978,
											"end": 24303,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23978,
											"end": 24303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 23978,
											"end": 24303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24103,
											"end": 24171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 24128,
											"end": 24143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24145,
											"end": 24149,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24151,
											"end": 24170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 24151,
											"end": 24168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 24151,
											"end": 24170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24151,
											"end": 24170,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 24151,
											"end": 24170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24103,
											"end": 24127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 24103,
											"end": 24171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24103,
											"end": 24171,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 24103,
											"end": 24171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24098,
											"end": 24291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 24098,
											"end": 24291,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24195,
											"end": 24238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 24212,
											"end": 24216,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24218,
											"end": 24237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 24218,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 24218,
											"end": 24237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24218,
											"end": 24237,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 24218,
											"end": 24237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24195,
											"end": 24211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 24195,
											"end": 24238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24195,
											"end": 24238,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 24195,
											"end": 24238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24190,
											"end": 24291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 24190,
											"end": 24291,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24240,
											"end": 24291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 24248,
											"end": 24290,
											"name": "PUSH",
											"source": 3,
											"value": "59C896BE"
										},
										{
											"begin": 24248,
											"end": 24290,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 24248,
											"end": 24290,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 24240,
											"end": 24247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 24240,
											"end": 24291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24240,
											"end": 24291,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 24240,
											"end": 24291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24190,
											"end": 24291,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 24190,
											"end": 24291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24098,
											"end": 24291,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 24098,
											"end": 24291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23978,
											"end": 24303,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 23978,
											"end": 24303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24315,
											"end": 24366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 24337,
											"end": 24341,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24351,
											"end": 24352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24355,
											"end": 24362,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 24364,
											"end": 24365,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 24315,
											"end": 24336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 24315,
											"end": 24366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 24315,
											"end": 24366,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 24315,
											"end": 24366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24459,
											"end": 24474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24456,
											"end": 24616,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 24456,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 24456,
											"end": 24616,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24599,
											"end": 24600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24578,
											"end": 24597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24571,
											"end": 24601,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 24456,
											"end": 24616,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 24456,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25026,
											"end": 25027,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 24996,
											"end": 24997,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 24996,
											"end": 25022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24996,
											"end": 25022,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 24995,
											"end": 25027,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24985,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24986,
											"end": 24990,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 24991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 24967,
											"end": 25027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25294,
											"end": 25470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 25331,
											"end": 25335,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 25402,
											"end": 25455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 25417,
											"end": 25421,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 25431,
											"end": 25432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25435,
											"end": 25454,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 25402,
											"end": 25416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 25402,
											"end": 25455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 25402,
											"end": 25455,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 25402,
											"end": 25455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25355,
											"end": 25398,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 25354,
											"end": 25455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 25294,
											"end": 25312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 25294,
											"end": 25470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 25294,
											"end": 25470,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 25294,
											"end": 25470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25282,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25283,
											"end": 25290,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25265,
											"end": 25291,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25470,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 25265,
											"end": 25470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25641,
											"end": 25642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25590,
											"end": 25609,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 25590,
											"end": 25637,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 25590,
											"end": 25642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 25586,
											"end": 26213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 25586,
											"end": 26213,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 25663,
											"end": 25682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25695,
											"end": 25696,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 25685,
											"end": 25692,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 25685,
											"end": 25696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 25663,
											"end": 25696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25663,
											"end": 25696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25852,
											"end": 25853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25818,
											"end": 25835,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25836,
											"end": 25847,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25848,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 25818,
											"end": 25853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 25814,
											"end": 26198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 25814,
											"end": 26198,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 25956,
											"end": 25969,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 25956,
											"end": 25969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 25941,
											"end": 25952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 25941,
											"end": 25969,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 25937,
											"end": 26179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 25937,
											"end": 26179,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 26136,
											"end": 26155,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26120,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26121,
											"end": 26132,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26103,
											"end": 26133,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 26103,
											"end": 26155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25937,
											"end": 26179,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 25937,
											"end": 26179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25814,
											"end": 26198,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 25814,
											"end": 26198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25644,
											"end": 26213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25586,
											"end": 26213,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 25586,
											"end": 26213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26268,
											"end": 26275,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 26264,
											"end": 26265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 26250,
											"end": 26254,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26241,
											"end": 26276,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 26287,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 26308,
											"end": 26312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 26322,
											"end": 26323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26326,
											"end": 26333,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 26335,
											"end": 26336,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 26287,
											"end": 26307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 26287,
											"end": 26337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 26287,
											"end": 26337,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 26287,
											"end": 26337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26476,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 26464,
											"end": 26476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 26464,
											"end": 26478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23727,
											"end": 26497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23727,
											"end": 26497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23727,
											"end": 26497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23727,
											"end": 26497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23658,
											"end": 26497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23658,
											"end": 26497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23658,
											"end": 26497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18415,
											"end": 20720,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 18415,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18511,
											"end": 18524,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 18511,
											"end": 18524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18551,
											"end": 18552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18539,
											"end": 18547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18539,
											"end": 18552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18535,
											"end": 18588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 18535,
											"end": 18588,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18554,
											"end": 18588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 18562,
											"end": 18587,
											"name": "PUSH",
											"source": 3,
											"value": "B562E8DD"
										},
										{
											"begin": 18562,
											"end": 18587,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 18562,
											"end": 18587,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 18554,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 18554,
											"end": 18588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18554,
											"end": 18588,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 18554,
											"end": 18588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18535,
											"end": 18588,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 18535,
											"end": 18588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18601,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 18631,
											"end": 18632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18635,
											"end": 18637,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 18639,
											"end": 18651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18653,
											"end": 18661,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 18601,
											"end": 18622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 18601,
											"end": 18662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18601,
											"end": 18662,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 18601,
											"end": 18662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 19172,
											"end": 19174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19226,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 19249,
											"end": 19250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19253,
											"end": 19255,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 19257,
											"end": 19258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19226,
											"end": 19240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 19226,
											"end": 19259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19226,
											"end": 19259,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 19226,
											"end": 19259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19193,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 19214,
											"end": 19222,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 19193,
											"end": 19213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 19193,
											"end": 19223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19193,
											"end": 19223,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 19193,
											"end": 19223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19193,
											"end": 19259,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 19135,
											"end": 19274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19274,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 19135,
											"end": 19274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19118,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19119,
											"end": 19131,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19101,
											"end": 19132,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19274,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19561,
											"end": 19562,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19531,
											"end": 19532,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 19531,
											"end": 19557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19531,
											"end": 19557,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 19530,
											"end": 19562,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 19518,
											"end": 19526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19518,
											"end": 19563,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19510,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19511,
											"end": 19513,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 19492,
											"end": 19563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19674,
											"end": 19690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1988,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19709,
											"end": 19711,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19693,
											"end": 19713,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19693,
											"end": 19713,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19693,
											"end": 19732,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19674,
											"end": 19732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19674,
											"end": 19732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19765,
											"end": 19766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19753,
											"end": 19761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19753,
											"end": 19766,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19749,
											"end": 19803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 19749,
											"end": 19803,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 19768,
											"end": 19803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 19776,
											"end": 19802,
											"name": "PUSH",
											"source": 3,
											"value": "2E076300"
										},
										{
											"begin": 19776,
											"end": 19802,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 19776,
											"end": 19802,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 19768,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 19768,
											"end": 19803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19768,
											"end": 19803,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 19768,
											"end": 19803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19749,
											"end": 19803,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 19749,
											"end": 19803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19820,
											"end": 19831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19849,
											"end": 19857,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19834,
											"end": 19846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19834,
											"end": 19857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19820,
											"end": 19857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19820,
											"end": 19857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19872,
											"end": 19887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19890,
											"end": 19902,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19872,
											"end": 19902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19872,
											"end": 19902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19919,
											"end": 20595,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 19919,
											"end": 20595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20338,
											"end": 20345,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20294,
											"end": 20302,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20249,
											"end": 20250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20183,
											"end": 20208,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20120,
											"end": 20121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20055,
											"end": 20056,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20024,
											"end": 20382,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 20590,
											"end": 20593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20577,
											"end": 20586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20577,
											"end": 20586,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20577,
											"end": 20586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20577,
											"end": 20586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20577,
											"end": 20586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20577,
											"end": 20586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20577,
											"end": 20593,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19919,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 19919,
											"end": 20595,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20627,
											"end": 20630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20611,
											"end": 20624,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20611,
											"end": 20630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20611,
											"end": 20630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20611,
											"end": 20630,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20611,
											"end": 20630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18850,
											"end": 20642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18850,
											"end": 20642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18850,
											"end": 20642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20652,
											"end": 20712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 20681,
											"end": 20682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20685,
											"end": 20687,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 20689,
											"end": 20701,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20703,
											"end": 20711,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 20652,
											"end": 20672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 20652,
											"end": 20712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 20652,
											"end": 20712,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 20652,
											"end": 20712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18477,
											"end": 20720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18415,
											"end": 20720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18415,
											"end": 20720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18415,
											"end": 20720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10884,
											"end": 11208,
											"name": "tag",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 10884,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10954,
											"end": 10968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11188,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11177,
											"end": 11185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11174,
											"end": 11189,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11148,
											"end": 11172,
											"name": "PUSH",
											"source": 3,
											"value": "E1"
										},
										{
											"begin": 11144,
											"end": 11190,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 11134,
											"end": 11190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11134,
											"end": 11190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10884,
											"end": 11208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10884,
											"end": 11208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10884,
											"end": 11208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10884,
											"end": 11208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "505"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 4,
											"value": "505"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "507"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "508"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 4,
											"value": "508"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 4,
											"value": "507"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "509"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "509"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "512"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 4,
											"value": "512"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 4,
											"value": "514"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "520"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "518"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 4,
											"value": "520"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "523"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 4,
											"value": "523"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "526"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 4,
											"value": "526"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "532"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 4,
											"value": "532"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "538"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 4,
											"value": "538"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "541"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 4,
											"value": "541"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "543"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 4,
											"value": "543"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "545"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 4,
											"value": "545"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "547"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 4,
											"value": "547"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "548"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 4,
											"value": "548"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "553"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 4,
											"value": "553"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "555"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "555"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5184,
											"end": 5261,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5305,
											"end": 5309,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5310,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "tag",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "560"
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 5405,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "tag",
											"source": 4,
											"value": "560"
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5397,
											"end": 5403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5542,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5484,
											"end": 5518,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5481,
											"end": 5543,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "561"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "562"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 5546,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "tag",
											"source": 4,
											"value": "562"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "tag",
											"source": 4,
											"value": "561"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5586,
											"end": 5596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5322,
											"end": 5603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "564"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 5670,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "tag",
											"source": 4,
											"value": "564"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "565"
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 5699,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "tag",
											"source": 4,
											"value": "565"
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "tag",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "567"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "568"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 5918,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "tag",
											"source": 4,
											"value": "568"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "tag",
											"source": 4,
											"value": "567"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "569"
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 5956,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "tag",
											"source": 4,
											"value": "569"
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5744,
											"end": 6052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6155,
											"end": 6161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6162,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6171,
											"end": 6198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "572"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "573"
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 6329,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "tag",
											"source": 4,
											"value": "573"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 6313,
											"end": 6379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "tag",
											"source": 4,
											"value": "572"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6440,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6445,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6460,
											"end": 6476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6482,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "574"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "575"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 6485,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "tag",
											"source": 4,
											"value": "575"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "tag",
											"source": 4,
											"value": "574"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "576"
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6615,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 6575,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "576"
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "tag",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6741,
											"end": 6758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6764,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "578"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "579"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 6768,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "579"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "tag",
											"source": 4,
											"value": "578"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "580"
										},
										{
											"begin": 6985,
											"end": 6988,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 6983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6970,
											"end": 6974,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6968,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6910,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "tag",
											"source": 4,
											"value": "580"
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6717,
											"end": 6995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6655,
											"end": 6995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7105,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7117,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7090,
											"end": 7122,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "582"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "583"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 7125,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "tag",
											"source": 4,
											"value": "583"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "tag",
											"source": 4,
											"value": "582"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7276,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7292,
											"end": 7322,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "584"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "585"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 7325,
											"end": 7404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "tag",
											"source": 4,
											"value": "585"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "tag",
											"source": 4,
											"value": "584"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "586"
										},
										{
											"begin": 7485,
											"end": 7492,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7474,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7461,
											"end": 7483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 7430,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "tag",
											"source": 4,
											"value": "586"
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7634,
											"name": "tag",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 7516,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7603,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "588"
										},
										{
											"begin": 7621,
											"end": 7626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7603,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 7603,
											"end": 7627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7603,
											"end": 7627,
											"name": "tag",
											"source": 4,
											"value": "588"
										},
										{
											"begin": 7603,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7598,
											"end": 7601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7591,
											"end": 7628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7862,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 7640,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7733,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 7774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7748,
											"end": 7774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "590"
										},
										{
											"begin": 7852,
											"end": 7853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7850,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7834,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 7784,
											"end": 7855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7855,
											"name": "tag",
											"source": 4,
											"value": "590"
										},
										{
											"begin": 7784,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7862,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7640,
											"end": 7862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8487,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 7868,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 7959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8012,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7998,
											"end": 8007,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "592"
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "593"
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 8016,
											"end": 8095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "tag",
											"source": 4,
											"value": "593"
										},
										{
											"begin": 8016,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "tag",
											"source": 4,
											"value": "592"
										},
										{
											"begin": 7978,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "594"
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8186,
											"end": 8195,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 8161,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8214,
											"name": "tag",
											"source": 4,
											"value": "594"
										},
										{
											"begin": 8161,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8214,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8214,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8107,
											"end": 8224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8289,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "595"
										},
										{
											"begin": 8334,
											"end": 8341,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8331,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8314,
											"end": 8323,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 8289,
											"end": 8342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8342,
											"name": "tag",
											"source": 4,
											"value": "595"
										},
										{
											"begin": 8289,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8342,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8234,
											"end": 8352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8391,
											"end": 8393,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8417,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "596"
										},
										{
											"begin": 8462,
											"end": 8469,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8453,
											"end": 8459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8451,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8438,
											"end": 8460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 8417,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8470,
											"name": "tag",
											"source": 4,
											"value": "596"
										},
										{
											"begin": 8417,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8362,
											"end": 8480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8487,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8487,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8487,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8493,
											"end": 8607,
											"name": "tag",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 8493,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8560,
											"end": 8566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8588,
											"end": 8600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8578,
											"end": 8600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8493,
											"end": 8607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8493,
											"end": 8607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8493,
											"end": 8607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8493,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8797,
											"name": "tag",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 8613,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 8723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 8744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8734,
											"end": 8753,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8786,
											"end": 8790,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8781,
											"end": 8784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8777,
											"end": 8791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8797,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8935,
											"name": "tag",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 8803,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8870,
											"end": 8874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8893,
											"end": 8896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8923,
											"end": 8927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8918,
											"end": 8921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 8928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8941,
											"end": 9049,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 8941,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "601"
										},
										{
											"begin": 9036,
											"end": 9041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 9018,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9042,
											"name": "tag",
											"source": 4,
											"value": "601"
										},
										{
											"begin": 9018,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9006,
											"end": 9043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8941,
											"end": 9049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8941,
											"end": 9049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8941,
											"end": 9049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9234,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 9055,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "603"
										},
										{
											"begin": 9187,
											"end": 9190,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9179,
											"end": 9185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 9145,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9191,
											"name": "tag",
											"source": 4,
											"value": "603"
										},
										{
											"begin": 9145,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9223,
											"end": 9227,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9221,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9234,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9353,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 9240,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9346,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9337,
											"end": 9340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9333,
											"end": 9347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9325,
											"end": 9347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9325,
											"end": 9347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9389,
											"end": 10121,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 9389,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9511,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "606"
										},
										{
											"begin": 9585,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9537,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 9537,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9537,
											"end": 9591,
											"name": "tag",
											"source": 4,
											"value": "606"
										},
										{
											"begin": 9537,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9607,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "607"
										},
										{
											"begin": 9686,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9684,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9607,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 9607,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9607,
											"end": 9693,
											"name": "tag",
											"source": 4,
											"value": "607"
										},
										{
											"begin": 9607,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9693,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "608"
										},
										{
											"begin": 9767,
											"end": 9772,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 9717,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9773,
											"name": "tag",
											"source": 4,
											"value": "608"
										},
										{
											"begin": 9717,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9796,
											"end": 9803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9827,
											"end": 9828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "tag",
											"source": 4,
											"value": "609"
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9844,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "611"
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "612"
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 9940,
											"end": 10003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 10003,
											"name": "tag",
											"source": 4,
											"value": "612"
										},
										{
											"begin": 9940,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9933,
											"end": 10003,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 9933,
											"end": 10003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "613"
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 10026,
											"end": 10086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10086,
											"name": "tag",
											"source": 4,
											"value": "613"
										},
										{
											"begin": 10026,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10016,
											"end": 10086,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10016,
											"end": 10086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9872,
											"end": 10096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9860,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9856,
											"end": 9857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9852,
											"end": 9861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9847,
											"end": 9861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9847,
											"end": 9861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "609"
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "tag",
											"source": 4,
											"value": "611"
										},
										{
											"begin": 9812,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9816,
											"end": 9830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10112,
											"end": 10115,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10105,
											"end": 10115,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10105,
											"end": 10115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9513,
											"end": 10121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9513,
											"end": 10121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9513,
											"end": 10121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9389,
											"end": 10121,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9389,
											"end": 10121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9389,
											"end": 10121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9389,
											"end": 10121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9389,
											"end": 10121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10500,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 10127,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10270,
											"end": 10274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10297,
											"end": 10306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10285,
											"end": 10311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10285,
											"end": 10311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10347,
											"end": 10367,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10341,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10328,
											"end": 10345,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10321,
											"end": 10368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10385,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "615"
										},
										{
											"begin": 10488,
											"end": 10492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10479,
											"end": 10485,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10385,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 10385,
											"end": 10493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10385,
											"end": 10493,
											"name": "tag",
											"source": 4,
											"value": "615"
										},
										{
											"begin": 10385,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10377,
											"end": 10493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10377,
											"end": 10493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10500,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10835,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 10506,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10565,
											"end": 10571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10614,
											"end": 10616,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10602,
											"end": 10611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10600,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10589,
											"end": 10612,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 10582,
											"end": 10701,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10582,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "617"
										},
										{
											"begin": 10582,
											"end": 10701,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10620,
											"end": 10699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "618"
										},
										{
											"begin": 10620,
											"end": 10699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 10620,
											"end": 10699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10620,
											"end": 10699,
											"name": "tag",
											"source": 4,
											"value": "618"
										},
										{
											"begin": 10620,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10582,
											"end": 10701,
											"name": "tag",
											"source": 4,
											"value": "617"
										},
										{
											"begin": 10582,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10740,
											"end": 10741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "619"
										},
										{
											"begin": 10810,
											"end": 10817,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10801,
											"end": 10807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10790,
											"end": 10799,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10765,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 10765,
											"end": 10818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10765,
											"end": 10818,
											"name": "tag",
											"source": 4,
											"value": "619"
										},
										{
											"begin": 10765,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10755,
											"end": 10818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10755,
											"end": 10818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10711,
											"end": 10828,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10841,
											"end": 10957,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 10841,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10911,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "621"
										},
										{
											"begin": 10926,
											"end": 10931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10911,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 10911,
											"end": 10932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10911,
											"end": 10932,
											"name": "tag",
											"source": 4,
											"value": "621"
										},
										{
											"begin": 10911,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10901,
											"end": 10933,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "622"
										},
										{
											"begin": 10891,
											"end": 10951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10944,
											"end": 10945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10937,
											"end": 10949,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 10951,
											"name": "tag",
											"source": 4,
											"value": "622"
										},
										{
											"begin": 10891,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10841,
											"end": 10957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10841,
											"end": 10957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11096,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 10963,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11006,
											"end": 11011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11031,
											"end": 11051,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 11022,
											"end": 11051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11022,
											"end": 11051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11060,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "624"
										},
										{
											"begin": 11084,
											"end": 11089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11060,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 11060,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11060,
											"end": 11090,
											"name": "tag",
											"source": 4,
											"value": "624"
										},
										{
											"begin": 11060,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11096,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11570,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 11102,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11167,
											"end": 11173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11175,
											"end": 11181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11224,
											"end": 11226,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11212,
											"end": 11221,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11203,
											"end": 11210,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11199,
											"end": 11222,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11195,
											"end": 11227,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 11192,
											"end": 11311,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11192,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "626"
										},
										{
											"begin": 11192,
											"end": 11311,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "627"
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 11230,
											"end": 11309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "tag",
											"source": 4,
											"value": "627"
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11192,
											"end": 11311,
											"name": "tag",
											"source": 4,
											"value": "626"
										},
										{
											"begin": 11192,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11350,
											"end": 11351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "628"
										},
										{
											"begin": 11420,
											"end": 11427,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11400,
											"end": 11409,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11396,
											"end": 11418,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 11375,
											"end": 11428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "tag",
											"source": 4,
											"value": "628"
										},
										{
											"begin": 11375,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11321,
											"end": 11438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11477,
											"end": 11479,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11503,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "629"
										},
										{
											"begin": 11545,
											"end": 11552,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11536,
											"end": 11542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11525,
											"end": 11534,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11503,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 11503,
											"end": 11553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11503,
											"end": 11553,
											"name": "tag",
											"source": 4,
											"value": "629"
										},
										{
											"begin": 11503,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11493,
											"end": 11553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11493,
											"end": 11553,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11448,
											"end": 11563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11570,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11570,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11576,
											"end": 11883,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 11576,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11727,
											"end": 11745,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11719,
											"end": 11725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11716,
											"end": 11746,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11713,
											"end": 11769,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11713,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "631"
										},
										{
											"begin": 11713,
											"end": 11769,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "632"
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 11749,
											"end": 11767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "tag",
											"source": 4,
											"value": "632"
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11713,
											"end": 11769,
											"name": "tag",
											"source": 4,
											"value": "631"
										},
										{
											"begin": 11713,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "633"
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 11787,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11816,
											"name": "tag",
											"source": 4,
											"value": "633"
										},
										{
											"begin": 11787,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11779,
											"end": 11816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11779,
											"end": 11816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11865,
											"end": 11869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11853,
											"end": 11876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11576,
											"end": 11883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11576,
											"end": 11883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11576,
											"end": 11883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11576,
											"end": 11883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11889,
											"end": 12312,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 11889,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11966,
											"end": 11971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11991,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "635"
										},
										{
											"begin": 12007,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "636"
										},
										{
											"begin": 12048,
											"end": 12054,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12007,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 12007,
											"end": 12055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12007,
											"end": 12055,
											"name": "tag",
											"source": 4,
											"value": "636"
										},
										{
											"begin": 12007,
											"end": 12055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11991,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 11991,
											"end": 12056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11991,
											"end": 12056,
											"name": "tag",
											"source": 4,
											"value": "635"
										},
										{
											"begin": 11991,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11982,
											"end": 12056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11982,
											"end": 12056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12079,
											"end": 12085,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12110,
											"end": 12115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12106,
											"end": 12122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12155,
											"end": 12158,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12146,
											"end": 12152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12141,
											"end": 12144,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12137,
											"end": 12153,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12159,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12243,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "637"
										},
										{
											"begin": 12131,
											"end": 12243,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12162,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "638"
										},
										{
											"begin": 12162,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 12162,
											"end": 12241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12162,
											"end": 12241,
											"name": "tag",
											"source": 4,
											"value": "638"
										},
										{
											"begin": 12162,
											"end": 12241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12243,
											"name": "tag",
											"source": 4,
											"value": "637"
										},
										{
											"begin": 12131,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12252,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "639"
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12294,
											"end": 12297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12289,
											"end": 12292,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12252,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 12252,
											"end": 12306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12252,
											"end": 12306,
											"name": "tag",
											"source": 4,
											"value": "639"
										},
										{
											"begin": 12252,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11972,
											"end": 12312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11889,
											"end": 12312,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11889,
											"end": 12312,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11889,
											"end": 12312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11889,
											"end": 12312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11889,
											"end": 12312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11889,
											"end": 12312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12331,
											"end": 12669,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 12331,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12386,
											"end": 12391,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12435,
											"end": 12438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12428,
											"end": 12432,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12420,
											"end": 12426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12416,
											"end": 12433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12412,
											"end": 12439,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 12402,
											"end": 12524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "641"
										},
										{
											"begin": 12402,
											"end": 12524,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12443,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "642"
										},
										{
											"begin": 12443,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 12443,
											"end": 12522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12443,
											"end": 12522,
											"name": "tag",
											"source": 4,
											"value": "642"
										},
										{
											"begin": 12443,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12402,
											"end": 12524,
											"name": "tag",
											"source": 4,
											"value": "641"
										},
										{
											"begin": 12402,
											"end": 12524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12560,
											"end": 12566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12547,
											"end": 12567,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 12585,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "643"
										},
										{
											"begin": 12659,
											"end": 12662,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12651,
											"end": 12657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12644,
											"end": 12648,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12636,
											"end": 12642,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12632,
											"end": 12649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12585,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 12585,
											"end": 12663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12585,
											"end": 12663,
											"name": "tag",
											"source": 4,
											"value": "643"
										},
										{
											"begin": 12585,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12576,
											"end": 12663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12576,
											"end": 12663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12392,
											"end": 12669,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12331,
											"end": 12669,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12331,
											"end": 12669,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12331,
											"end": 12669,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12331,
											"end": 12669,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12331,
											"end": 12669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12770,
											"end": 12776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12778,
											"end": 12784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12786,
											"end": 12792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12800,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12843,
											"end": 12846,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 12831,
											"end": 12840,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12822,
											"end": 12829,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12818,
											"end": 12841,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12814,
											"end": 12847,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 12811,
											"end": 12931,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12811,
											"end": 12931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "645"
										},
										{
											"begin": 12811,
											"end": 12931,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12850,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "646"
										},
										{
											"begin": 12850,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 12850,
											"end": 12929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12850,
											"end": 12929,
											"name": "tag",
											"source": 4,
											"value": "646"
										},
										{
											"begin": 12850,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12811,
											"end": 12931,
											"name": "tag",
											"source": 4,
											"value": "645"
										},
										{
											"begin": 12811,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12970,
											"end": 12971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12995,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "647"
										},
										{
											"begin": 13040,
											"end": 13047,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13031,
											"end": 13037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13020,
											"end": 13029,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 13016,
											"end": 13038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12995,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 12995,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12995,
											"end": 13048,
											"name": "tag",
											"source": 4,
											"value": "647"
										},
										{
											"begin": 12995,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12985,
											"end": 13048,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12985,
											"end": 13048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12941,
											"end": 13058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13097,
											"end": 13099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "648"
										},
										{
											"begin": 13168,
											"end": 13175,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13159,
											"end": 13165,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13148,
											"end": 13157,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 13123,
											"end": 13176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "tag",
											"source": 4,
											"value": "648"
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13113,
											"end": 13176,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 13113,
											"end": 13176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13068,
											"end": 13186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13225,
											"end": 13227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13251,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "649"
										},
										{
											"begin": 13296,
											"end": 13303,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13287,
											"end": 13293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13276,
											"end": 13285,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 13272,
											"end": 13294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13251,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 13251,
											"end": 13304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13251,
											"end": 13304,
											"name": "tag",
											"source": 4,
											"value": "649"
										},
										{
											"begin": 13251,
											"end": 13304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13241,
											"end": 13304,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13241,
											"end": 13304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13196,
											"end": 13314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13381,
											"end": 13383,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 13370,
											"end": 13379,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13366,
											"end": 13384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13353,
											"end": 13385,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 13412,
											"end": 13430,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13404,
											"end": 13410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13401,
											"end": 13431,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13398,
											"end": 13515,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13398,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "650"
										},
										{
											"begin": 13398,
											"end": 13515,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13434,
											"end": 13513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "651"
										},
										{
											"begin": 13434,
											"end": 13513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 13434,
											"end": 13513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13434,
											"end": 13513,
											"name": "tag",
											"source": 4,
											"value": "651"
										},
										{
											"begin": 13434,
											"end": 13513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13398,
											"end": 13515,
											"name": "tag",
											"source": 4,
											"value": "650"
										},
										{
											"begin": 13398,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13539,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "652"
										},
										{
											"begin": 13593,
											"end": 13600,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13584,
											"end": 13590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13573,
											"end": 13582,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 13569,
											"end": 13591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13539,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 13539,
											"end": 13601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13539,
											"end": 13601,
											"name": "tag",
											"source": 4,
											"value": "652"
										},
										{
											"begin": 13539,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13529,
											"end": 13601,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13529,
											"end": 13601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13324,
											"end": 13611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12675,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13624,
											"end": 14098,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 13624,
											"end": 14098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13692,
											"end": 13698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13700,
											"end": 13706,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13749,
											"end": 13751,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13728,
											"end": 13735,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13724,
											"end": 13747,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13720,
											"end": 13752,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 13717,
											"end": 13836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13717,
											"end": 13836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "654"
										},
										{
											"begin": 13717,
											"end": 13836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13755,
											"end": 13834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "655"
										},
										{
											"begin": 13755,
											"end": 13834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 13755,
											"end": 13834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13755,
											"end": 13834,
											"name": "tag",
											"source": 4,
											"value": "655"
										},
										{
											"begin": 13755,
											"end": 13834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13717,
											"end": 13836,
											"name": "tag",
											"source": 4,
											"value": "654"
										},
										{
											"begin": 13717,
											"end": 13836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13875,
											"end": 13876,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "656"
										},
										{
											"begin": 13945,
											"end": 13952,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13936,
											"end": 13942,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 13934,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13921,
											"end": 13943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 13900,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "tag",
											"source": 4,
											"value": "656"
										},
										{
											"begin": 13900,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13890,
											"end": 13953,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13890,
											"end": 13953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13846,
											"end": 13963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14002,
											"end": 14004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14028,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "657"
										},
										{
											"begin": 14073,
											"end": 14080,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 14064,
											"end": 14070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14053,
											"end": 14062,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 14049,
											"end": 14071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14028,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 14028,
											"end": 14081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14028,
											"end": 14081,
											"name": "tag",
											"source": 4,
											"value": "657"
										},
										{
											"begin": 14028,
											"end": 14081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14018,
											"end": 14081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14018,
											"end": 14081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13973,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13624,
											"end": 14098,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13624,
											"end": 14098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13624,
											"end": 14098,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13624,
											"end": 14098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13624,
											"end": 14098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13624,
											"end": 14098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14104,
											"end": 14284,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 14104,
											"end": 14284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14152,
											"end": 14229,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14149,
											"end": 14150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14142,
											"end": 14230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14249,
											"end": 14253,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 14246,
											"end": 14247,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14239,
											"end": 14254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14273,
											"end": 14277,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 14270,
											"end": 14271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14263,
											"end": 14278,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14290,
											"end": 14610,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 14290,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14334,
											"end": 14340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14371,
											"end": 14372,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 14365,
											"end": 14369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14361,
											"end": 14373,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14351,
											"end": 14373,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14351,
											"end": 14373,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14419,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14412,
											"end": 14416,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14408,
											"end": 14420,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14439,
											"end": 14457,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14429,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "660"
										},
										{
											"begin": 14429,
											"end": 14510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14495,
											"end": 14499,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 14487,
											"end": 14493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14483,
											"end": 14500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14473,
											"end": 14500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14473,
											"end": 14500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14429,
											"end": 14510,
											"name": "tag",
											"source": 4,
											"value": "660"
										},
										{
											"begin": 14429,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14557,
											"end": 14559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14546,
											"end": 14560,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14523,
											"end": 14561,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "661"
										},
										{
											"begin": 14520,
											"end": 14604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14576,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "662"
										},
										{
											"begin": 14576,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 14576,
											"end": 14594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14576,
											"end": 14594,
											"name": "tag",
											"source": 4,
											"value": "662"
										},
										{
											"begin": 14576,
											"end": 14594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14604,
											"name": "tag",
											"source": 4,
											"value": "661"
										},
										{
											"begin": 14520,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14341,
											"end": 14610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14290,
											"end": 14610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14290,
											"end": 14610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14290,
											"end": 14610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14290,
											"end": 14610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14616,
											"end": 14757,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 14616,
											"end": 14757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14688,
											"end": 14691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14680,
											"end": 14691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14680,
											"end": 14691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14708,
											"end": 14709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14701,
											"end": 14715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14745,
											"end": 14749,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14742,
											"end": 14743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14732,
											"end": 14750,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14724,
											"end": 14750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14724,
											"end": 14750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14616,
											"end": 14757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14616,
											"end": 14757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14616,
											"end": 14757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14616,
											"end": 14757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14763,
											"end": 14856,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 14763,
											"end": 14856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14800,
											"end": 14806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14842,
											"end": 14844,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14835,
											"end": 14840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14831,
											"end": 14845,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14827,
											"end": 14850,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14763,
											"end": 14856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14763,
											"end": 14856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14763,
											"end": 14856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14763,
											"end": 14856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14862,
											"end": 14969,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 14862,
											"end": 14969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14906,
											"end": 14914,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14956,
											"end": 14961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14950,
											"end": 14954,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14946,
											"end": 14962,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 14925,
											"end": 14962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14925,
											"end": 14962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14862,
											"end": 14969,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14862,
											"end": 14969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14862,
											"end": 14969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14862,
											"end": 14969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14862,
											"end": 14969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14975,
											"end": 15368,
											"name": "tag",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 14975,
											"end": 15368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15044,
											"end": 15050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15094,
											"end": 15095,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 15082,
											"end": 15092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15078,
											"end": 15096,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15117,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 15147,
											"end": 15213,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15136,
											"end": 15145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15117,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 15117,
											"end": 15214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15117,
											"end": 15214,
											"name": "tag",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 15117,
											"end": 15214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15235,
											"end": 15274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "668"
										},
										{
											"begin": 15265,
											"end": 15273,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15254,
											"end": 15263,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15235,
											"end": 15274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 15235,
											"end": 15274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15235,
											"end": 15274,
											"name": "tag",
											"source": 4,
											"value": "668"
										},
										{
											"begin": 15235,
											"end": 15274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15223,
											"end": 15274,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 15223,
											"end": 15274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15307,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15312,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15296,
											"end": 15301,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15313,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15313,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15356,
											"end": 15360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15354,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15342,
											"end": 15361,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15335,
											"end": 15340,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15332,
											"end": 15362,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15322,
											"end": 15362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15322,
											"end": 15362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15051,
											"end": 15368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15051,
											"end": 15368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14975,
											"end": 15368,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14975,
											"end": 15368,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14975,
											"end": 15368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14975,
											"end": 15368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14975,
											"end": 15368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14975,
											"end": 15368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15374,
											"end": 15434,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 15374,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15402,
											"end": 15405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15423,
											"end": 15428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15416,
											"end": 15428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15416,
											"end": 15428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15374,
											"end": 15434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15374,
											"end": 15434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15374,
											"end": 15434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15374,
											"end": 15434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15440,
											"end": 15582,
											"name": "tag",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 15440,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15490,
											"end": 15499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15523,
											"end": 15576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "671"
										},
										{
											"begin": 15541,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "672"
										},
										{
											"begin": 15550,
											"end": 15574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "673"
										},
										{
											"begin": 15568,
											"end": 15573,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15550,
											"end": 15574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 15550,
											"end": 15574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15550,
											"end": 15574,
											"name": "tag",
											"source": 4,
											"value": "673"
										},
										{
											"begin": 15550,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15541,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 15541,
											"end": 15575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15541,
											"end": 15575,
											"name": "tag",
											"source": 4,
											"value": "672"
										},
										{
											"begin": 15541,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15523,
											"end": 15576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 15523,
											"end": 15576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15523,
											"end": 15576,
											"name": "tag",
											"source": 4,
											"value": "671"
										},
										{
											"begin": 15523,
											"end": 15576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15510,
											"end": 15576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15510,
											"end": 15576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15440,
											"end": 15582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15440,
											"end": 15582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15440,
											"end": 15582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15440,
											"end": 15582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15588,
											"end": 15663,
											"name": "tag",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 15588,
											"end": 15663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15652,
											"end": 15657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15645,
											"end": 15657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15645,
											"end": 15657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15588,
											"end": 15663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15588,
											"end": 15663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15588,
											"end": 15663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15588,
											"end": 15663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15938,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 15669,
											"end": 15938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15779,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "676"
										},
										{
											"begin": 15810,
											"end": 15817,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15779,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 15779,
											"end": 15818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15779,
											"end": 15818,
											"name": "tag",
											"source": 4,
											"value": "676"
										},
										{
											"begin": 15779,
											"end": 15818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15840,
											"end": 15931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "677"
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "678"
										},
										{
											"begin": 15913,
											"end": 15929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 15889,
											"end": 15930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "tag",
											"source": 4,
											"value": "678"
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15881,
											"end": 15887,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15874,
											"end": 15878,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15868,
											"end": 15879,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15840,
											"end": 15931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 15840,
											"end": 15931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15840,
											"end": 15931,
											"name": "tag",
											"source": 4,
											"value": "677"
										},
										{
											"begin": 15840,
											"end": 15931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15834,
											"end": 15838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15827,
											"end": 15932,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15745,
											"end": 15938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15944,
											"end": 16017,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 15944,
											"end": 16017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15989,
											"end": 15992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15944,
											"end": 16017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15944,
											"end": 16017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16023,
											"end": 16212,
											"name": "tag",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 16023,
											"end": 16212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16100,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "681"
										},
										{
											"begin": 16100,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 16100,
											"end": 16132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16100,
											"end": 16132,
											"name": "tag",
											"source": 4,
											"value": "681"
										},
										{
											"begin": 16100,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16141,
											"end": 16206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "682"
										},
										{
											"begin": 16199,
											"end": 16205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16185,
											"end": 16189,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16141,
											"end": 16206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 16141,
											"end": 16206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16141,
											"end": 16206,
											"name": "tag",
											"source": 4,
											"value": "682"
										},
										{
											"begin": 16141,
											"end": 16206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16023,
											"end": 16212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16023,
											"end": 16212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16023,
											"end": 16212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16218,
											"end": 16404,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 16218,
											"end": 16404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "tag",
											"source": 4,
											"value": "684"
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16295,
											"end": 16298,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16288,
											"end": 16293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16285,
											"end": 16299,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "686"
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16349,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "687"
										},
										{
											"begin": 16386,
											"end": 16387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16379,
											"end": 16384,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16349,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 16349,
											"end": 16388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16349,
											"end": 16388,
											"name": "tag",
											"source": 4,
											"value": "687"
										},
										{
											"begin": 16349,
											"end": 16388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16322,
											"end": 16323,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 16315,
											"end": 16320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16311,
											"end": 16324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16302,
											"end": 16324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16302,
											"end": 16324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "684"
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "tag",
											"source": 4,
											"value": "686"
										},
										{
											"begin": 16278,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16218,
											"end": 16404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16218,
											"end": 16404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16218,
											"end": 16404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16410,
											"end": 16953,
											"name": "tag",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 16410,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16511,
											"end": 16513,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 16506,
											"end": 16509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16503,
											"end": 16514,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 16500,
											"end": 16946,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16500,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "689"
										},
										{
											"begin": 16500,
											"end": 16946,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16545,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "690"
										},
										{
											"begin": 16577,
											"end": 16582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16545,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 16545,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16545,
											"end": 16583,
											"name": "tag",
											"source": 4,
											"value": "690"
										},
										{
											"begin": 16545,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16629,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "691"
										},
										{
											"begin": 16647,
											"end": 16657,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16629,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 16629,
											"end": 16658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16629,
											"end": 16658,
											"name": "tag",
											"source": 4,
											"value": "691"
										},
										{
											"begin": 16629,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16619,
											"end": 16627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16615,
											"end": 16659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16812,
											"end": 16814,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16800,
											"end": 16810,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16797,
											"end": 16815,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 16794,
											"end": 16843,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16794,
											"end": 16843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "692"
										},
										{
											"begin": 16794,
											"end": 16843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16833,
											"end": 16841,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16818,
											"end": 16841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16818,
											"end": 16841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16794,
											"end": 16843,
											"name": "tag",
											"source": 4,
											"value": "692"
										},
										{
											"begin": 16794,
											"end": 16843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16856,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "693"
										},
										{
											"begin": 16912,
											"end": 16934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "694"
										},
										{
											"begin": 16930,
											"end": 16933,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16912,
											"end": 16934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 16912,
											"end": 16934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16912,
											"end": 16934,
											"name": "tag",
											"source": 4,
											"value": "694"
										},
										{
											"begin": 16912,
											"end": 16934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16902,
											"end": 16910,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16898,
											"end": 16935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16885,
											"end": 16896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16856,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 16856,
											"end": 16936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16856,
											"end": 16936,
											"name": "tag",
											"source": 4,
											"value": "693"
										},
										{
											"begin": 16856,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16515,
											"end": 16946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16515,
											"end": 16946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16500,
											"end": 16946,
											"name": "tag",
											"source": 4,
											"value": "689"
										},
										{
											"begin": 16500,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16410,
											"end": 16953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16410,
											"end": 16953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16410,
											"end": 16953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16410,
											"end": 16953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16959,
											"end": 17076,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 16959,
											"end": 17076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17013,
											"end": 17021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17063,
											"end": 17068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17057,
											"end": 17061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17053,
											"end": 17069,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 17032,
											"end": 17069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17032,
											"end": 17069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16959,
											"end": 17076,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16959,
											"end": 17076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16959,
											"end": 17076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16959,
											"end": 17076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16959,
											"end": 17076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17082,
											"end": 17251,
											"name": "tag",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 17082,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17126,
											"end": 17132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17159,
											"end": 17210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "697"
										},
										{
											"begin": 17207,
											"end": 17208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17203,
											"end": 17209,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17195,
											"end": 17200,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17192,
											"end": 17193,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 17188,
											"end": 17201,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 17159,
											"end": 17210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 17159,
											"end": 17210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17159,
											"end": 17210,
											"name": "tag",
											"source": 4,
											"value": "697"
										},
										{
											"begin": 17159,
											"end": 17210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17155,
											"end": 17211,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17240,
											"end": 17244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17234,
											"end": 17238,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17230,
											"end": 17245,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17220,
											"end": 17245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17220,
											"end": 17245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17133,
											"end": 17251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17082,
											"end": 17251,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17082,
											"end": 17251,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17082,
											"end": 17251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17082,
											"end": 17251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17082,
											"end": 17251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17256,
											"end": 17551,
											"name": "tag",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 17256,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17332,
											"end": 17336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17478,
											"end": 17507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "699"
										},
										{
											"begin": 17503,
											"end": 17506,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17497,
											"end": 17501,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17478,
											"end": 17507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 17478,
											"end": 17507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17478,
											"end": 17507,
											"name": "tag",
											"source": 4,
											"value": "699"
										},
										{
											"begin": 17478,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17470,
											"end": 17507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17470,
											"end": 17507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17540,
											"end": 17543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17537,
											"end": 17538,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 17533,
											"end": 17544,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 17527,
											"end": 17531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17524,
											"end": 17545,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 17516,
											"end": 17545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17516,
											"end": 17545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17256,
											"end": 17551,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17256,
											"end": 17551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17256,
											"end": 17551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17256,
											"end": 17551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17256,
											"end": 17551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 18951,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 17556,
											"end": 18951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17673,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "701"
										},
										{
											"begin": 17706,
											"end": 17709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17673,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 17673,
											"end": 17710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17673,
											"end": 17710,
											"name": "tag",
											"source": 4,
											"value": "701"
										},
										{
											"begin": 17673,
											"end": 17710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17775,
											"end": 17793,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17767,
											"end": 17773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17764,
											"end": 17794,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17761,
											"end": 17817,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17761,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "702"
										},
										{
											"begin": 17761,
											"end": 17817,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17797,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "703"
										},
										{
											"begin": 17797,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 17797,
											"end": 17815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17797,
											"end": 17815,
											"name": "tag",
											"source": 4,
											"value": "703"
										},
										{
											"begin": 17797,
											"end": 17815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17761,
											"end": 17817,
											"name": "tag",
											"source": 4,
											"value": "702"
										},
										{
											"begin": 17761,
											"end": 17817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17841,
											"end": 17879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "704"
										},
										{
											"begin": 17873,
											"end": 17877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17867,
											"end": 17878,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 17841,
											"end": 17879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 17841,
											"end": 17879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17841,
											"end": 17879,
											"name": "tag",
											"source": 4,
											"value": "704"
										},
										{
											"begin": 17841,
											"end": 17879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17926,
											"end": 17993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "705"
										},
										{
											"begin": 17986,
											"end": 17992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17978,
											"end": 17984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17972,
											"end": 17976,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17926,
											"end": 17993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 17926,
											"end": 17993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17926,
											"end": 17993,
											"name": "tag",
											"source": 4,
											"value": "705"
										},
										{
											"begin": 17926,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18020,
											"end": 18021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18044,
											"end": 18048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18031,
											"end": 18048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18031,
											"end": 18048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18076,
											"end": 18078,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 18068,
											"end": 18074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 18065,
											"end": 18079,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 18093,
											"end": 18094,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 18088,
											"end": 18706,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18088,
											"end": 18706,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 18088,
											"end": 18706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "707"
										},
										{
											"begin": 18088,
											"end": 18706,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 18750,
											"end": 18751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18767,
											"end": 18773,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 18764,
											"end": 18841,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 18764,
											"end": 18841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "708"
										},
										{
											"begin": 18764,
											"end": 18841,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 18816,
											"end": 18825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18811,
											"end": 18814,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 18807,
											"end": 18826,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18801,
											"end": 18827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 18792,
											"end": 18827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18792,
											"end": 18827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18764,
											"end": 18841,
											"name": "tag",
											"source": 4,
											"value": "708"
										},
										{
											"begin": 18764,
											"end": 18841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18867,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "709"
										},
										{
											"begin": 18927,
											"end": 18933,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 18920,
											"end": 18925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18867,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 18867,
											"end": 18934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18867,
											"end": 18934,
											"name": "tag",
											"source": 4,
											"value": "709"
										},
										{
											"begin": 18867,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18861,
											"end": 18865,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 18854,
											"end": 18935,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18723,
											"end": 18945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18058,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "706"
										},
										{
											"begin": 18058,
											"end": 18945,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18088,
											"end": 18706,
											"name": "tag",
											"source": 4,
											"value": "707"
										},
										{
											"begin": 18088,
											"end": 18706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18140,
											"end": 18144,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 18136,
											"end": 18145,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 18128,
											"end": 18134,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 18124,
											"end": 18146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 18174,
											"end": 18211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "710"
										},
										{
											"begin": 18206,
											"end": 18210,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 18174,
											"end": 18211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 18174,
											"end": 18211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18174,
											"end": 18211,
											"name": "tag",
											"source": 4,
											"value": "710"
										},
										{
											"begin": 18174,
											"end": 18211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18233,
											"end": 18234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "tag",
											"source": 4,
											"value": "711"
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18261,
											"end": 18268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18258,
											"end": 18259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18255,
											"end": 18269,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "713"
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 18340,
											"end": 18349,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 18335,
											"end": 18338,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 18331,
											"end": 18350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 18317,
											"end": 18323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18310,
											"end": 18352,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18391,
											"end": 18392,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 18383,
											"end": 18389,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18379,
											"end": 18393,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18369,
											"end": 18393,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 18369,
											"end": 18393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18438,
											"end": 18440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18427,
											"end": 18436,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 18423,
											"end": 18441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18410,
											"end": 18441,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 18410,
											"end": 18441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18284,
											"end": 18288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18281,
											"end": 18282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18277,
											"end": 18289,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18272,
											"end": 18289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18272,
											"end": 18289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "711"
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "tag",
											"source": 4,
											"value": "713"
										},
										{
											"begin": 18247,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18483,
											"end": 18489,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 18474,
											"end": 18481,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 18471,
											"end": 18490,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 18468,
											"end": 18647,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 18468,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "714"
										},
										{
											"begin": 18468,
											"end": 18647,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 18541,
											"end": 18550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 18536,
											"end": 18539,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 18532,
											"end": 18551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18526,
											"end": 18552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 18584,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "715"
										},
										{
											"begin": 18626,
											"end": 18630,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 18618,
											"end": 18624,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 18614,
											"end": 18631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 18603,
											"end": 18612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18584,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 18584,
											"end": 18632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18584,
											"end": 18632,
											"name": "tag",
											"source": 4,
											"value": "715"
										},
										{
											"begin": 18584,
											"end": 18632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18576,
											"end": 18582,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 18569,
											"end": 18633,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18491,
											"end": 18647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18468,
											"end": 18647,
											"name": "tag",
											"source": 4,
											"value": "714"
										},
										{
											"begin": 18468,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18693,
											"end": 18694,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 18689,
											"end": 18690,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 18681,
											"end": 18687,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 18677,
											"end": 18691,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 18673,
											"end": 18695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18667,
											"end": 18671,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 18660,
											"end": 18696,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18095,
											"end": 18706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18095,
											"end": 18706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18095,
											"end": 18706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18058,
											"end": 18945,
											"name": "tag",
											"source": 4,
											"value": "706"
										},
										{
											"begin": 18058,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18058,
											"end": 18945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17648,
											"end": 18951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17648,
											"end": 18951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17648,
											"end": 18951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 18951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 18951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 18951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18957,
											"end": 19136,
											"name": "tag",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 18957,
											"end": 19136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19097,
											"end": 19128,
											"name": "PUSH",
											"source": 4,
											"value": "796F7520617265206E6F7420617070726F7665642020746F206D696E74000000"
										},
										{
											"begin": 19093,
											"end": 19094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 19085,
											"end": 19091,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19081,
											"end": 19095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 19074,
											"end": 19129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18957,
											"end": 19136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18957,
											"end": 19136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19142,
											"end": 19508,
											"name": "tag",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 19142,
											"end": 19508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19284,
											"end": 19287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 19305,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "718"
										},
										{
											"begin": 19369,
											"end": 19371,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 19364,
											"end": 19367,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 19305,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 19305,
											"end": 19372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19305,
											"end": 19372,
											"name": "tag",
											"source": 4,
											"value": "718"
										},
										{
											"begin": 19305,
											"end": 19372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19298,
											"end": 19372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 19298,
											"end": 19372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19381,
											"end": 19474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "719"
										},
										{
											"begin": 19470,
											"end": 19473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19381,
											"end": 19474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 19381,
											"end": 19474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19381,
											"end": 19474,
											"name": "tag",
											"source": 4,
											"value": "719"
										},
										{
											"begin": 19381,
											"end": 19474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19499,
											"end": 19501,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 19494,
											"end": 19497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19490,
											"end": 19502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 19483,
											"end": 19502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19483,
											"end": 19502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19142,
											"end": 19508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 19142,
											"end": 19508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19142,
											"end": 19508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19142,
											"end": 19508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19514,
											"end": 19933,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 19514,
											"end": 19933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19680,
											"end": 19684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 19718,
											"end": 19720,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 19707,
											"end": 19716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19703,
											"end": 19721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 19695,
											"end": 19721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19695,
											"end": 19721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19767,
											"end": 19776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19761,
											"end": 19765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19757,
											"end": 19777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 19753,
											"end": 19754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 19742,
											"end": 19751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 19738,
											"end": 19755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 19731,
											"end": 19778,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 19795,
											"end": 19926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "721"
										},
										{
											"begin": 19921,
											"end": 19925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19795,
											"end": 19926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 19795,
											"end": 19926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19795,
											"end": 19926,
											"name": "tag",
											"source": 4,
											"value": "721"
										},
										{
											"begin": 19795,
											"end": 19926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19787,
											"end": 19926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19787,
											"end": 19926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19514,
											"end": 19933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 19514,
											"end": 19933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19514,
											"end": 19933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19514,
											"end": 19933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19939,
											"end": 20087,
											"name": "tag",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 19939,
											"end": 20087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20041,
											"end": 20052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 20078,
											"end": 20081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20063,
											"end": 20081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20063,
											"end": 20081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19939,
											"end": 20087,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 19939,
											"end": 20087,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 19939,
											"end": 20087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19939,
											"end": 20087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 19939,
											"end": 20087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20093,
											"end": 20483,
											"name": "tag",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 20093,
											"end": 20483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20199,
											"end": 20202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 20227,
											"end": 20266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "724"
										},
										{
											"begin": 20260,
											"end": 20265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 20227,
											"end": 20266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 20227,
											"end": 20266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20227,
											"end": 20266,
											"name": "tag",
											"source": 4,
											"value": "724"
										},
										{
											"begin": 20227,
											"end": 20266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20282,
											"end": 20371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "725"
										},
										{
											"begin": 20364,
											"end": 20370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20359,
											"end": 20362,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 20282,
											"end": 20371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 20282,
											"end": 20371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20282,
											"end": 20371,
											"name": "tag",
											"source": 4,
											"value": "725"
										},
										{
											"begin": 20282,
											"end": 20371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20275,
											"end": 20371,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 20275,
											"end": 20371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20380,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "726"
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20433,
											"end": 20436,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 20426,
											"end": 20430,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 20419,
											"end": 20424,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 20415,
											"end": 20431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 20380,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 20380,
											"end": 20445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20380,
											"end": 20445,
											"name": "tag",
											"source": 4,
											"value": "726"
										},
										{
											"begin": 20380,
											"end": 20445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20470,
											"end": 20476,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 20465,
											"end": 20468,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 20461,
											"end": 20477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 20454,
											"end": 20477,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20454,
											"end": 20477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20203,
											"end": 20483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20093,
											"end": 20483,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 20093,
											"end": 20483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20093,
											"end": 20483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20093,
											"end": 20483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20093,
											"end": 20483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20513,
											"end": 21387,
											"name": "tag",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 20513,
											"end": 21387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20616,
											"end": 20619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 20653,
											"end": 20658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20647,
											"end": 20659,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20682,
											"end": 20718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "728"
										},
										{
											"begin": 20708,
											"end": 20717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20682,
											"end": 20718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 20682,
											"end": 20718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20682,
											"end": 20718,
											"name": "tag",
											"source": 4,
											"value": "728"
										},
										{
											"begin": 20682,
											"end": 20718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20734,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "729"
										},
										{
											"begin": 20816,
											"end": 20822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20811,
											"end": 20814,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 20734,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 20734,
											"end": 20823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20734,
											"end": 20823,
											"name": "tag",
											"source": 4,
											"value": "729"
										},
										{
											"begin": 20734,
											"end": 20823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20727,
											"end": 20823,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 20727,
											"end": 20823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20854,
											"end": 20855,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 20843,
											"end": 20852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 20839,
											"end": 20856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 20870,
											"end": 20871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "731"
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 21045,
											"end": 21046,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 21040,
											"end": 21381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21040,
											"end": 21381,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 21040,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "732"
										},
										{
											"begin": 21040,
											"end": 21381,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 20832,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "730"
										},
										{
											"begin": 20832,
											"end": 21381,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "tag",
											"source": 4,
											"value": "731"
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20949,
											"end": 20953,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 20945,
											"end": 20954,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 20934,
											"end": 20943,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 20930,
											"end": 20955,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 20925,
											"end": 20928,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 20918,
											"end": 20956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 21011,
											"end": 21017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21004,
											"end": 21018,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 20997,
											"end": 21019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 20989,
											"end": 20995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 20985,
											"end": 21020,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 20980,
											"end": 20983,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 20976,
											"end": 21021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 20969,
											"end": 21021,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 20969,
											"end": 21021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "730"
										},
										{
											"begin": 20865,
											"end": 21031,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21040,
											"end": 21381,
											"name": "tag",
											"source": 4,
											"value": "732"
										},
										{
											"begin": 21040,
											"end": 21381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21107,
											"end": 21145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "733"
										},
										{
											"begin": 21139,
											"end": 21144,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 21107,
											"end": 21145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 21107,
											"end": 21145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21107,
											"end": 21145,
											"name": "tag",
											"source": 4,
											"value": "733"
										},
										{
											"begin": 21107,
											"end": 21145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21167,
											"end": 21168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "tag",
											"source": 4,
											"value": "734"
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21195,
											"end": 21201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 21192,
											"end": 21193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21189,
											"end": 21202,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "736"
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 21269,
											"end": 21276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21263,
											"end": 21277,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 21259,
											"end": 21260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21254,
											"end": 21257,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 21250,
											"end": 21261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 21243,
											"end": 21278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 21319,
											"end": 21320,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 21310,
											"end": 21317,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 21306,
											"end": 21321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 21295,
											"end": 21321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 21295,
											"end": 21321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21217,
											"end": 21221,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 21214,
											"end": 21215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21210,
											"end": 21222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 21205,
											"end": 21222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 21205,
											"end": 21222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "734"
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "tag",
											"source": 4,
											"value": "736"
										},
										{
											"begin": 21181,
											"end": 21335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21364,
											"end": 21370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 21359,
											"end": 21362,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 21355,
											"end": 21371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 21348,
											"end": 21371,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 21348,
											"end": 21371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21047,
											"end": 21381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21047,
											"end": 21381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20832,
											"end": 21381,
											"name": "tag",
											"source": 4,
											"value": "730"
										},
										{
											"begin": 20832,
											"end": 21381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20832,
											"end": 21381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20620,
											"end": 21387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20620,
											"end": 21387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20513,
											"end": 21387,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 20513,
											"end": 21387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20513,
											"end": 21387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20513,
											"end": 21387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20513,
											"end": 21387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21618,
											"end": 21621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 21640,
											"end": 21735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "738"
										},
										{
											"begin": 21731,
											"end": 21734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 21722,
											"end": 21728,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 21640,
											"end": 21735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 21640,
											"end": 21735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21640,
											"end": 21735,
											"name": "tag",
											"source": 4,
											"value": "738"
										},
										{
											"begin": 21640,
											"end": 21735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21633,
											"end": 21735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 21633,
											"end": 21735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21752,
											"end": 21847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "739"
										},
										{
											"begin": 21843,
											"end": 21846,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 21834,
											"end": 21840,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 21752,
											"end": 21847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 21752,
											"end": 21847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21752,
											"end": 21847,
											"name": "tag",
											"source": 4,
											"value": "739"
										},
										{
											"begin": 21752,
											"end": 21847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21745,
											"end": 21847,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 21745,
											"end": 21847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21864,
											"end": 21956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "740"
										},
										{
											"begin": 21952,
											"end": 21955,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 21943,
											"end": 21949,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 21864,
											"end": 21956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 21864,
											"end": 21956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21864,
											"end": 21956,
											"name": "tag",
											"source": 4,
											"value": "740"
										},
										{
											"begin": 21864,
											"end": 21956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 21857,
											"end": 21956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 21857,
											"end": 21956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21973,
											"end": 21976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21966,
											"end": 21976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 21966,
											"end": 21976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21393,
											"end": 21982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21988,
											"end": 22213,
											"name": "tag",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 21988,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22128,
											"end": 22162,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22124,
											"end": 22125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 22116,
											"end": 22122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 22112,
											"end": 22126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22105,
											"end": 22163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22197,
											"end": 22205,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22192,
											"end": 22194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 22184,
											"end": 22190,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 22180,
											"end": 22195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22173,
											"end": 22206,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 21988,
											"end": 22213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 21988,
											"end": 22213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "tag",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22361,
											"end": 22364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 22446,
											"end": 22448,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 22441,
											"end": 22444,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 22382,
											"end": 22449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "tag",
											"source": 4,
											"value": "743"
										},
										{
											"begin": 22382,
											"end": 22449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22375,
											"end": 22449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22375,
											"end": 22449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "744"
										},
										{
											"begin": 22547,
											"end": 22550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 22458,
											"end": 22551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "tag",
											"source": 4,
											"value": "744"
										},
										{
											"begin": 22458,
											"end": 22551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22576,
											"end": 22578,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22571,
											"end": 22574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 22567,
											"end": 22579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22560,
											"end": 22579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22560,
											"end": 22579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22219,
											"end": 22585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22219,
											"end": 22585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22757,
											"end": 22761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 22795,
											"end": 22797,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 22784,
											"end": 22793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 22780,
											"end": 22798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22772,
											"end": 22798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22772,
											"end": 22798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22844,
											"end": 22853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22838,
											"end": 22842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22834,
											"end": 22854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 22830,
											"end": 22831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 22819,
											"end": 22828,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 22815,
											"end": 22832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22808,
											"end": 22855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "746"
										},
										{
											"begin": 22998,
											"end": 23002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 22872,
											"end": 23003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "tag",
											"source": 4,
											"value": "746"
										},
										{
											"begin": 22872,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22864,
											"end": 23003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22864,
											"end": 23003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22591,
											"end": 23010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22591,
											"end": 23010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23016,
											"end": 23196,
											"name": "tag",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 23016,
											"end": 23196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23064,
											"end": 23141,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23061,
											"end": 23062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23054,
											"end": 23142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23161,
											"end": 23165,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 23158,
											"end": 23159,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 23151,
											"end": 23166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23185,
											"end": 23189,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 23182,
											"end": 23183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23175,
											"end": 23190,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 23202,
											"end": 23373,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 23202,
											"end": 23373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23241,
											"end": 23244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23264,
											"end": 23288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "749"
										},
										{
											"begin": 23282,
											"end": 23287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23264,
											"end": 23288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 23264,
											"end": 23288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23264,
											"end": 23288,
											"name": "tag",
											"source": 4,
											"value": "749"
										},
										{
											"begin": 23264,
											"end": 23288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23255,
											"end": 23288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23255,
											"end": 23288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23310,
											"end": 23314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23303,
											"end": 23308,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23300,
											"end": 23315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 23297,
											"end": 23338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "750"
										},
										{
											"begin": 23297,
											"end": 23338,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 23318,
											"end": 23336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "751"
										},
										{
											"begin": 23318,
											"end": 23336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 23318,
											"end": 23336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23318,
											"end": 23336,
											"name": "tag",
											"source": 4,
											"value": "751"
										},
										{
											"begin": 23318,
											"end": 23336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23297,
											"end": 23338,
											"name": "tag",
											"source": 4,
											"value": "750"
										},
										{
											"begin": 23297,
											"end": 23338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23365,
											"end": 23366,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 23358,
											"end": 23363,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23354,
											"end": 23367,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 23347,
											"end": 23367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23347,
											"end": 23367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23202,
											"end": 23373,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23202,
											"end": 23373,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23202,
											"end": 23373,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23202,
											"end": 23373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23379,
											"end": 23561,
											"name": "tag",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 23379,
											"end": 23561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23519,
											"end": 23553,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23515,
											"end": 23516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23507,
											"end": 23513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23503,
											"end": 23517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 23496,
											"end": 23554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23379,
											"end": 23561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23379,
											"end": 23561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23567,
											"end": 23933,
											"name": "tag",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 23567,
											"end": 23933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23709,
											"end": 23712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23730,
											"end": 23797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "754"
										},
										{
											"begin": 23794,
											"end": 23796,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 23789,
											"end": 23792,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 23730,
											"end": 23797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 23730,
											"end": 23797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23730,
											"end": 23797,
											"name": "tag",
											"source": 4,
											"value": "754"
										},
										{
											"begin": 23730,
											"end": 23797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23723,
											"end": 23797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23723,
											"end": 23797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23806,
											"end": 23899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "755"
										},
										{
											"begin": 23895,
											"end": 23898,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23806,
											"end": 23899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 23806,
											"end": 23899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23806,
											"end": 23899,
											"name": "tag",
											"source": 4,
											"value": "755"
										},
										{
											"begin": 23806,
											"end": 23899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 23924,
											"end": 23926,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 23919,
											"end": 23922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23915,
											"end": 23927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 23908,
											"end": 23927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23908,
											"end": 23927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23567,
											"end": 23933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23567,
											"end": 23933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23567,
											"end": 23933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23567,
											"end": 23933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 23939,
											"end": 24358,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 23939,
											"end": 24358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24105,
											"end": 24109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24143,
											"end": 24145,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 24132,
											"end": 24141,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 24128,
											"end": 24146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 24120,
											"end": 24146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24120,
											"end": 24146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24192,
											"end": 24201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24186,
											"end": 24190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24182,
											"end": 24202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 24178,
											"end": 24179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24167,
											"end": 24176,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 24163,
											"end": 24180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 24156,
											"end": 24203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24220,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "757"
										},
										{
											"begin": 24346,
											"end": 24350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24220,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 24220,
											"end": 24351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24220,
											"end": 24351,
											"name": "tag",
											"source": 4,
											"value": "757"
										},
										{
											"begin": 24220,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24212,
											"end": 24351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24212,
											"end": 24351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23939,
											"end": 24358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23939,
											"end": 24358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23939,
											"end": 24358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 23939,
											"end": 24358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24364,
											"end": 24462,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 24364,
											"end": 24462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24415,
											"end": 24421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24449,
											"end": 24454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24443,
											"end": 24455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 24433,
											"end": 24455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24433,
											"end": 24455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24364,
											"end": 24462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 24364,
											"end": 24462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24364,
											"end": 24462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24364,
											"end": 24462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24468,
											"end": 24636,
											"name": "tag",
											"source": 4,
											"value": "493"
										},
										{
											"begin": 24468,
											"end": 24636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24551,
											"end": 24562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24585,
											"end": 24591,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 24580,
											"end": 24583,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 24573,
											"end": 24592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24625,
											"end": 24629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 24620,
											"end": 24623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 24616,
											"end": 24630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 24601,
											"end": 24630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24601,
											"end": 24630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24468,
											"end": 24636,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 24468,
											"end": 24636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 24468,
											"end": 24636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24468,
											"end": 24636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24468,
											"end": 24636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24642,
											"end": 25015,
											"name": "tag",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 24642,
											"end": 25015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24728,
											"end": 24731,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24756,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "761"
										},
										{
											"begin": 24788,
											"end": 24793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 24756,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 24756,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24756,
											"end": 24794,
											"name": "tag",
											"source": 4,
											"value": "761"
										},
										{
											"begin": 24756,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24810,
											"end": 24880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "762"
										},
										{
											"begin": 24873,
											"end": 24879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24868,
											"end": 24871,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 24810,
											"end": 24880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "493"
										},
										{
											"begin": 24810,
											"end": 24880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24810,
											"end": 24880,
											"name": "tag",
											"source": 4,
											"value": "762"
										},
										{
											"begin": 24810,
											"end": 24880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24803,
											"end": 24880,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 24803,
											"end": 24880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24889,
											"end": 24954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "763"
										},
										{
											"begin": 24947,
											"end": 24953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24942,
											"end": 24945,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 24935,
											"end": 24939,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 24928,
											"end": 24933,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 24924,
											"end": 24940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 24889,
											"end": 24954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 24889,
											"end": 24954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24889,
											"end": 24954,
											"name": "tag",
											"source": 4,
											"value": "763"
										},
										{
											"begin": 24889,
											"end": 24954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24979,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "764"
										},
										{
											"begin": 25001,
											"end": 25007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24979,
											"end": 25008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 24979,
											"end": 25008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 24979,
											"end": 25008,
											"name": "tag",
											"source": 4,
											"value": "764"
										},
										{
											"begin": 24979,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24974,
											"end": 24977,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 24970,
											"end": 25009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 24963,
											"end": 25009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 24963,
											"end": 25009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24732,
											"end": 25015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24642,
											"end": 25015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 24642,
											"end": 25015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 24642,
											"end": 25015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24642,
											"end": 25015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24642,
											"end": 25015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25216,
											"end": 25220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25254,
											"end": 25257,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 25243,
											"end": 25252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 25239,
											"end": 25258,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25268,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "766"
										},
										{
											"begin": 25336,
											"end": 25337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25325,
											"end": 25334,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25321,
											"end": 25338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25312,
											"end": 25318,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 25268,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 25268,
											"end": 25339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25268,
											"end": 25339,
											"name": "tag",
											"source": 4,
											"value": "766"
										},
										{
											"begin": 25268,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25349,
											"end": 25421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "767"
										},
										{
											"begin": 25417,
											"end": 25419,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 25406,
											"end": 25415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25402,
											"end": 25420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25393,
											"end": 25399,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 25349,
											"end": 25421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 25349,
											"end": 25421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25349,
											"end": 25421,
											"name": "tag",
											"source": 4,
											"value": "767"
										},
										{
											"begin": 25349,
											"end": 25421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25431,
											"end": 25503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "768"
										},
										{
											"begin": 25499,
											"end": 25501,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25488,
											"end": 25497,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25484,
											"end": 25502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25475,
											"end": 25481,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 25431,
											"end": 25503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 25431,
											"end": 25503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25431,
											"end": 25503,
											"name": "tag",
											"source": 4,
											"value": "768"
										},
										{
											"begin": 25431,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25550,
											"end": 25559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25544,
											"end": 25548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25540,
											"end": 25560,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 25535,
											"end": 25537,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 25524,
											"end": 25533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25520,
											"end": 25538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25513,
											"end": 25561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 25578,
											"end": 25654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "769"
										},
										{
											"begin": 25649,
											"end": 25653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25640,
											"end": 25646,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 25578,
											"end": 25654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 25578,
											"end": 25654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25578,
											"end": 25654,
											"name": "tag",
											"source": 4,
											"value": "769"
										},
										{
											"begin": 25578,
											"end": 25654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25570,
											"end": 25654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25570,
											"end": 25654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25021,
											"end": 25661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25667,
											"end": 25808,
											"name": "tag",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 25667,
											"end": 25808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25723,
											"end": 25728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25754,
											"end": 25760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25748,
											"end": 25761,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 25739,
											"end": 25761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25739,
											"end": 25761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "771"
										},
										{
											"begin": 25796,
											"end": 25801,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 25770,
											"end": 25802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "tag",
											"source": 4,
											"value": "771"
										},
										{
											"begin": 25770,
											"end": 25802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25667,
											"end": 25808,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25667,
											"end": 25808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 25667,
											"end": 25808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25667,
											"end": 25808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25667,
											"end": 25808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25814,
											"end": 26163,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 25814,
											"end": 26163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25883,
											"end": 25889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25932,
											"end": 25934,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 25920,
											"end": 25929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 25911,
											"end": 25918,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 25907,
											"end": 25930,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 25903,
											"end": 25935,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 25900,
											"end": 26019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 25900,
											"end": 26019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "773"
										},
										{
											"begin": 25900,
											"end": 26019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25938,
											"end": 26017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "774"
										},
										{
											"begin": 25938,
											"end": 26017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 25938,
											"end": 26017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25938,
											"end": 26017,
											"name": "tag",
											"source": 4,
											"value": "774"
										},
										{
											"begin": 25938,
											"end": 26017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25900,
											"end": 26019,
											"name": "tag",
											"source": 4,
											"value": "773"
										},
										{
											"begin": 25900,
											"end": 26019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26058,
											"end": 26059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 26083,
											"end": 26146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "775"
										},
										{
											"begin": 26138,
											"end": 26145,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 26129,
											"end": 26135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 26118,
											"end": 26127,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 26114,
											"end": 26136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 26083,
											"end": 26146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 26083,
											"end": 26146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 26083,
											"end": 26146,
											"name": "tag",
											"source": 4,
											"value": "775"
										},
										{
											"begin": 26083,
											"end": 26146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 26073,
											"end": 26146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 26073,
											"end": 26146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 26029,
											"end": 26156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25814,
											"end": 26163,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 25814,
											"end": 26163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 25814,
											"end": 26163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25814,
											"end": 26163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25814,
											"end": 26163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"IERC721A.sol",
								"chestNft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseURI_()": "f259a29e",
							"checkredeemednftid()": "50caa341",
							"checkredemmedphysicalitem(uint256)": "f0c7b3aa",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"redeemPhysicalItem(uint256)": "dc76668d",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"setUriSuffix(string)": "16ba10e0",
							"setapprovedcontractaddress(address)": "b6b285d9",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uriSuffix()": "5503a0e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI_\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkredeemednftid\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"checkredemmedphysicalitem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"redeemPhysicalItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uriSuffix\",\"type\":\"string\"}],\"name\":\"setUriSuffix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"setapprovedcontractaddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uriSuffix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"chestNft.sol\":\"KleptoGnomeLootChest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC721A.sol\":{\"keccak256\":\"0x93ac89d27a12c97f51960001724c5adb638424ac67ffc02264ab7f7d16865ad8\",\"urls\":[\"bzz-raw://a914beb3cdcede29abf7714738a6c50e2c0e2108b07b79b954cb6a48d13c7ced\",\"dweb:/ipfs/QmSUer9R6GbPgzWQsNhE5Hq2xZBaX63dh2D1YDbTfkRrwK\"]},\"chestNft.sol\":{\"keccak256\":\"0x07bdbafbd709ea5f5ad9296ae7733b1464abcfbb9606cc39382928bc92ec5ac1\",\"urls\":[\"bzz-raw://4489b8d8aa62b54b62ab7db8ce03ba9b2c62a502d3e6a88fed9757f6f8e083e3\",\"dweb:/ipfs/QmcLhrW4ptB5su8Bp1pqjcmXc8NwR2TpZzfeB6i3pBxkDq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 401,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 403,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 405,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 407,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 409,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "baseURI_",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 412,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "uriSuffix",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 417,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "nftsredeemed",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 419,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "counter",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 423,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "onlyapprovedcontractaddress",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 429,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_checkredemmedphysicalitem",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 433,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 437,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 442,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)333_storage)"
							},
							{
								"astId": 448,
								"contract": "chestNft.sol:KleptoGnomeLootChest",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)333_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)333_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)333_storage": {
								"encoding": "inplace",
								"label": "struct KleptoGnomeLootChest.TokenApprovalRef",
								"members": [
									{
										"astId": 332,
										"contract": "chestNft.sol:KleptoGnomeLootChest",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> IERC721A.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "IERC721A.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> chestNft.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "chestNft.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"IERC721A.sol": {
				"ast": {
					"absolutePath": "IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							308
						]
					},
					"id": 309,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "4:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 308,
							"linearizedBaseContracts": [
								308
							],
							"name": "IERC721A",
							"nameLocation": "43:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "cfb3b942",
									"id": 138,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "70:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "103:2:2"
									},
									"src": "64:42:2"
								},
								{
									"errorSelector": "cf4700e4",
									"id": 140,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "126:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:2"
									},
									"src": "120:41:2"
								},
								{
									"errorSelector": "8f4eb604",
									"id": 142,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "180:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "206:2:2"
									},
									"src": "174:35:2"
								},
								{
									"errorSelector": "2e076300",
									"id": 144,
									"name": "MintToZeroAddress",
									"nameLocation": "228:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:2:2"
									},
									"src": "222:26:2"
								},
								{
									"errorSelector": "b562e8dd",
									"id": 146,
									"name": "MintZeroQuantity",
									"nameLocation": "268:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:2:2"
									},
									"src": "262:25:2"
								},
								{
									"errorSelector": "df2d9b42",
									"id": 148,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "306:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:2:2"
									},
									"src": "300:38:2"
								},
								{
									"errorSelector": "59c896be",
									"id": 150,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "358:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:2"
									},
									"src": "352:42:2"
								},
								{
									"errorSelector": "a1148100",
									"id": 152,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "414:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:2"
									},
									"src": "408:35:2"
								},
								{
									"errorSelector": "d1a57ed6",
									"id": 154,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "463:38:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:2"
									},
									"src": "457:47:2"
								},
								{
									"errorSelector": "ea553b34",
									"id": 156,
									"name": "TransferToZeroAddress",
									"nameLocation": "522:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"src": "516:30:2"
								},
								{
									"errorSelector": "a14c4b50",
									"id": 158,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "565:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:2"
									},
									"src": "559:36:2"
								},
								{
									"errorSelector": "3db1f9af",
									"id": 160,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "614:31:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:2"
									},
									"src": "608:40:2"
								},
								{
									"errorSelector": "00d58153",
									"id": 162,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "668:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:2:2"
									},
									"src": "662:44:2"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 171,
									"members": [
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "770:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "762:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 163,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 166,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "802:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "795:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 165,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "795:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "841:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "836:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 167,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "836:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 170,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "875:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 171,
											"src": "868:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 169,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "868:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "726:14:2",
									"nodeType": "StructDefinition",
									"scope": 308,
									"src": "719:173:2",
									"visibility": "public"
								},
								{
									"functionSelector": "18160ddd",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "914:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:2:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "951:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:9:2"
									},
									"scope": 308,
									"src": "905:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01ffc9a7",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "981:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1006:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "999:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 177,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "999:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:20:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:6:2"
									},
									"scope": 308,
									"src": "972:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 191,
									"name": "Transfer",
									"nameLocation": "1067:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1092:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1076:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1114:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1098:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1118:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:67:2"
									},
									"src": "1061:82:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 199,
									"name": "Approval",
									"nameLocation": "1162:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1187:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1171:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1210:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1194:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1220:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:74:2"
									},
									"src": "1156:89:2"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 207,
									"name": "ApprovalForAll",
									"nameLocation": "1259:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1290:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1274:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1313:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1297:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1328:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1323:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:64:2"
									},
									"src": "1253:85:2"
								},
								{
									"functionSelector": "70a08231",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1358:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1376:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1368:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:15:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1414:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1406:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:2"
									},
									"scope": 308,
									"src": "1349:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1445:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:17:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1501:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1493:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:15:2"
									},
									"scope": 308,
									"src": "1436:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b88d4fde",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1529:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1564:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1556:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1579:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1608:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1600:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1641:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1626:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1626:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:107:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:2"
									},
									"scope": 308,
									"src": "1520:150:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42842e0e",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1693:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1728:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1720:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1751:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1743:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:77:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1803:0:2"
									},
									"scope": 308,
									"src": "1684:120:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1826:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1857:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1849:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1880:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1872:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1901:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1893:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:77:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 308,
									"src": "1817:116:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1955:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1971:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1963:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1983:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1975:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:29:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:0:2"
									},
									"scope": 308,
									"src": "1946:63:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2030:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2056:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2048:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "2071:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2066:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2066:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:34:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:0:2"
									},
									"scope": 308,
									"src": "2021:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "081812fc",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "2113:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2133:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2125:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:17:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2173:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 308,
									"src": "2104:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2205:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2230:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2222:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2245:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2237:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:33:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2278:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:6:2"
									},
									"scope": 308,
									"src": "2196:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2306:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:2:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2336:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2336:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:15:2"
									},
									"scope": 308,
									"src": "2297:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2406:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2406:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:15:2"
									},
									"scope": 308,
									"src": "2365:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c87b56dd",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2443:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:17:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2492:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2492:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:15:2"
									},
									"scope": 308,
									"src": "2434:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 307,
									"name": "ConsecutiveTransfer",
									"nameLocation": "2526:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "2562:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2546:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "2583:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2575:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2610:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2594:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2632:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2616:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:90:2"
									},
									"src": "2520:116:2"
								}
							],
							"scope": 309,
							"src": "33:2606:2",
							"usedErrors": [
								138,
								140,
								142,
								144,
								146,
								148,
								150,
								152,
								154,
								156,
								158,
								160,
								162
							]
						}
					],
					"src": "4:2635:2"
				},
				"id": 2
			},
			"chestNft.sol": {
				"ast": {
					"absolutePath": "chestNft.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"ERC721A__IERC721Receiver": [
							326
						],
						"IERC721A": [
							308
						],
						"KleptoGnomeLootChest": [
							2206
						],
						"Ownable": [
							112
						]
					},
					"id": 2207,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:3"
						},
						{
							"absolutePath": "IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2207,
							"sourceUnit": 309,
							"src": "29:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2207,
							"sourceUnit": 113,
							"src": "55:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 326,
							"linearizedBaseContracts": [
								326
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "123:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "164:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "199:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "191:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "226:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "218:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "249:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "241:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "282:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "267:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "267:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:113:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "312:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 322,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:8:3"
									},
									"scope": 326,
									"src": "155:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2207,
							"src": "113:210:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 327,
										"name": "IERC721A",
										"nameLocations": [
											"362:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 308,
										"src": "362:8:3"
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "362:8:3"
								},
								{
									"baseName": {
										"id": 329,
										"name": "Ownable",
										"nameLocations": [
											"371:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "371:7:3"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "371:7:3"
								}
							],
							"canonicalName": "KleptoGnomeLootChest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2206,
							"linearizedBaseContracts": [
								2206,
								112,
								134,
								308
							],
							"name": "KleptoGnomeLootChest",
							"nameLocation": "338:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "KleptoGnomeLootChest.TokenApprovalRef",
									"id": 333,
									"members": [
										{
											"constant": false,
											"id": 332,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "435:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 333,
											"src": "427:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 331,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "399:16:3",
									"nodeType": "StructDefinition",
									"scope": 2206,
									"src": "392:56:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 341,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "486:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "461:68:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "461:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "517:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "522:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 338,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "516:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 339,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "528:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "516:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 344,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "630:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "605:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 342,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "654:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 347,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "757:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "732:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "732:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "781:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 350,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "876:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "851:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "890:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 358,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1009:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "984:65:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1036:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1041:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1036:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 355,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1035:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 356,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1048:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1035:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 361,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1149:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "1124:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1124:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1175:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 366,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "1274:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "1249:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1249:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 363,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1292:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 364,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1297:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1292:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 369,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "1409:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "1384:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1384:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1436:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 374,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "1544:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "1519:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1519:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 371,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1572:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 372,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1577:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "1572:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 377,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "1675:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "1650:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 375,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1650:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1696:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 385,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "1820:30:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "1795:72:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1795:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1859:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "1854:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 382,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1853:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 383,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1866:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1853:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 393,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "1955:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "1930:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 386,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1930:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1975:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1980:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "1975:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 390,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1974:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 391,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1987:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1974:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 396,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2027:32:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2002:64:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 394,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2002:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2062:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 399,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "2104:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2079:128:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 397,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2079:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2141:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2275:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2259:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2259:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2350:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2334:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2334:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2405:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2390:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 404,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2390:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2455:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2440:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 406,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2440:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f259a29e",
									"id": 409,
									"mutability": "mutable",
									"name": "baseURI_",
									"nameLocation": "2485:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2471:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 408,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2471:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5503a0e8",
									"id": 412,
									"mutability": "mutable",
									"name": "uriSuffix",
									"nameLocation": "2514:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2500:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 410,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2500:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 411,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2526:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 417,
									"mutability": "mutable",
									"name": "nftsredeemed",
									"nameLocation": "2561:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2535:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 416,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 413,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2544:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2535:25:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 414,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2553:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 415,
											"nodeType": "ArrayTypeName",
											"src": "2553:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 419,
									"mutability": "mutable",
									"name": "counter",
									"nameLocation": "2585:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2580:12:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 418,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2580:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "onlyapprovedcontractaddress",
									"nameLocation": "2624:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2599:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 422,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 420,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2608:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2599:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 421,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2618:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_checkredemmedphysicalitem",
									"nameLocation": "2708:26:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2658:76:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 428,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 424,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2666:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2658:41:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 427,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 425,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2685:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2677:21:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 426,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2693:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "2791:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2755:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 432,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2763:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2755:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 431,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2774:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "2858:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2822:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 436,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 434,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2830:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2822:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 435,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2841:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "2981:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "2936:60:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
										"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef)"
									},
									"typeName": {
										"id": 441,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2944:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2936:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
											"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 440,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 439,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"2955:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 333,
												"src": "2955:16:3"
											},
											"referencedDeclaration": 333,
											"src": "2955:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage_ptr",
												"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 448,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3107:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2206,
									"src": "3054:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 447,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 443,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3062:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3054:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 446,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 444,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3081:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3073:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 445,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3092:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "3194:102:3",
										"statements": [
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "3205:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3213:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3205:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "3205:13:3"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "3229:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 460,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3239:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3229:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "3229:17:3"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3257:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 464,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3273:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3273:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3257:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "3257:31:3"
											}
										]
									},
									"id": 469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3164:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3150:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3150:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3185:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "3171:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3171:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:44:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3194:0:3"
									},
									"scope": 2206,
									"src": "3138:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "3374:27:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3392:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 473,
												"id": 475,
												"nodeType": "Return",
												"src": "3385:8:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "3318:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3331:2:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3365:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:9:3"
									},
									"scope": 2206,
									"src": "3309:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "3479:39:3",
										"statements": [
											{
												"expression": {
													"id": 482,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "3497:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "3490:20:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "3424:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3436:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3470:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:9:3"
									},
									"scope": 2206,
									"src": "3415:103:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										176
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "3600:253:3",
										"statements": [
											{
												"id": 498,
												"nodeType": "UncheckedBlock",
												"src": "3756:90:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 491,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "3788:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 492,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3804:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3788:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 494,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "3819:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3819:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3788:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 490,
														"id": 497,
														"nodeType": "Return",
														"src": "3781:53:3"
													}
												]
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3539:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3573:8:3"
									},
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3550:2:3"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3591:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:9:3"
									},
									"scope": 2206,
									"src": "3530:323:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "4015:103:3",
										"statements": [
											{
												"id": 511,
												"nodeType": "UncheckedBlock",
												"src": "4036:75:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 506,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "4068:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 507,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4084:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4084:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4068:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 505,
														"id": 510,
														"nodeType": "Return",
														"src": "4061:38:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "3861:84:3",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "3960:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3972:2:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4006:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:9:3"
									},
									"scope": 2206,
									"src": "3951:167:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "4196:38:3",
										"statements": [
											{
												"expression": {
													"id": 518,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "4214:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "4207:19:3"
											}
										]
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "4141:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4153:2:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4187:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:9:3"
									},
									"scope": 2206,
									"src": "4132:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										214
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "4328:161:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 529,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "4343:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4360:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4352:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 530,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4352:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4352:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4343:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "IfStatement",
												"src": "4339:69:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 536,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "4372:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4399:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "4372:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 535,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "4364:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4364:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 539,
													"nodeType": "ExpressionStatement",
													"src": "4364:44:3"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 541,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4426:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 543,
														"indexExpression": {
															"id": 542,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4426:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 544,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4454:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4426:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 528,
												"id": 546,
												"nodeType": "Return",
												"src": "4419:62:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4256:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 525,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4301:8:3"
									},
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4274:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4266:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4266:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:15:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4319:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4318:9:3"
									},
									"scope": 2206,
									"src": "4247:242:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "4572:108:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 555,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "4591:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 557,
																	"indexExpression": {
																		"id": 556,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4610:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4591:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 558,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "4620:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4591:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 560,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4590:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 561,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4645:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4590:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 563,
												"nodeType": "Return",
												"src": "4583:89:3"
											}
										]
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "4511:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4533:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4525:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4524:15:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4563:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4562:9:3"
									},
									"scope": 2206,
									"src": "4502:178:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "4764:108:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 572,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "4783:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 574,
																	"indexExpression": {
																		"id": 573,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "4802:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4783:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 575,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "4812:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4783:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 577,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4782:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 578,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4837:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4782:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 580,
												"nodeType": "Return",
												"src": "4775:89:3"
											}
										]
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "4703:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4725:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "4717:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4717:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4716:15:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "4755:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4754:9:3"
									},
									"scope": 2206,
									"src": "4694:178:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "4949:74:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 591,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "4974:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 593,
																"indexExpression": {
																	"id": 592,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "4993:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4974:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 594,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "5003:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4974:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4967:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 589,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4967:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4967:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 588,
												"id": 597,
												"nodeType": "Return",
												"src": "4960:55:3"
											}
										]
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "4895:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4911:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4903:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4902:15:3"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4941:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 586,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4941:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4940:8:3"
									},
									"scope": 2206,
									"src": "4886:137:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5098:343:3",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "5117:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "5109:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5109:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"baseExpression": {
														"id": 608,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "5126:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 610,
													"indexExpression": {
														"id": 609,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5145:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5126:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5109:42:3"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "5170:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "5162:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5162:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"nodeType": "VariableDeclarationStatement",
												"src": "5162:17:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5264:42:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5279:16:3",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "5292:3:3"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "5279:9:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 603,
														"isOffset": false,
														"isSlot": false,
														"src": "5292:3:3",
														"valueSize": 1
													},
													{
														"declaration": 613,
														"isOffset": false,
														"isSlot": false,
														"src": "5279:9:3",
														"valueSize": 1
													}
												],
												"id": 615,
												"nodeType": "InlineAssembly",
												"src": "5255:51:3"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 616,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5316:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 617,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "5326:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 618,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "5335:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5326:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 620,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5325:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 621,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "5363:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 622,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "5376:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5363:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 624,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5362:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5325:63:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5316:72:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "5316:72:3"
											},
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 628,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5399:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 630,
														"indexExpression": {
															"id": 629,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "5418:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5399:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 631,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5427:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5399:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "5399:34:3"
											}
										]
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "5046:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5062:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5054:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5054:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "5076:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5069:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 602,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5069:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5053:27:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5098:0:3"
									},
									"scope": 2206,
									"src": "5037:404:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										183
									],
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "5546:271:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "5587:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5602:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "5587:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "5664:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "5664:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5587:102:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 650,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "5741:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "5741:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5587:179:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 642,
												"id": 654,
												"nodeType": "Return",
												"src": "5567:199:3"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5464:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 639,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5522:8:3"
									},
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5489:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5482:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5482:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:20:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5540:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5540:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5539:6:3"
									},
									"scope": 2206,
									"src": "5455:362:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5899:31:3",
										"statements": [
											{
												"expression": {
													"id": 662,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "5917:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 661,
												"id": 663,
												"nodeType": "Return",
												"src": "5910:12:3"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "5839:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 658,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5866:8:3"
									},
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5843:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5884:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5884:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5883:15:3"
									},
									"scope": 2206,
									"src": "5830:100:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										290
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "6015:33:3",
										"statements": [
											{
												"expression": {
													"id": 671,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 407,
													"src": "6033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 670,
												"id": 672,
												"nodeType": "Return",
												"src": "6026:14:3"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "5953:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5982:8:3"
									},
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5959:2:3"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6000:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6000:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:15:3"
									},
									"scope": 2206,
									"src": "5944:104:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										297
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "6150:249:3",
										"statements": [
											{
												"condition": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6165:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 683,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "6174:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 682,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "6166:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6166:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "6161:68:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 687,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "6192:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6220:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "6192:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 686,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "6184:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6184:45:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 690,
													"nodeType": "ExpressionStatement",
													"src": "6184:45:3"
												}
											},
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "6256:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 718,
														"src": "6242:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 692,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6242:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 694,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6266:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6242:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 699,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "6300:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6294:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 697,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6294:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6294:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6309:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6294:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6319:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6294:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6389:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6294:97:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 708,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "6347:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 710,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6366:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 709,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2197,
																			"src": "6356:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6356:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 712,
																		"name": "uriSuffix",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "6375:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"expression": {
																		"id": 706,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "6330:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6334:12:3",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "6330:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6330:55:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6323:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 704,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "6323:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6323:63:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 681,
												"id": 717,
												"nodeType": "Return",
												"src": "6287:104:3"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "6071:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6117:8:3"
									},
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6088:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "6080:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6079:17:3"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "6135:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6135:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6134:15:3"
									},
									"scope": 2206,
									"src": "6062:337:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "6727:34:3",
										"statements": [
											{
												"expression": {
													"id": 725,
													"name": "baseURI_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "6745:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 724,
												"id": 726,
												"nodeType": "Return",
												"src": "6738:15:3"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "6412:238:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "6670:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6678:2:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "6712:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 722,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6711:15:3"
									},
									"scope": 2206,
									"src": "6661:100:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "6841:41:3",
										"statements": [
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 735,
														"name": "baseURI_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6852:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 736,
														"name": "_newBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "6863:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6852:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "6852:22:3"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 733,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 732,
												"name": "onlyOwner",
												"nameLocations": [
													"6831:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6831:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6831:9:3"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "6786:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "_newBaseURI",
												"nameLocation": "6811:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "6797:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6797:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6796:27:3"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6841:0:3"
									},
									"scope": 2206,
									"src": "6777:105:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "6962:41:3",
										"statements": [
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "uriSuffix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "6973:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 748,
														"name": "_uriSuffix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "6985:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6973:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "6973:22:3"
											}
										]
									},
									"functionSelector": "16ba10e0",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 745,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 744,
												"name": "onlyOwner",
												"nameLocations": [
													"6952:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6952:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6952:9:3"
										}
									],
									"name": "setUriSuffix",
									"nameLocation": "6904:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "_uriSuffix",
												"nameLocation": "6931:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "6917:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6917:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6916:26:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6962:0:3"
									},
									"scope": 2206,
									"src": "6895:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "7068:75:3",
										"statements": [
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 757,
															"name": "onlyapprovedcontractaddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7088:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 759,
														"indexExpression": {
															"id": 758,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "7116:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7088:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7122:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7088:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "7088:38:3"
											}
										]
									},
									"functionSelector": "b6b285d9",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setapprovedcontractaddress",
									"nameLocation": "7020:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "7055:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "7047:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7047:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7046:13:3"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7068:0:3"
									},
									"scope": 2206,
									"src": "7011:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "7241:153:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 772,
																	"name": "onlyapprovedcontractaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "7268:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 775,
																"indexExpression": {
																	"expression": {
																		"id": 773,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7296:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7300:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7296:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7268:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7310:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "7268:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f7420617070726f7665642020746f206d696e74",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7316:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
																"typeString": "literal_string \"you are not approved  to mint\""
															},
															"value": "you are not approved  to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad12ad8905d6cc28a553b35d7b676c098533b356943a7ddf618713e8dbd747b5",
																"typeString": "literal_string \"you are not approved  to mint\""
															}
														],
														"id": 771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7260:88:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "7260:88:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "7366:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "7371:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 781,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1847,
															1862
														],
														"referencedDeclaration": 1862,
														"src": "7356:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7356:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "7356:22:3"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "7165:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7188:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7180:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7180:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7210:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7202:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7169:64:3"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7241:0:3"
									},
									"scope": 2206,
									"src": "7156:238:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "7455:196:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 794,
																		"name": "nftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "7482:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 793,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "7474:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7474:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 796,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7490:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7494:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7490:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7474:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7466:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7466:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "7466:35:3"
											},
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 801,
																"name": "_checkredemmedphysicalitem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "7512:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 805,
															"indexExpression": {
																"expression": {
																	"id": 802,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7539:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7543:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7539:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7512:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 806,
														"indexExpression": {
															"id": 804,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "7551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7512:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7558:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7512:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "7512:50:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "7605:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 810,
																"name": "nftsredeemed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "7575:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 813,
															"indexExpression": {
																"expression": {
																	"id": 811,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7588:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7592:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7588:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7575:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7600:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7575:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7575:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "7575:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "nftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "7635:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1936,
															2089
														],
														"referencedDeclaration": 1936,
														"src": "7629:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7629:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "7629:12:3"
											}
										]
									},
									"functionSelector": "dc76668d",
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemPhysicalItem",
									"nameLocation": "7417:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "7442:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "7436:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7436:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7435:13:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7455:0:3"
									},
									"scope": 2206,
									"src": "7408:243:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "7731:72:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 830,
															"name": "_checkredemmedphysicalitem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7750:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 833,
														"indexExpression": {
															"expression": {
																"id": 831,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7777:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7781:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7777:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7750:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 835,
													"indexExpression": {
														"id": 834,
														"name": "nftId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "7789:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7750:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 829,
												"id": 836,
												"nodeType": "Return",
												"src": "7743:52:3"
											}
										]
									},
									"functionSelector": "f0c7b3aa",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkredemmedphysicalitem",
									"nameLocation": "7669:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "7700:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "7695:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7695:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7694:12:3"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "7726:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7726:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7725:6:3"
									},
									"scope": 2206,
									"src": "7659:144:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "7887:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 844,
														"name": "nftsredeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "7903:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 847,
													"indexExpression": {
														"expression": {
															"id": 845,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7916:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7920:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7916:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7903:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 843,
												"id": 848,
												"nodeType": "Return",
												"src": "7896:31:3"
											}
										]
									},
									"functionSelector": "50caa341",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkredeemednftid",
									"nameLocation": "7832:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7850:2:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "7872:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 840,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7872:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 841,
													"nodeType": "ArrayTypeName",
													"src": "7872:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:16:3"
									},
									"scope": 2206,
									"src": "7823:112:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										221
									],
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "8027:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 863,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "8080:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 862,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "8061:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8061:27:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8053:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 860,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "8053:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8053:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8045:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 858,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8045:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 857,
												"id": 867,
												"nodeType": "Return",
												"src": "8038:52:3"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "7955:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 854,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8000:8:3"
									},
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7971:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "7963:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7962:17:3"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "8018:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8017:9:3"
									},
									"scope": 2206,
									"src": "7946:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "8205:73:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 879,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "8261:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 878,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "8242:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8242:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "8223:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$171_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8223:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 882,
												"nodeType": "Return",
												"src": "8216:54:3"
											}
										]
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "8121:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8142:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "8134:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8133:17:3"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "8182:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 873,
														"name": "TokenOwnership",
														"nameLocations": [
															"8182:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 171,
														"src": "8182:14:3"
													},
													"referencedDeclaration": 171,
													"src": "8182:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8181:23:3"
									},
									"scope": 2206,
									"src": "8112:166:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "8383:70:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 893,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "8420:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 895,
															"indexExpression": {
																"id": 894,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "8438:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8420:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "8401:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$171_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8401:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 891,
												"id": 897,
												"nodeType": "Return",
												"src": "8394:51:3"
											}
										]
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "8301:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "8314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8313:15:3"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "8360:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 888,
														"name": "TokenOwnership",
														"nameLocations": [
															"8360:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 171,
														"src": "8360:14:3"
													},
													"referencedDeclaration": 171,
													"src": "8360:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8359:23:3"
									},
									"scope": 2206,
									"src": "8292:161:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "8552:55:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 906,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8570:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 908,
														"indexExpression": {
															"id": 907,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "8588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8570:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8598:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8570:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 905,
												"id": 911,
												"nodeType": "Return",
												"src": "8563:36:3"
											}
										]
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "8476:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8508:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "8500:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8500:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8499:15:3"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "8546:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8546:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:6:3"
									},
									"scope": 2206,
									"src": "8467:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "8685:132:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 918,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8700:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 920,
														"indexExpression": {
															"id": 919,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "8718:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8700:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8728:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8700:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 932,
												"nodeType": "IfStatement",
												"src": "8696:114:3",
												"trueBody": {
													"id": 931,
													"nodeType": "Block",
													"src": "8731:79:3",
													"statements": [
														{
															"expression": {
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 923,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "8746:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 925,
																	"indexExpression": {
																		"id": 924,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "8764:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8746:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 927,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "8792:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 926,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "8773:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8773:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8746:52:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 930,
															"nodeType": "ExpressionStatement",
															"src": "8746:52:3"
														}
													]
												}
											}
										]
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "8630:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "8653:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8653:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8652:15:3"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8685:0:3"
									},
									"scope": 2206,
									"src": "8621:196:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "8914:1113:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 941,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "8929:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8929:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 943,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "8948:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8929:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "8925:1037:3",
												"trueBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "8957:1005:3",
													"statements": [
														{
															"expression": {
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 945,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "8972:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 946,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "8981:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 948,
																	"indexExpression": {
																		"id": 947,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "8999:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8981:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8972:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 950,
															"nodeType": "ExpressionStatement",
															"src": "8972:35:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 951,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "9107:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9117:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9107:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 992,
															"nodeType": "IfStatement",
															"src": "9103:772:3",
															"trueBody": {
																"id": 991,
																"nodeType": "Block",
																"src": "9120:755:3",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 954,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "9143:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 955,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "9154:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9143:24:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 962,
																		"nodeType": "IfStatement",
																		"src": "9139:77:3",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 958,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 148,
																							"src": "9177:29:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 959,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9207:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "9177:38:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 957,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2205,
																					"src": "9169:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 960,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9169:47:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 961,
																			"nodeType": "ExpressionStatement",
																			"src": "9169:47:3"
																		}
																	},
																	{
																		"body": {
																			"id": 989,
																			"nodeType": "Block",
																			"src": "9262:598:3",
																			"statements": [
																				{
																					"id": 970,
																					"nodeType": "UncheckedBlock",
																					"src": "9285:98:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 968,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 963,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 939,
																									"src": "9322:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 964,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 433,
																										"src": "9331:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 967,
																									"indexExpression": {
																										"id": 966,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "9349:9:3",
																										"subExpression": {
																											"id": 965,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 936,
																											"src": "9351:7:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "9331:28:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "9322:37:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 969,
																							"nodeType": "ExpressionStatement",
																							"src": "9322:37:3"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 973,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 971,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 939,
																							"src": "9409:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 972,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9419:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9409:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 975,
																					"nodeType": "IfStatement",
																					"src": "9405:25:3",
																					"trueBody": {
																						"id": 974,
																						"nodeType": "Continue",
																						"src": "9422:8:3"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 980,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 978,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 976,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 939,
																								"src": "9457:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 977,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 366,
																								"src": "9466:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9457:24:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 979,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9485:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9457:29:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 983,
																					"nodeType": "IfStatement",
																					"src": "9453:48:3",
																					"trueBody": {
																						"expression": {
																							"id": 981,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 939,
																							"src": "9495:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 940,
																						"id": 982,
																						"nodeType": "Return",
																						"src": "9488:13:3"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 985,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 148,
																									"src": "9801:29:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 986,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "9831:8:3",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "9801:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 984,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2205,
																							"src": "9793:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 987,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9793:47:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 988,
																					"nodeType": "ExpressionStatement",
																					"src": "9793:47:3"
																				}
																			]
																		},
																		"id": 990,
																		"nodeType": "ForStatement",
																		"src": "9253:607:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 993,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "9906:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 994,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "9915:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9906:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9934:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9906:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1000,
															"nodeType": "IfStatement",
															"src": "9902:48:3",
															"trueBody": {
																"expression": {
																	"id": 998,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "9944:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 940,
																"id": 999,
																"nodeType": "Return",
																"src": "9937:13:3"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1004,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "9980:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10010:8:3",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "9980:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1003,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "9972:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9972:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "9972:47:3"
											}
										]
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "8840:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8867:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "8859:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8858:17:3"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "8906:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "8898:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8898:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8897:16:3"
									},
									"scope": 2206,
									"src": "8831:1196:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "10140:267:3",
										"statements": [
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1017,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10151:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10161:4:3",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 164,
														"src": "10151:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1024,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "10184:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10176:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1022,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "10176:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10176:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10168:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1020,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10168:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10168:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10151:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "10151:41:3"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1029,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10203:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10213:14:3",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 166,
														"src": "10203:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1034,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "10237:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1035,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "10247:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10237:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10230:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1032,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "10230:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10230:41:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "10203:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "10203:68:3"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1040,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10282:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10292:6:3",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 168,
														"src": "10282:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1043,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "10301:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1044,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "10310:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10301:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10329:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10301:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10282:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "10282:48:3"
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1050,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10341:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10351:9:3",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 170,
														"src": "10341:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1055,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "10370:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1056,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "10380:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10370:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10363:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1053,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "10363:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10363:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "10341:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "10341:58:3"
											}
										]
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "10050:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "10077:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "10069:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10068:16:3"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "10129:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "10107:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$171_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1013,
														"name": "TokenOwnership",
														"nameLocations": [
															"10107:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 171,
														"src": "10107:14:3"
													},
													"referencedDeclaration": 171,
													"src": "10107:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$171_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10106:33:3"
									},
									"scope": 2206,
									"src": "10041:366:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "10517:354:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10537:327:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10649:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10662:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "10669:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10658:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10658:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "10649:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10780:73:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10793:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "10807:23:3"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "10832:9:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10832:11:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10803:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10803:41:3"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "10846:5:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10800:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10800:52:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10790:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:63:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10780:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 393,
														"isOffset": false,
														"isSlot": false,
														"src": "10669:16:3",
														"valueSize": 1
													},
													{
														"declaration": 361,
														"isOffset": false,
														"isSlot": false,
														"src": "10807:23:3",
														"valueSize": 1
													},
													{
														"declaration": 1066,
														"isOffset": false,
														"isSlot": false,
														"src": "10846:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1064,
														"isOffset": false,
														"isSlot": false,
														"src": "10649:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1064,
														"isOffset": false,
														"isSlot": false,
														"src": "10662:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1064,
														"isOffset": false,
														"isSlot": false,
														"src": "10793:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1069,
														"isOffset": false,
														"isSlot": false,
														"src": "10780:6:3",
														"valueSize": 1
													}
												],
												"id": 1071,
												"nodeType": "InlineAssembly",
												"src": "10528:336:3"
											}
										]
									},
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10430:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10457:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "10449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10449:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "10472:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "10464:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10464:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10448:30:3"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10509:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "10501:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10501:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10500:16:3"
									},
									"scope": 2206,
									"src": "10421:450:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "10970:238:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11056:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11134:56:3",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "11148:24:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "11177:8:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11174:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11174:15:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "11144:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11144:46:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11134:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 369,
														"isOffset": false,
														"isSlot": false,
														"src": "11148:24:3",
														"valueSize": 1
													},
													{
														"declaration": 1075,
														"isOffset": false,
														"isSlot": false,
														"src": "11177:8:3",
														"valueSize": 1
													},
													{
														"declaration": 1078,
														"isOffset": false,
														"isSlot": false,
														"src": "11134:6:3",
														"valueSize": 1
													}
												],
												"id": 1080,
												"nodeType": "InlineAssembly",
												"src": "11047:154:3"
											}
										]
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "10893:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "10922:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "10914:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10914:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10913:18:3"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10962:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "10954:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10954:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10953:16:3"
									},
									"scope": 2206,
									"src": "10884:324:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										257
									],
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "11300:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "11320:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1092,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "11324:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11333:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1090,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1876,
															1925
														],
														"referencedDeclaration": 1925,
														"src": "11311:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11311:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "11311:27:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "11231:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1088,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11291:8:3"
									},
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11247:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "11239:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11259:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "11251:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11251:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11238:29:3"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11300:0:3"
									},
									"scope": 2206,
									"src": "11222:124:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										271
									],
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "11445:142:3",
										"statements": [
											{
												"condition": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11460:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1106,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "11469:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1105,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "11461:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11461:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "11456:73:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1110,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "11487:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11520:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "11487:41:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1109,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "11479:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11479:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1113,
													"nodeType": "ExpressionStatement",
													"src": "11479:50:3"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1115,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "11549:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
																"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef storage ref)"
															}
														},
														"id": 1117,
														"indexExpression": {
															"id": 1116,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "11565:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11549:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage",
															"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef storage ref"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11574:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 332,
													"src": "11549:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1104,
												"id": 1119,
												"nodeType": "Return",
												"src": "11542:37:3"
											}
										]
									},
									"functionSelector": "081812fc",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "11369:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1101,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11418:8:3"
									},
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11389:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "11381:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11381:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11380:17:3"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "11436:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11435:9:3"
									},
									"scope": 2206,
									"src": "11360:227:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										264
									],
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "11684:150:3",
										"statements": [
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1129,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "11695:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1133,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1130,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "11714:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11714:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11695:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1134,
														"indexExpression": {
															"id": 1132,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "11735:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11695:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1135,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "11747:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11695:60:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "11695:60:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1139,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "11786:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11786:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "11807:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "11817:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1138,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "11771:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11771:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "EmitStatement",
												"src": "11766:60:3"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "11609:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11675:8:3"
									},
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "11627:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11650:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "11645:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11645:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11626:33:3"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11684:0:3"
									},
									"scope": 2206,
									"src": "11600:234:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										280
									],
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "11950:61:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1156,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "11968:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1158,
														"indexExpression": {
															"id": 1157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "11987:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11968:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1160,
													"indexExpression": {
														"id": 1159,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "11994:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11968:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1161,
												"nodeType": "Return",
												"src": "11961:42:3"
											}
										]
									},
									"functionSelector": "e985e9c5",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "11856:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11926:8:3"
									},
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11881:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11873:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11873:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11896:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11888:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11888:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11872:33:3"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11944:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11944:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11943:6:3"
									},
									"scope": 2206,
									"src": "11847:164:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "12102:290:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1170,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "12117:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12117:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1172,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "12136:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12117:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1203,
												"nodeType": "IfStatement",
												"src": "12113:272:3",
												"trueBody": {
													"id": 1202,
													"nodeType": "Block",
													"src": "12145:240:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1174,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "12164:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1175,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "12174:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12164:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1201,
															"nodeType": "IfStatement",
															"src": "12160:214:3",
															"trueBody": {
																"id": 1200,
																"nodeType": "Block",
																"src": "12189:185:3",
																"statements": [
																	{
																		"assignments": [
																			1178
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1178,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "12216:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1200,
																				"src": "12208:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1177,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12208:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1179,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12208:14:3"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "12292:9:3",
																				"subExpression": {
																					"id": 1188,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "12294:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1190,
																			"nodeType": "ExpressionStatement",
																			"src": "12292:9:3"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 1184,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1180,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1178,
																							"src": "12249:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 1181,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 433,
																								"src": "12258:17:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 1183,
																							"indexExpression": {
																								"id": 1182,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1165,
																								"src": "12276:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "12258:26:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12249:35:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1185,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "12248:37:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12289:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12248:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1191,
																		"nodeType": "WhileStatement",
																		"src": "12241:60:3"
																	},
																	{
																		"expression": {
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1192,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "12320:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1193,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1178,
																						"src": "12329:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 1194,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 366,
																						"src": "12338:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12329:24:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12357:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "12329:29:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12320:38:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1199,
																		"nodeType": "ExpressionStatement",
																		"src": "12320:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "12033:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12049:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "12041:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12040:17:3"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12094:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "12089:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12089:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12088:13:3"
									},
									"scope": 2206,
									"src": "12024:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "12568:497:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12588:470:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12700:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "12713:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "12720:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12709:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12709:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "12700:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12852:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "12869:9:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "12880:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12865:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12865:32:3"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "12852:9:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12981:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "12997:9:3"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "13008:5:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12994:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12994:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:3"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "13030:15:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13016:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13016:30:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12991:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12991:56:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12981:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 393,
														"isOffset": false,
														"isSlot": false,
														"src": "12720:16:3",
														"valueSize": 1
													},
													{
														"declaration": 393,
														"isOffset": false,
														"isSlot": false,
														"src": "12880:16:3",
														"valueSize": 1
													},
													{
														"declaration": 1207,
														"isOffset": false,
														"isSlot": false,
														"src": "13030:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": false,
														"src": "12852:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": false,
														"src": "12869:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": false,
														"src": "12997:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": false,
														"src": "13019:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1209,
														"isOffset": false,
														"isSlot": false,
														"src": "12700:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1209,
														"isOffset": false,
														"isSlot": false,
														"src": "12713:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1209,
														"isOffset": false,
														"isSlot": false,
														"src": "13008:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1214,
														"isOffset": false,
														"isSlot": false,
														"src": "12981:6:3",
														"valueSize": 1
													}
												],
												"id": 1216,
												"nodeType": "InlineAssembly",
												"src": "12579:479:3"
											}
										]
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "12415:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "12458:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "12450:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12450:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12492:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "12484:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12484:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "12516:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "12508:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12508:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12439:93:3"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12560:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "12555:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12554:13:3"
									},
									"scope": 2206,
									"src": "12406:659:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "13239:324:3",
										"statements": [
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "13275:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "13250:38:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage_ptr",
															"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef"
														},
														"typeName": {
															"id": 1228,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1227,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"13250:16:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 333,
																"src": "13250:16:3"
															},
															"referencedDeclaration": 333,
															"src": "13250:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage_ptr",
																"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"baseExpression": {
														"id": 1230,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "13291:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
															"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef storage ref)"
														}
													},
													"id": 1232,
													"indexExpression": {
														"id": 1231,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "13307:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13291:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage",
														"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13250:65:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13430:126:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13445:41:3",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "13468:18:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "13445:19:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13500:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "13525:19:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "13519:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13519:26:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "13500:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1225,
														"isOffset": false,
														"isSlot": false,
														"src": "13500:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1223,
														"isOffset": false,
														"isSlot": false,
														"src": "13445:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1223,
														"isOffset": false,
														"isSlot": false,
														"src": "13525:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1229,
														"isOffset": false,
														"isSlot": true,
														"src": "13468:18:3",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1234,
												"nodeType": "InlineAssembly",
												"src": "13421:135:3"
											}
										]
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "13087:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13122:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "13114:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13114:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13113:17:3"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "13188:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "13180:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "13217:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "13209:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13209:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13179:54:3"
									},
									"scope": 2206,
									"src": "13078:485:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										250
									],
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "13707:2927:3",
										"statements": [
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "13726:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "13718:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13718:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1251,
												"initialValue": {
													"arguments": [
														{
															"id": 1249,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "13767:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1248,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "13748:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13748:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13718:57:3"
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "13880:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1261,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1238,
																							"src": "13919:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13911:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 1259,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "13911:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13911:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13903:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1257,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13903:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13903:22:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 1264,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "13928:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13903:41:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13895:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1255,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "13895:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13895:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13887:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13887:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13887:59:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13880:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "13880:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1274,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "13979:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13971:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1272,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "13971:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13971:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13963:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13963:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13963:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1277,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "14004:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13963:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "13959:95:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1280,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "14018:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14045:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "14018:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1279,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "14010:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14010:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1283,
													"nodeType": "ExpressionStatement",
													"src": "14010:44:3"
												}
											},
											{
												"assignments": [
													1286,
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "14076:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "14068:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14068:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "14105:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "14097:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1287,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14097:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"arguments": [
														{
															"id": 1290,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "14151:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "14124:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14124:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14067:92:3"
											},
											{
												"condition": {
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14258:69:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1294,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "14284:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1295,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "14301:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1296,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "14307:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14307:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1293,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "14259:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14259:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1312,
												"nodeType": "IfStatement",
												"src": "14254:189:3",
												"trueBody": {
													"condition": {
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14346:44:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1301,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "14364:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1302,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "14370:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14370:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1300,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "14347:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14347:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1311,
													"nodeType": "IfStatement",
													"src": "14342:101:3",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1307,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "14400:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14434:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "14400:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1306,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "14392:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14392:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1310,
														"nodeType": "ExpressionStatement",
														"src": "14392:51:3"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1314,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "14478:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "14484:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1316,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "14488:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14497:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1313,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "14456:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14456:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "14456:43:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14574:186:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14608:141:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "14711:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14732:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "14704:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14704:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14704:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "14592:15:3"
															},
															"nodeType": "YulIf",
															"src": "14589:160:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1288,
														"isOffset": false,
														"isSlot": false,
														"src": "14592:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1286,
														"isOffset": false,
														"isSlot": false,
														"src": "14711:19:3",
														"valueSize": 1
													}
												],
												"id": 1320,
												"nodeType": "InlineAssembly",
												"src": "14565:195:3"
											},
											{
												"id": 1377,
												"nodeType": "UncheckedBlock",
												"src": "14780:1175:3",
												"statements": [
													{
														"expression": {
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "14875:26:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1321,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "14877:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1323,
																"indexExpression": {
																	"id": 1322,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "14896:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14877:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1325,
														"nodeType": "ExpressionStatement",
														"src": "14875:26:3"
													},
													{
														"expression": {
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "14944:24:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1326,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "14946:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1328,
																"indexExpression": {
																	"id": 1327,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "14965:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14946:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1330,
														"nodeType": "ExpressionStatement",
														"src": "14944:24:3"
													},
													{
														"expression": {
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1331,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "15026:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1333,
																"indexExpression": {
																	"id": 1332,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "15044:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "15026:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1335,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "15092:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1336,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 374,
																			"src": "15113:25:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1338,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1238,
																					"src": "15156:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1339,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1240,
																					"src": "15162:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1340,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1247,
																					"src": "15166:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1337,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2178,
																				"src": "15141:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15141:45:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15113:73:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1334,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "15055:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15055:146:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15026:175:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1345,
														"nodeType": "ExpressionStatement",
														"src": "15026:175:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1346,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "15321:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1347,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "15343:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15321:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15372:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15321:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1376,
														"nodeType": "IfStatement",
														"src": "15317:627:3",
														"trueBody": {
															"id": 1375,
															"nodeType": "Block",
															"src": "15375:569:3",
															"statements": [
																{
																	"assignments": [
																		1352
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1352,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "15402:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1375,
																			"src": "15394:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1351,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15394:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1356,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1353,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1242,
																			"src": "15416:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15426:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15416:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15394:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1357,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 433,
																				"src": "15549:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1359,
																			"indexExpression": {
																				"id": 1358,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "15567:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15549:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15583:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15549:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1374,
																	"nodeType": "IfStatement",
																	"src": "15545:384:3",
																	"trueBody": {
																		"id": 1373,
																		"nodeType": "Block",
																		"src": "15586:343:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1362,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1352,
																						"src": "15672:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1363,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 401,
																						"src": "15687:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15672:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1372,
																				"nodeType": "IfStatement",
																				"src": "15668:242:3",
																				"trueBody": {
																					"id": 1371,
																					"nodeType": "Block",
																					"src": "15702:208:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 1369,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1365,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 433,
																										"src": "15834:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1367,
																									"indexExpression": {
																										"id": 1366,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1352,
																										"src": "15852:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "15834:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1368,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1247,
																									"src": "15867:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15834:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1370,
																							"nodeType": "ExpressionStatement",
																							"src": "15834:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "16065:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "16057:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16057:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1389,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1384,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "16092:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16084:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1382,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "16084:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16084:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16076:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1380,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16076:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16076:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1387,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "16099:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16076:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16057:58:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16135:368:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16216:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16273:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "16328:25:3"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "16386:4:3"
																	},
																	{
																		"name": "toMasked",
																		"nodeType": "YulIdentifier",
																		"src": "16420:8:3"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "16456:7:3"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nodeType": "YulIdentifier",
																	"src": "16193:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16193:299:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16193:299:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 399,
														"isOffset": false,
														"isSlot": false,
														"src": "16328:25:3",
														"valueSize": 1
													},
													{
														"declaration": 1238,
														"isOffset": false,
														"isSlot": false,
														"src": "16386:4:3",
														"valueSize": 1
													},
													{
														"declaration": 1379,
														"isOffset": false,
														"isSlot": false,
														"src": "16420:8:3",
														"valueSize": 1
													},
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "16456:7:3",
														"valueSize": 1
													}
												],
												"id": 1390,
												"nodeType": "InlineAssembly",
												"src": "16126:377:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "16517:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16529:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16517:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "16513:58:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1395,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "16540:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16562:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "16540:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1394,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "16532:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16532:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1398,
													"nodeType": "ExpressionStatement",
													"src": "16532:39:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "16605:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "16611:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "16615:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16624:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1400,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "16584:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16584:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "16584:42:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13585:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13698:8:3"
									},
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13616:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "13608:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13608:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13639:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "13631:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13631:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "13652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13597:77:3"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13707:0:3"
									},
									"scope": 2206,
									"src": "13576:3058:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										241
									],
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "16865:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1420,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "16893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "16899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "16903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16912:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1419,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1427,
															1466
														],
														"referencedDeclaration": 1466,
														"src": "16876:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16876:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "16876:39:3"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "16642:82:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16739:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1417,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16856:8:3"
									},
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16774:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "16766:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16797:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "16789:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16789:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16818:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "16810:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16810:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16755:77:3"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16865:0:3"
									},
									"scope": 2206,
									"src": "16730:193:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										232
									],
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "17101:252:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "17125:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "17131:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "17135:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1439,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "17112:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17112:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "17112:31:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1445,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "17158:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17161:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17158:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17166:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17158:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17176:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17158:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1464,
												"nodeType": "IfStatement",
												"src": "17154:192:3",
												"trueBody": {
													"condition": {
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "17196:57:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1451,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "17228:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1452,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "17234:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1453,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "17238:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1454,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "17247:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1450,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "17197:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17197:56:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1463,
													"nodeType": "IfStatement",
													"src": "17192:154:3",
													"trueBody": {
														"id": 1462,
														"nodeType": "Block",
														"src": "17255:91:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1458,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 154,
																				"src": "17282:38:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "17321:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "17282:47:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1457,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "17274:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17274:56:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1461,
																"nodeType": "ExpressionStatement",
																"src": "17274:56:3"
															}
														]
													}
												}
											}
										]
									},
									"functionSelector": "b88d4fde",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16946:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1437,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17092:8:3"
									},
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16981:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "16973:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17004:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "16996:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17025:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "17017:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17017:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17056:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "17043:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17043:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16962:106:3"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17101:0:3"
									},
									"scope": 2206,
									"src": "16937:416:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "17524:2:3",
										"statements": []
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "17376:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17416:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "17408:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17408:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17439:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "17431:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "17460:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "17452:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17452:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17491:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "17483:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17483:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17397:109:3"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17524:0:3"
									},
									"scope": 2206,
									"src": "17367:159:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "17695:2:3",
										"statements": []
									},
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "17548:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17587:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17579:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17579:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17610:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17602:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17602:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "17631:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17623:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17662:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17654:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17654:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17568:109:3"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17695:0:3"
									},
									"scope": 2206,
									"src": "17539:158:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "17879:522:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1524,
															"nodeType": "Block",
															"src": "18031:98:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1516,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1514,
																			"src": "18053:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1518,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1494,
																							"src": "18088:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1517,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "18063:24:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$326_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18063:28:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$326",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "18092:16:3",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 325,
																				"src": "18063:45:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18109:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18063:54:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "18053:64:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1502,
																	"id": 1523,
																	"nodeType": "Return",
																	"src": "18046:71:3"
																}
															]
														},
														"errorName": "",
														"id": 1525,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1515,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1514,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "18013:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1525,
																	"src": "18006:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1513,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "18006:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "17991:39:3"
														},
														"src": "17983:146:3"
													},
													{
														"block": {
															"id": 1541,
															"nodeType": "Block",
															"src": "18158:236:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1529,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "18177:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18184:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "18177:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18194:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "18177:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1539,
																	"nodeType": "IfStatement",
																	"src": "18173:115:3",
																	"trueBody": {
																		"id": 1538,
																		"nodeType": "Block",
																		"src": "18197:91:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1534,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 154,
																								"src": "18224:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1535,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "18263:8:3",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "18224:47:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1533,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2205,
																						"src": "18216:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18216:56:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1537,
																				"nodeType": "ExpressionStatement",
																				"src": "18216:56:3"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "18311:72:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18341:2:3",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "18345:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18337:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18337:15:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "18360:6:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "18354:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18354:13:3"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "18330:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18330:38:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18330:38:3"
																			}
																		]
																	},
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1527,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "18345:6:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1527,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "18360:6:3",
																			"valueSize": 1
																		}
																	],
																	"id": 1540,
																	"nodeType": "InlineAssembly",
																	"src": "18302:81:3"
																}
															]
														},
														"errorName": "",
														"id": 1542,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1528,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1527,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "18150:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1542,
																	"src": "18137:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1526,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "18137:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "18136:21:3"
														},
														"src": "18130:264:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1507,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "17940:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17940:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "17961:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "17967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1511,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "17976:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1504,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1494,
																	"src": "17919:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1503,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "17894:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$326_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17894:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$326",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17923:16:3",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 325,
														"src": "17894:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17894:88:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1543,
												"nodeType": "TryStatement",
												"src": "17890:504:3"
											}
										]
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "17719:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "17760:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17791:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "17783:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17783:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17812:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "17804:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17804:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17843:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "17830:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17830:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17749:106:3"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "17873:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17873:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17872:6:3"
									},
									"scope": 2206,
									"src": "17710:691:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "18477:2243:3",
										"statements": [
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "18496:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "18488:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18488:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"id": 1554,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "18511:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18488:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1556,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "18539:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18551:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18539:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "18535:53:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1560,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "18562:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18579:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "18562:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1559,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "18554:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18554:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1563,
													"nodeType": "ExpressionStatement",
													"src": "18554:34:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18631:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18623:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1566,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18623:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18623:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "18635:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "18639:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1572,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "18653:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1565,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "18601:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18601:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "18601:61:3"
											},
											{
												"id": 1651,
												"nodeType": "UncheckedBlock",
												"src": "18850:1792:3",
												"statements": [
													{
														"expression": {
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1575,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "19101:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1577,
																"indexExpression": {
																	"id": 1576,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "19119:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19101:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1579,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "19172:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1581,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1549,
																					"src": "19214:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1580,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1082,
																				"src": "19193:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19193:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1586,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19249:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1585,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19241:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1584,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "19241:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19241:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1588,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1547,
																					"src": "19253:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1589,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19257:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1583,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2178,
																				"src": "19226:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19226:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19193:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1578,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "19135:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19135:139:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19101:173:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1594,
														"nodeType": "ExpressionStatement",
														"src": "19101:173:3"
													},
													{
														"expression": {
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1595,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "19492:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1597,
																"indexExpression": {
																	"id": 1596,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "19511:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19492:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1598,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "19518:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1601,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1599,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19531:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1600,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 344,
																							"src": "19536:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19531:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1602,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19530:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19561:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "19530:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19529:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19518:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19492:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1608,
														"nodeType": "ExpressionStatement",
														"src": "19492:71:3"
													},
													{
														"assignments": [
															1610
														],
														"declarations": [
															{
																"constant": false,
																"id": 1610,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "19682:8:3",
																"nodeType": "VariableDeclaration",
																"scope": 1651,
																"src": "19674:16:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1609,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19674:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1620,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1615,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1547,
																				"src": "19709:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19701:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1613,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "19701:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19701:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19693:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1611,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "19693:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19693:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1618,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "19716:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19693:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19674:58:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1621,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "19753:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19753:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1629,
														"nodeType": "IfStatement",
														"src": "19749:54:3",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1625,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 144,
																			"src": "19776:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19794:8:3",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "19776:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1624,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2205,
																	"src": "19768:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19768:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "19768:35:3"
														}
													},
													{
														"assignments": [
															1631
														],
														"declarations": [
															{
																"constant": false,
																"id": 1631,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "19828:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 1651,
																"src": "19820:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1630,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19820:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1635,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1632,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "19834:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1633,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "19849:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19834:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19820:37:3"
													},
													{
														"assignments": [
															1637
														],
														"declarations": [
															{
																"constant": false,
																"id": 1637,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "19880:7:3",
																"nodeType": "VariableDeclaration",
																"scope": 1651,
																"src": "19872:15:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19872:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1639,
														"initialValue": {
															"id": 1638,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "19890:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19872:30:3"
													},
													{
														"body": {
															"id": 1641,
															"nodeType": "Block",
															"src": "19922:647:3",
															"statements": [
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "19950:451:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20055:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20120:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "20183:25:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20249:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "20294:8:3"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "20338:7:3"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "20024:4:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20024:358:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20024:358:3"
																			}
																		]
																	},
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 399,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "20183:25:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1610,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "20294:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1637,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "20338:7:3",
																			"valueSize": 1
																		}
																	],
																	"id": 1640,
																	"nodeType": "InlineAssembly",
																	"src": "19941:460:3"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "20577:9:3",
																"subExpression": {
																	"id": 1642,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "20579:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1644,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "20590:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20577:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1646,
														"nodeType": "DoWhileStatement",
														"src": "19919:676:3"
													},
													{
														"expression": {
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1647,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "20611:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1648,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "20627:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20611:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1650,
														"nodeType": "ExpressionStatement",
														"src": "20611:19:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20681:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20673:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20673:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20673:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "20685:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1658,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "20689:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1659,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "20703:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1652,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "20652:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20652:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "20652:60:3"
											}
										]
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18424:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18438:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "18430:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18430:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "18450:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "18442:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18429:30:3"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18477:0:3"
									},
									"scope": 2206,
									"src": "18415:2305:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "20801:1220:3",
										"statements": [
											{
												"assignments": [
													1671
												],
												"declarations": [
													{
														"constant": false,
														"id": 1671,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "20820:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "20812:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20812:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"initialValue": {
													"id": 1672,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 401,
													"src": "20835:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20812:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1674,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "20863:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20877:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20869:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20869:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20869:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20863:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1685,
												"nodeType": "IfStatement",
												"src": "20859:57:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1681,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "20889:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20907:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "20889:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1680,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "20881:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20881:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1684,
													"nodeType": "ExpressionStatement",
													"src": "20881:35:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1686,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "20931:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20943:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20931:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1694,
												"nodeType": "IfStatement",
												"src": "20927:53:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1690,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "20954:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20971:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "20954:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1689,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "20946:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20946:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1693,
													"nodeType": "ExpressionStatement",
													"src": "20946:34:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1695,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "20995:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1696,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "21006:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20995:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "20991:98:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1699,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "21048:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21080:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "21048:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1698,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "21040:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21040:49:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1702,
													"nodeType": "ExpressionStatement",
													"src": "21040:49:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21132:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21124:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1705,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21124:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21124:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "21136:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1710,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "21140:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1711,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "21154:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1704,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "21102:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21102:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "21102:61:3"
											},
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "21275:668:3",
												"statements": [
													{
														"expression": {
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1714,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "21501:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1716,
																"indexExpression": {
																	"id": 1715,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "21520:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21501:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1717,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "21527:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1718,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "21540:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1719,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 344,
																							"src": "21545:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "21540:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1721,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "21539:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21570:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "21539:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21538:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21527:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21501:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1727,
														"nodeType": "ExpressionStatement",
														"src": "21501:71:3"
													},
													{
														"expression": {
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1728,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "21602:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1730,
																"indexExpression": {
																	"id": 1729,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "21620:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21602:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1732,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "21673:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1734,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1667,
																					"src": "21715:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1733,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1082,
																				"src": "21694:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21694:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1739,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "21750:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1738,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21742:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1737,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "21742:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1740,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "21742:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1741,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1665,
																					"src": "21754:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "21758:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1736,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2178,
																				"src": "21727:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21727:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21694:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1731,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "21636:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21636:139:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21602:173:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1747,
														"nodeType": "ExpressionStatement",
														"src": "21602:173:3"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1749,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "21817:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1750,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1671,
																			"src": "21831:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1751,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "21846:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21831:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21857:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "21831:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21868:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21860:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1755,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21860:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21860:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1759,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "21872:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1748,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "21797:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21797:78:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1761,
														"nodeType": "EmitStatement",
														"src": "21792:83:3"
													},
													{
														"expression": {
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1762,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "21892:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1763,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "21908:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1764,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "21923:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21908:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21892:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1767,
														"nodeType": "ExpressionStatement",
														"src": "21892:39:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21982:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21974:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21974:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21974:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "21986:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1775,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "21990:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1776,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "22004:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1769,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "21953:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21953:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "21953:60:3"
											}
										]
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "20741:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20762:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "20754:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "20774:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "20766:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20766:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20753:30:3"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20801:0:3"
									},
									"scope": 2206,
									"src": "20732:1289:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "22154:588:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1790,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "22171:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1791,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "22175:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "22165:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22165:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "22165:19:3"
											},
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "22197:538:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1794,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "22226:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22229:4:3",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "22226:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22234:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "22226:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22244:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22226:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1844,
														"nodeType": "IfStatement",
														"src": "22222:502:3",
														"trueBody": {
															"id": 1843,
															"nodeType": "Block",
															"src": "22247:477:3",
															"statements": [
																{
																	"assignments": [
																		1800
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1800,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "22274:3:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1843,
																			"src": "22266:11:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1799,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22266:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1802,
																	"initialValue": {
																		"id": 1801,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "22280:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22266:27:3"
																},
																{
																	"assignments": [
																		1804
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1804,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "22320:5:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1843,
																			"src": "22312:13:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1803,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22312:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1808,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1805,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "22328:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1806,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "22334:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22328:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22312:30:3"
																},
																{
																	"body": {
																		"id": 1827,
																		"nodeType": "Block",
																		"src": "22364:218:3",
																		"statements": [
																			{
																				"condition": {
																					"id": 1819,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "22391:63:3",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1812,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "22431:1:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1811,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "22423:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1810,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "22423:7:3",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1813,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "22423:10:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1814,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1782,
																								"src": "22435:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1816,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "22439:7:3",
																								"subExpression": {
																									"id": 1815,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1804,
																									"src": "22439:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1817,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1786,
																								"src": "22448:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1809,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1545,
																							"src": "22392:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "22392:62:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1826,
																				"nodeType": "IfStatement",
																				"src": "22387:176:3",
																				"trueBody": {
																					"id": 1825,
																					"nodeType": "Block",
																					"src": "22456:107:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1821,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 154,
																											"src": "22491:38:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1822,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "22530:8:3",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "22491:47:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1820,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2205,
																									"src": "22483:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1823,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "22483:56:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1824,
																							"nodeType": "ExpressionStatement",
																							"src": "22483:56:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1828,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "22590:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1829,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "22598:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22590:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1831,
																	"nodeType": "DoWhileStatement",
																	"src": "22361:242:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1832,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "22668:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1833,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "22685:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22668:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1842,
																	"nodeType": "IfStatement",
																	"src": "22664:44:3",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1838,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "22705:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1837,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "22698:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1836,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "22698:6:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22698:9:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1835,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2205,
																				"src": "22690:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22690:18:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1841,
																		"nodeType": "ExpressionStatement",
																		"src": "22690:18:3"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "22043:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22071:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "22063:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22063:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "22092:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "22084:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22084:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "22124:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "22111:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22111:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22052:84:3"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22154:0:3"
									},
									"scope": 2206,
									"src": "22034:708:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "22892:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1856,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "22913:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1857,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "22917:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22927:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1855,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1847,
															1862
														],
														"referencedDeclaration": 1847,
														"src": "22903:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22903:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "22903:27:3"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "22750:70:3",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "22835:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22853:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "22845:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22845:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "22865:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "22857:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22857:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22844:30:3"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22892:0:3"
									},
									"scope": 2206,
									"src": "22826:112:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "23014:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1870,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "23034:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1871,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "23038:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23047:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1869,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1876,
															1925
														],
														"referencedDeclaration": 1925,
														"src": "23025:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23025:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "23025:28:3"
											}
										]
									},
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "22959:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22976:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "22968:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "22980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22980:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22967:29:3"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23014:0:3"
									},
									"scope": 2206,
									"src": "22950:111:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "23187:356:3",
										"statements": [
											{
												"assignments": [
													1886
												],
												"declarations": [
													{
														"constant": false,
														"id": 1886,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "23206:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1924,
														"src": "23198:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1885,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23198:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1890,
												"initialValue": {
													"arguments": [
														{
															"id": 1888,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "23222:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1887,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "23214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23214:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23198:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1891,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "23247:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1892,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "23264:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23264:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1894,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "23287:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23264:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23247:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1910,
												"nodeType": "IfStatement",
												"src": "23243:201:3",
												"trueBody": {
													"condition": {
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23311:45:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1898,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "23329:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1899,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "23336:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23336:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1897,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "23312:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23312:44:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1909,
													"nodeType": "IfStatement",
													"src": "23307:137:3",
													"trueBody": {
														"id": 1908,
														"nodeType": "Block",
														"src": "23358:86:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1904,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "23385:33:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "23419:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "23385:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1903,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "23377:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23377:51:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1907,
																"nodeType": "ExpressionStatement",
																"src": "23377:51:3"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1911,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "23456:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$333_storage_$",
																	"typeString": "mapping(uint256 => struct KleptoGnomeLootChest.TokenApprovalRef storage ref)"
																}
															},
															"id": 1913,
															"indexExpression": {
																"id": 1912,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1880,
																"src": "23472:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23456:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$333_storage",
																"typeString": "struct KleptoGnomeLootChest.TokenApprovalRef storage ref"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "23481:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 332,
														"src": "23456:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1915,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "23489:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23456:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "23456:35:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1919,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "23516:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1920,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "23523:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1921,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "23527:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1918,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "23507:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23507:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1923,
												"nodeType": "EmitStatement",
												"src": "23502:33:3"
											}
										]
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "23078:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23105:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "23097:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "23118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23118:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "23149:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "23144:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23144:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23086:83:3"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23187:0:3"
									},
									"scope": 2206,
									"src": "23069:474:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "23605:40:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1931,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "23622:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23631:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1930,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1936,
															2089
														],
														"referencedDeclaration": 2089,
														"src": "23616:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23616:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "23616:21:3"
											}
										]
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "23565:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23579:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "23571:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23570:17:3"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23605:0:3"
									},
									"scope": 2206,
									"src": "23556:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "23727:2770:3",
										"statements": [
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "23746:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "23738:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23738:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1948,
												"initialValue": {
													"arguments": [
														{
															"id": 1946,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "23787:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1945,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "23768:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23768:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23738:57:3"
											},
											{
												"assignments": [
													1950
												],
												"declarations": [
													{
														"constant": false,
														"id": 1950,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "23816:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "23808:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1949,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23808:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1958,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1955,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "23839:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23831:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1953,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "23831:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23831:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "23823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1951,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23823:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23823:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23808:52:3"
											},
											{
												"assignments": [
													1960,
													1962
												],
												"declarations": [
													{
														"constant": false,
														"id": 1960,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "23882:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "23874:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23874:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1962,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "23911:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "23903:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1961,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23903:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1966,
												"initialValue": {
													"arguments": [
														{
															"id": 1964,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "23957:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1963,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "23930:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23930:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23873:92:3"
											},
											{
												"condition": {
													"id": 1967,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1940,
													"src": "23982:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1989,
												"nodeType": "IfStatement",
												"src": "23978:325:3",
												"trueBody": {
													"id": 1988,
													"nodeType": "Block",
													"src": "23997:306:3",
													"statements": [
														{
															"condition": {
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "24102:69:3",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1969,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "24128:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1970,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1950,
																			"src": "24145:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1971,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2187,
																				"src": "24151:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24151:19:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1968,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "24103:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24103:68:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1987,
															"nodeType": "IfStatement",
															"src": "24098:193:3",
															"trueBody": {
																"condition": {
																	"id": 1980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "24194:44:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1976,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "24212:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1977,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "24218:17:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24218:19:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1975,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "24195:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24195:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1986,
																"nodeType": "IfStatement",
																"src": "24190:101:3",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1982,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 150,
																					"src": "24248:33:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "24282:8:3",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "24248:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1981,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2205,
																			"src": "24240:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24240:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1985,
																	"nodeType": "ExpressionStatement",
																	"src": "24240:51:3"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1991,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "24337:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24351:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24343:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1992,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24343:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24343:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1996,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "24355:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24364:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1990,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "24315:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24315:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "24315:51:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "24441:186:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24475:141:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "24578:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24599:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "24571:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24571:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24571:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "24459:15:3"
															},
															"nodeType": "YulIf",
															"src": "24456:160:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1962,
														"isOffset": false,
														"isSlot": false,
														"src": "24459:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1960,
														"isOffset": false,
														"isSlot": false,
														"src": "24578:19:3",
														"valueSize": 1
													}
												],
												"id": 2000,
												"nodeType": "InlineAssembly",
												"src": "24432:195:3"
											},
											{
												"id": 2064,
												"nodeType": "UncheckedBlock",
												"src": "24648:1576:3",
												"statements": [
													{
														"expression": {
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2001,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "24967:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2003,
																"indexExpression": {
																	"id": 2002,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "24986:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24967:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24996:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2005,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "25001:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24996:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2007,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24995:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25026:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24995:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24967:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2011,
														"nodeType": "ExpressionStatement",
														"src": "24967:60:3"
													},
													{
														"expression": {
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2012,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "25265:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2014,
																"indexExpression": {
																	"id": 2013,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "25283:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "25265:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2016,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "25331:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2017,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 366,
																						"src": "25355:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2018,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "25373:25:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25355:43:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "25354:45:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2022,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1950,
																					"src": "25417:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2025,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "25431:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2024,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "25423:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2023,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "25423:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "25423:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2027,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1944,
																					"src": "25435:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2021,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2178,
																				"src": "25402:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25402:53:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25354:101:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2015,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "25294:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25294:176:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25265:205:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2032,
														"nodeType": "ExpressionStatement",
														"src": "25265:205:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2033,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "25590:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2034,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "25612:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25590:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25641:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25590:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2063,
														"nodeType": "IfStatement",
														"src": "25586:627:3",
														"trueBody": {
															"id": 2062,
															"nodeType": "Block",
															"src": "25644:569:3",
															"statements": [
																{
																	"assignments": [
																		2039
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2039,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "25671:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2062,
																			"src": "25663:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2038,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "25663:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2043,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2040,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "25685:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25695:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "25685:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "25663:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2044,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 433,
																				"src": "25818:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2046,
																			"indexExpression": {
																				"id": 2045,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2039,
																				"src": "25836:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "25818:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25852:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25818:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2061,
																	"nodeType": "IfStatement",
																	"src": "25814:384:3",
																	"trueBody": {
																		"id": 2060,
																		"nodeType": "Block",
																		"src": "25855:343:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2051,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2049,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2039,
																						"src": "25941:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2050,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 401,
																						"src": "25956:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25941:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2059,
																				"nodeType": "IfStatement",
																				"src": "25937:242:3",
																				"trueBody": {
																					"id": 2058,
																					"nodeType": "Block",
																					"src": "25971:208:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 2056,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2052,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 433,
																										"src": "26103:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2054,
																									"indexExpression": {
																										"id": 2053,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2039,
																										"src": "26121:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "26103:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2055,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1944,
																									"src": "26136:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "26103:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2057,
																							"nodeType": "ExpressionStatement",
																							"src": "26103:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2066,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "26250:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26264:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26256:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26256:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26256:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2071,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "26268:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2065,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "26241:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26241:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2073,
												"nodeType": "EmitStatement",
												"src": "26236:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2075,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "26308:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26322:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26314:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2076,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26314:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26314:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2080,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "26326:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26335:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2074,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "26287:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26287:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "26287:50:3"
											},
											{
												"id": 2087,
												"nodeType": "UncheckedBlock",
												"src": "26439:51:3",
												"statements": [
													{
														"expression": {
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "26464:14:3",
															"subExpression": {
																"id": 2084,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "26464:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2086,
														"nodeType": "ExpressionStatement",
														"src": "26464:14:3"
													}
												]
											}
										]
									},
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "23667:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23681:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "23673:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23673:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "23695:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "23690:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23690:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23672:37:3"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23727:0:3"
									},
									"scope": 2206,
									"src": "23658:2839:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "26585:466:3",
										"statements": [
											{
												"assignments": [
													2097
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "26604:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 2133,
														"src": "26596:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2101,
												"initialValue": {
													"baseExpression": {
														"id": 2098,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "26613:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2100,
													"indexExpression": {
														"id": 2099,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "26631:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26613:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26596:41:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2102,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "26652:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26662:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26652:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2110,
												"nodeType": "IfStatement",
												"src": "26648:70:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 2106,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "26673:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26709:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "26673:44:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 2105,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "26665:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26665:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2109,
													"nodeType": "ExpressionStatement",
													"src": "26665:53:3"
												}
											},
											{
												"assignments": [
													2112
												],
												"declarations": [
													{
														"constant": false,
														"id": 2112,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "26737:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 2133,
														"src": "26729:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26729:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2113,
												"nodeType": "VariableDeclarationStatement",
												"src": "26729:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "26843:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26858:28:3",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "26877:9:3"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "26858:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2093,
														"isOffset": false,
														"isSlot": false,
														"src": "26877:9:3",
														"valueSize": 1
													},
													{
														"declaration": 2112,
														"isOffset": false,
														"isSlot": false,
														"src": "26858:15:3",
														"valueSize": 1
													}
												],
												"id": 2114,
												"nodeType": "InlineAssembly",
												"src": "26834:63:3"
											},
											{
												"expression": {
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2115,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "26907:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2116,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "26917:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2117,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "26926:30:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26917:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2119,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "26916:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2120,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2112,
																		"src": "26961:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2121,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "26980:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26961:37:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2123,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "26960:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "26916:83:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26907:92:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "26907:92:3"
											},
											{
												"expression": {
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2127,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "27010:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2129,
														"indexExpression": {
															"id": 2128,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "27028:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27010:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2130,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "27037:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27010:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "27010:33:3"
											}
										]
									},
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "26519:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "26543:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "26535:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26535:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "26557:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "26550:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2092,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "26550:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26534:33:3"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26585:0:3"
									},
									"scope": 2206,
									"src": "26510:541:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2145,
										"nodeType": "Block",
										"src": "27210:2:3",
										"statements": []
									},
									"id": 2146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "27074:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27103:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "27095:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27095:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27126:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "27118:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "27146:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "27139:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2139,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "27139:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27084:86:3"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "27202:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2142,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "27202:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27201:8:3"
									},
									"scope": 2206,
									"src": "27065:147:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "27370:167:3",
										"statements": [
											{
												"assignments": [
													2158
												],
												"declarations": [
													{
														"constant": false,
														"id": 2158,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "27388:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "27381:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2157,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "27381:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2165,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2161,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "27407:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2162,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "27430:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27407:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "27400:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2159,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "27400:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27400:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27381:68:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2169,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2148,
																		"src": "27486:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2170,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2150,
																		"src": "27492:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2171,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2158,
																		"src": "27496:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2168,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "27475:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27475:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27467:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2166,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27467:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27467:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2174,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "27511:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27467:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2156,
												"id": 2176,
												"nodeType": "Return",
												"src": "27460:69:3"
											}
										]
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "27235:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27268:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "27260:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27260:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27291:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "27283:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27283:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "27312:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "27304:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27304:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27249:89:3"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "27361:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27361:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27360:9:3"
									},
									"scope": 2206,
									"src": "27226:311:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "27620:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2183,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "27638:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27642:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "27638:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2182,
												"id": 2185,
												"nodeType": "Return",
												"src": "27631:17:3"
											}
										]
									},
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "27560:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27577:2:3"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "27611:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27610:9:3"
									},
									"scope": 2206,
									"src": "27551:105:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "27842:1661:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "27862:1634:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28231:31:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28250:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "28244:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28244:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28257:4:3",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28240:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28240:22:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "28235:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28343:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "28349:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28336:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28336:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28336:15:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28410:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "28421:1:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28424:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "28417:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28417:12:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "28410:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "28501:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28506:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28494:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "28494:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28494:14:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28599:14:3",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "28610:3:3"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "28603:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28862:397:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "28881:18:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "28892:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28897:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "28888:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28888:11:3"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "28881:3:3"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "29045:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29054:2:3",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "29062:4:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "29068:2:3",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "29058:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "29058:13:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29050:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29050:22:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "29037:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29037:36:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29037:36:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "29144:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "29156:4:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29162:2:3",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "29152:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29152:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "29144:4:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "29235:9:3",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "29237:5:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "29229:4:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "29222:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29222:12:3"
																		},
																		"nodeType": "YulIf",
																		"src": "29219:25:3"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "28857:1:3",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "28859:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "28835:21:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "28837:17:3",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "28849:5:3"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "28841:4:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "28831:428:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29275:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "29293:3:3"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "29298:3:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29289:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29289:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29279:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29397:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "29408:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29413:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29404:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29404:14:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "29397:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "29473:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29478:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29466:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29466:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29466:19:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "28410:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "28501:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "28610:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "28881:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "28892:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "29045:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "29298:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "29397:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "29408:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": false,
														"src": "29473:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2190,
														"isOffset": false,
														"isSlot": false,
														"src": "28849:5:3",
														"valueSize": 1
													}
												],
												"id": 2195,
												"nodeType": "InlineAssembly",
												"src": "27853:1643:3"
											}
										]
									},
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "27664:88:3",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "27767:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27785:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "27777:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27777:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27776:15:3"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "27837:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "27823:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27823:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27822:19:3"
									},
									"scope": 2206,
									"src": "27758:1745:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "29623:112:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29643:85:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29665:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nodeType": "YulIdentifier",
																		"src": "29671:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29658:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29658:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29658:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29706:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29712:4:3",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29699:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "29699:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29699:18:3"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2200,
														"isOffset": false,
														"isSlot": false,
														"src": "29671:13:3",
														"valueSize": 1
													}
												],
												"id": 2203,
												"nodeType": "InlineAssembly",
												"src": "29634:94:3"
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "29511:53:3",
										"text": " @dev For more efficient reverts."
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "29579:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "29594:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "29587:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29587:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29586:22:3"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29623:0:3"
									},
									"scope": 2206,
									"src": "29570:165:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2207,
							"src": "329:29409:3",
							"usedErrors": [
								138,
								140,
								142,
								144,
								146,
								148,
								150,
								152,
								154,
								156,
								158,
								160,
								162
							]
						}
					],
					"src": "2:29736:3"
				},
				"id": 3
			}
		}
	}
}